val ls100: List = Cons(7, Cons(6, Cons(3, Cons(6, Cons(9, Cons(8, Cons(5, Cons(0, Cons(2, Cons(8, Cons(1, Cons(5, Cons(2, Cons(2, Cons(8, Cons(2, Cons(7, Cons(9, Cons(8, Cons(2, Cons(2, Cons(5, Cons(3, Cons(5, Cons(6, Cons(5, Cons(6, Cons(6, Cons(2, Cons(8, Cons(0, Cons(7, Cons(3, Cons(9, Cons(0, Cons(4, Cons(1, Cons(4, Cons(3, Cons(6, Cons(4, Cons(4, Cons(4, Cons(2, Cons(7, Cons(4, Cons(7, Cons(1, Cons(3, Cons(6, Cons(2, Cons(2, Cons(0, Cons(7, Cons(6, Cons(7, Cons(9, Cons(3, Cons(6, Cons(0, Cons(8, Cons(2, Cons(4, Cons(2, Cons(6, Cons(3, Cons(4, Cons(6, Cons(3, Cons(8, Cons(8, Cons(3, Cons(8, Cons(2, Cons(2, Cons(0, Cons(1, Cons(9, Cons(2, Cons(3, Cons(6, Cons(9, Cons(2, Cons(4, Cons(0, Cons(8, Cons(6, Cons(4, Cons(5, Cons(2, Cons(4, Cons(5, Cons(9, Cons(3, Cons(5, Cons(0, Cons(0, Cons(6, Cons(1, Cons(6, Nil()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
println("100 " + sorttimerec(ls100))
val ls200: List = Cons(1, Cons(4, Cons(0, Cons(7, Cons(5, Cons(1, Cons(9, Cons(6, Cons(2, Cons(6, Cons(2, Cons(6, Cons(4, Cons(3, Cons(9, Cons(4, Cons(7, Cons(1, Cons(3, Cons(8, Cons(5, Cons(7, Cons(4, Cons(4, Cons(6, Cons(5, Cons(2, Cons(5, Cons(9, Cons(4, Cons(9, Cons(3, Cons(1, Cons(5, Cons(5, Cons(2, Cons(9, Cons(3, Cons(4, Cons(4, Cons(9, Cons(7, Cons(1, Cons(4, Cons(2, Cons(9, Cons(7, Cons(1, Cons(6, Cons(1, Cons(8, Cons(5, Cons(8, Cons(3, Cons(6, Cons(0, Cons(6, Cons(2, Cons(3, Cons(5, Cons(3, Cons(5, Cons(1, Cons(1, Cons(9, Cons(5, Cons(1, Cons(5, Cons(6, Cons(7, Cons(6, Cons(9, Cons(7, Cons(8, Cons(1, Cons(1, Cons(0, Cons(5, Cons(2, Cons(5, Cons(0, Cons(9, Cons(9, Cons(4, Cons(3, Cons(1, Cons(5, Cons(6, Cons(5, Cons(9, Cons(8, Cons(6, Cons(5, Cons(8, Cons(9, Cons(0, Cons(7, Cons(0, Cons(8, Cons(7, Cons(5, Cons(6, Cons(0, Cons(7, Cons(4, Cons(8, Cons(3, Cons(4, Cons(5, Cons(7, Cons(9, Cons(0, Cons(4, Cons(6, Cons(3, Cons(3, Cons(6, Cons(3, Cons(2, Cons(1, Cons(0, Cons(3, Cons(0, Cons(6, Cons(5, Cons(4, Cons(9, Cons(1, Cons(5, Cons(7, Cons(7, Cons(4, Cons(4, Cons(6, Cons(1, Cons(7, Cons(7, Cons(8, Cons(1, Cons(9, Cons(6, Cons(9, Cons(5, Cons(0, Cons(1, Cons(3, Cons(2, Cons(6, Cons(6, Cons(6, Cons(0, Cons(4, Cons(8, Cons(6, Cons(0, Cons(9, Cons(7, Cons(6, Cons(6, Cons(9, Cons(5, Cons(3, Cons(8, Cons(9, Cons(2, Cons(9, Cons(7, Cons(5, Cons(2, Cons(8, Cons(0, Cons(9, Cons(7, Cons(9, Cons(4, Cons(5, Cons(1, Cons(5, Cons(7, Cons(2, Cons(6, Cons(7, Cons(6, Cons(3, Cons(4, Cons(6, Cons(2, Cons(0, Cons(1, Cons(3, Cons(8, Cons(8, Cons(9, Cons(1, Cons(4, Cons(4, Cons(2, Cons(7, Cons(8, Cons(5, Nil()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
println("200 " + sorttimerec(ls200))
val ls300: List = Cons(0, Cons(7, Cons(5, Cons(2, Cons(6, Cons(5, Cons(0, Cons(3, Cons(1, Cons(7, Cons(0, Cons(2, Cons(5, Cons(9, Cons(7, Cons(3, Cons(6, Cons(7, Cons(4, Cons(1, Cons(5, Cons(0, Cons(4, Cons(9, Cons(3, Cons(2, Cons(8, Cons(4, Cons(8, Cons(6, Cons(3, Cons(8, Cons(2, Cons(7, Cons(4, Cons(3, Cons(8, Cons(6, Cons(2, Cons(1, Cons(9, Cons(4, Cons(8, Cons(9, Cons(5, Cons(4, Cons(7, Cons(3, Cons(5, Cons(4, Cons(6, Cons(5, Cons(2, Cons(5, Cons(0, Cons(6, Cons(5, Cons(0, Cons(2, Cons(3, Cons(3, Cons(0, Cons(1, Cons(7, Cons(1, Cons(2, Cons(3, Cons(5, Cons(3, Cons(4, Cons(2, Cons(6, Cons(8, Cons(5, Cons(5, Cons(8, Cons(8, Cons(8, Cons(5, Cons(2, Cons(2, Cons(4, Cons(1, Cons(6, Cons(3, Cons(7, Cons(9, Cons(6, Cons(6, Cons(8, Cons(7, Cons(3, Cons(2, Cons(2, Cons(9, Cons(7, Cons(4, Cons(3, Cons(2, Cons(3, Cons(7, Cons(7, Cons(1, Cons(6, Cons(3, Cons(7, Cons(4, Cons(6, Cons(6, Cons(1, Cons(7, Cons(0, Cons(6, Cons(7, Cons(3, Cons(7, Cons(4, Cons(4, Cons(7, Cons(9, Cons(0, Cons(7, Cons(0, Cons(0, Cons(7, Cons(0, Cons(0, Cons(7, Cons(1, Cons(3, Cons(2, Cons(3, Cons(7, Cons(1, Cons(0, Cons(8, Cons(9, Cons(4, Cons(8, Cons(3, Cons(7, Cons(0, Cons(6, Cons(2, Cons(6, Cons(0, Cons(5, Cons(2, Cons(3, Cons(5, Cons(6, Cons(2, Cons(0, Cons(7, Cons(6, Cons(8, Cons(9, Cons(0, Cons(7, Cons(6, Cons(8, Cons(5, Cons(0, Cons(4, Cons(0, Cons(5, Cons(3, Cons(0, Cons(0, Cons(2, Cons(1, Cons(2, Cons(4, Cons(4, Cons(1, Cons(1, Cons(5, Cons(2, Cons(5, Cons(4, Cons(6, Cons(4, Cons(7, Cons(1, Cons(7, Cons(4, Cons(8, Cons(4, Cons(1, Cons(1, Cons(1, Cons(2, Cons(9, Cons(3, Cons(8, Cons(0, Cons(8, Cons(9, Cons(5, Cons(1, Cons(4, Cons(5, Cons(6, Cons(3, Cons(2, Cons(9, Cons(6, Cons(0, Cons(5, Cons(2, Cons(7, Cons(1, Cons(9, Cons(7, Cons(4, Cons(0, Cons(7, Cons(5, Cons(1, Cons(3, Cons(8, Cons(9, Cons(1, Cons(7, Cons(5, Cons(1, Cons(3, Cons(7, Cons(4, Cons(1, Cons(2, Cons(1, Cons(9, Cons(4, Cons(5, Cons(7, Cons(5, Cons(9, Cons(8, Cons(4, Cons(9, Cons(0, Cons(5, Cons(1, Cons(7, Cons(3, Cons(6, Cons(3, Cons(6, Cons(7, Cons(7, Cons(8, Cons(4, Cons(1, Cons(5, Cons(1, Cons(1, Cons(9, Cons(8, Cons(9, Cons(5, Cons(1, Cons(0, Cons(3, Cons(1, Cons(6, Cons(8, Cons(1, Cons(5, Cons(8, Cons(1, Cons(3, Cons(8, Cons(9, Cons(8, Cons(4, Cons(6, Cons(1, Cons(3, Cons(9, Cons(0, Cons(3, Cons(9, Cons(6, Cons(7, Cons(3, Cons(2, Cons(3, Cons(4, Cons(3, Cons(9, Cons(0, Cons(5, Cons(3, Cons(8, Cons(6, Cons(8, Cons(9, Cons(4, Cons(3, Nil()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
println("300 " + sorttimerec(ls300))
val ls400: List = Cons(7, Cons(0, Cons(0, Cons(2, Cons(1, Cons(9, Cons(5, Cons(9, Cons(7, Cons(1, Cons(8, Cons(3, Cons(0, Cons(1, Cons(2, Cons(1, Cons(8, Cons(8, Cons(0, Cons(9, Cons(9, Cons(0, Cons(7, Cons(6, Cons(7, Cons(0, Cons(1, Cons(5, Cons(8, Cons(7, Cons(9, Cons(8, Cons(2, Cons(6, Cons(1, Cons(8, Cons(7, Cons(4, Cons(3, Cons(4, Cons(6, Cons(2, Cons(7, Cons(9, Cons(1, Cons(3, Cons(5, Cons(9, Cons(9, Cons(6, Cons(9, Cons(8, Cons(2, Cons(9, Cons(7, Cons(6, Cons(9, Cons(3, Cons(4, Cons(4, Cons(5, Cons(2, Cons(1, Cons(7, Cons(3, Cons(5, Cons(4, Cons(1, Cons(4, Cons(3, Cons(8, Cons(4, Cons(1, Cons(9, Cons(8, Cons(4, Cons(0, Cons(8, Cons(9, Cons(5, Cons(4, Cons(3, Cons(9, Cons(5, Cons(0, Cons(1, Cons(2, Cons(7, Cons(0, Cons(0, Cons(4, Cons(3, Cons(8, Cons(1, Cons(2, Cons(1, Cons(8, Cons(8, Cons(9, Cons(1, Cons(0, Cons(6, Cons(8, Cons(7, Cons(9, Cons(4, Cons(0, Cons(0, Cons(8, Cons(9, Cons(5, Cons(0, Cons(7, Cons(0, Cons(0, Cons(6, Cons(3, Cons(7, Cons(1, Cons(7, Cons(7, Cons(3, Cons(9, Cons(9, Cons(4, Cons(2, Cons(4, Cons(6, Cons(5, Cons(8, Cons(9, Cons(2, Cons(0, Cons(3, Cons(0, Cons(4, Cons(0, Cons(1, Cons(7, Cons(4, Cons(7, Cons(9, Cons(3, Cons(1, Cons(5, Cons(1, Cons(3, Cons(9, Cons(7, Cons(4, Cons(1, Cons(1, Cons(3, Cons(9, Cons(5, Cons(7, Cons(7, Cons(7, Cons(6, Cons(6, Cons(8, Cons(9, Cons(8, Cons(2, Cons(4, Cons(4, Cons(3, Cons(6, Cons(9, Cons(3, Cons(3, Cons(4, Cons(3, Cons(7, Cons(3, Cons(4, Cons(3, Cons(1, Cons(4, Cons(6, Cons(8, Cons(8, Cons(0, Cons(3, Cons(8, Cons(2, Cons(5, Cons(4, Cons(9, Cons(6, Cons(0, Cons(0, Cons(7, Cons(1, Cons(0, Cons(1, Cons(9, Cons(0, Cons(2, Cons(9, Cons(5, Cons(8, Cons(1, Cons(0, Cons(7, Cons(5, Cons(0, Cons(5, Cons(8, Cons(2, Cons(7, Cons(4, Cons(2, Cons(5, Cons(5, Cons(7, Cons(4, Cons(5, Cons(1, Cons(1, Cons(4, Cons(2, Cons(7, Cons(0, Cons(5, Cons(0, Cons(3, Cons(7, Cons(6, Cons(6, Cons(8, Cons(7, Cons(5, Cons(8, Cons(8, Cons(7, Cons(8, Cons(4, Cons(6, Cons(7, Cons(4, Cons(4, Cons(4, Cons(3, Cons(1, Cons(3, Cons(9, Cons(9, Cons(6, Cons(2, Cons(3, Cons(7, Cons(0, Cons(9, Cons(7, Cons(0, Cons(2, Cons(3, Cons(1, Cons(0, Cons(6, Cons(0, Cons(2, Cons(6, Cons(4, Cons(0, Cons(1, Cons(6, Cons(1, Cons(3, Cons(1, Cons(1, Cons(6, Cons(7, Cons(5, Cons(5, Cons(7, Cons(9, Cons(7, Cons(0, Cons(3, Cons(7, Cons(3, Cons(1, Cons(0, Cons(9, Cons(1, Cons(5, Cons(4, Cons(2, Cons(6, Cons(1, Cons(2, Cons(0, Cons(7, Cons(8, Cons(7, Cons(1, Cons(2, Cons(5, Cons(2, Cons(9, Cons(8, Cons(3, Cons(9, Cons(6, Cons(4, Cons(8, Cons(7, Cons(7, Cons(5, Cons(0, Cons(8, Cons(5, Cons(2, Cons(4, Cons(5, Cons(7, Cons(5, Cons(0, Cons(8, Cons(1, Cons(7, Cons(9, Cons(6, Cons(9, Cons(8, Cons(6, Cons(2, Cons(1, Cons(4, Cons(7, Cons(6, Cons(1, Cons(1, Cons(5, Cons(1, Cons(4, Cons(3, Cons(8, Cons(5, Cons(5, Cons(2, Cons(1, Cons(4, Cons(7, Cons(8, Cons(8, Cons(1, Cons(9, Cons(4, Cons(7, Cons(3, Cons(1, Cons(7, Cons(1, Cons(2, Cons(2, Cons(7, Cons(1, Cons(1, Cons(0, Cons(0, Cons(5, Cons(3, Cons(2, Cons(0, Cons(5, Cons(3, Cons(3, Cons(3, Cons(1, Cons(8, Cons(7, Cons(6, Cons(3, Cons(9, Cons(4, Cons(8, Cons(7, Cons(8, Cons(4, Cons(5, Cons(7, Cons(4, Cons(1, Cons(3, Cons(0, Cons(1, Cons(3, Cons(0, Cons(6, Cons(7, Cons(5, Cons(4, Cons(2, Cons(0, Cons(8, Cons(6, Cons(0, Nil()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
println("400 " + sorttimerec(ls400))
val ls500: List = Cons(3, Cons(3, Cons(6, Cons(9, Cons(6, Cons(1, Cons(9, Cons(0, Cons(5, Cons(1, Cons(5, Cons(7, Cons(6, Cons(6, Cons(9, Cons(4, Cons(7, Cons(5, Cons(7, Cons(0, Cons(4, Cons(5, Cons(1, Cons(8, Cons(1, Cons(3, Cons(4, Cons(4, Cons(6, Cons(3, Cons(6, Cons(0, Cons(5, Cons(3, Cons(2, Cons(8, Cons(1, Cons(8, Cons(6, Cons(1, Cons(2, Cons(4, Cons(8, Cons(9, Cons(8, Cons(1, Cons(3, Cons(0, Cons(5, Cons(6, Cons(5, Cons(8, Cons(7, Cons(3, Cons(4, Cons(3, Cons(9, Cons(4, Cons(7, Cons(7, Cons(6, Cons(5, Cons(9, Cons(7, Cons(7, Cons(8, Cons(7, Cons(4, Cons(4, Cons(0, Cons(5, Cons(4, Cons(7, Cons(5, Cons(9, Cons(5, Cons(4, Cons(4, Cons(0, Cons(0, Cons(3, Cons(6, Cons(3, Cons(3, Cons(4, Cons(4, Cons(1, Cons(1, Cons(4, Cons(1, Cons(4, Cons(1, Cons(4, Cons(2, Cons(7, Cons(5, Cons(0, Cons(2, Cons(0, Cons(3, Cons(1, Cons(4, Cons(8, Cons(5, Cons(0, Cons(6, Cons(0, Cons(4, Cons(3, Cons(5, Cons(7, Cons(2, Cons(5, Cons(4, Cons(7, Cons(1, Cons(7, Cons(0, Cons(0, Cons(4, Cons(9, Cons(5, Cons(1, Cons(4, Cons(7, Cons(4, Cons(0, Cons(4, Cons(9, Cons(0, Cons(9, Cons(3, Cons(5, Cons(1, Cons(5, Cons(0, Cons(4, Cons(5, Cons(6, Cons(8, Cons(5, Cons(7, Cons(3, Cons(9, Cons(9, Cons(3, Cons(0, Cons(0, Cons(0, Cons(3, Cons(6, Cons(9, Cons(6, Cons(9, Cons(6, Cons(3, Cons(2, Cons(2, Cons(7, Cons(4, Cons(5, Cons(0, Cons(3, Cons(5, Cons(1, Cons(0, Cons(1, Cons(5, Cons(8, Cons(9, Cons(9, Cons(8, Cons(3, Cons(1, Cons(5, Cons(1, Cons(7, Cons(5, Cons(0, Cons(0, Cons(8, Cons(7, Cons(8, Cons(1, Cons(7, Cons(7, Cons(0, Cons(4, Cons(6, Cons(4, Cons(7, Cons(9, Cons(5, Cons(2, Cons(9, Cons(2, Cons(9, Cons(2, Cons(2, Cons(1, Cons(5, Cons(5, Cons(3, Cons(6, Cons(8, Cons(6, Cons(7, Cons(5, Cons(3, Cons(0, Cons(0, Cons(9, Cons(6, Cons(4, Cons(5, Cons(0, Cons(3, Cons(7, Cons(8, Cons(5, Cons(3, Cons(0, Cons(2, Cons(9, Cons(4, Cons(2, Cons(1, Cons(2, Cons(1, Cons(4, Cons(6, Cons(1, Cons(9, Cons(2, Cons(2, Cons(1, Cons(6, Cons(9, Cons(8, Cons(2, Cons(6, Cons(0, Cons(4, Cons(4, Cons(7, Cons(2, Cons(9, Cons(4, Cons(6, Cons(7, Cons(8, Cons(2, Cons(1, Cons(1, Cons(5, Cons(8, Cons(2, Cons(5, Cons(7, Cons(8, Cons(5, Cons(0, Cons(9, Cons(2, Cons(3, Cons(4, Cons(2, Cons(6, Cons(1, Cons(8, Cons(7, Cons(4, Cons(6, Cons(5, Cons(1, Cons(6, Cons(4, Cons(6, Cons(4, Cons(4, Cons(3, Cons(9, Cons(1, Cons(1, Cons(0, Cons(7, Cons(8, Cons(0, Cons(2, Cons(4, Cons(3, Cons(2, Cons(5, Cons(8, Cons(0, Cons(6, Cons(1, Cons(2, Cons(1, Cons(5, Cons(4, Cons(7, Cons(2, Cons(4, Cons(0, Cons(6, Cons(3, Cons(5, Cons(4, Cons(8, Cons(3, Cons(5, Cons(0, Cons(2, Cons(5, Cons(7, Cons(2, Cons(1, Cons(7, Cons(3, Cons(5, Cons(2, Cons(3, Cons(8, Cons(0, Cons(4, Cons(1, Cons(1, Cons(5, Cons(3, Cons(8, Cons(4, Cons(8, Cons(7, Cons(0, Cons(9, Cons(5, Cons(1, Cons(9, Cons(5, Cons(8, Cons(3, Cons(7, Cons(2, Cons(8, Cons(2, Cons(6, Cons(3, Cons(4, Cons(2, Cons(3, Cons(0, Cons(1, Cons(4, Cons(5, Cons(0, Cons(9, Cons(3, Cons(3, Cons(3, Cons(6, Cons(0, Cons(9, Cons(7, Cons(8, Cons(5, Cons(7, Cons(0, Cons(9, Cons(9, Cons(0, Cons(8, Cons(3, Cons(1, Cons(4, Cons(0, Cons(4, Cons(8, Cons(5, Cons(2, Cons(6, Cons(3, Cons(5, Cons(8, Cons(8, Cons(5, Cons(3, Cons(8, Cons(4, Cons(8, Cons(0, Cons(5, Cons(6, Cons(3, Cons(5, Cons(6, Cons(6, Cons(7, Cons(3, Cons(4, Cons(4, Cons(9, Cons(1, Cons(6, Cons(3, Cons(4, Cons(1, Cons(9, Cons(1, Cons(8, Cons(2, Cons(6, Cons(7, Cons(0, Cons(3, Cons(1, Cons(8, Cons(1, Cons(4, Cons(6, Cons(5, Cons(2, Cons(5, Cons(5, Cons(5, Cons(3, Cons(3, Cons(4, Cons(9, Cons(7, Cons(9, Cons(7, Cons(1, Cons(6, Cons(3, Cons(0, Cons(8, Cons(1, Cons(0, Cons(3, Cons(3, Cons(0, Cons(2, Cons(4, Cons(2, Cons(4, Cons(5, Cons(5, Cons(7, Cons(1, Cons(1, Cons(7, Cons(0, Cons(2, Cons(9, Cons(7, Cons(1, Cons(0, Cons(3, Cons(6, Cons(5, Cons(5, Cons(4, Cons(3, Cons(5, Cons(8, Cons(6, Cons(9, Cons(1, Cons(9, Cons(0, Cons(9, Cons(7, Cons(1, Cons(1, Cons(9, Cons(9, Cons(4, Cons(9, Cons(5, Cons(4, Cons(9, Cons(5, Cons(7, Cons(6, Cons(8, Cons(7, Cons(8, Cons(9, Cons(0, Cons(1, Cons(0, Cons(4, Cons(0, Cons(5, Cons(4, Cons(3, Cons(3, Cons(7, Cons(1, Nil
println("500 " + sorttimerec(ls500))
val ls600: List = Cons(7, Cons(9, Cons(8, Cons(4, Cons(9, Cons(3, Cons(1, Cons(6, Cons(0, Cons(6, Cons(6, Cons(9, Cons(3, Cons(1, Cons(8, Cons(7, Cons(5, Cons(3, Cons(6, Cons(6, Cons(3, Cons(3, Cons(2, Cons(0, Cons(2, Cons(2, Cons(5, Cons(6, Cons(9, Cons(3, Cons(4, Cons(8, Cons(2, Cons(2, Cons(5, Cons(2, Cons(3, Cons(7, Cons(2, Cons(2, Cons(4, Cons(8, Cons(5, Cons(8, Cons(7, Cons(0, Cons(9, Cons(2, Cons(5, Cons(8, Cons(0, Cons(8, Cons(9, Cons(3, Cons(0, Cons(7, Cons(1, Cons(6, Cons(9, Cons(7, Cons(4, Cons(7, Cons(3, Cons(3, Cons(3, Cons(6, Cons(4, Cons(6, Cons(4, Cons(4, Cons(5, Cons(9, Cons(6, Cons(4, Cons(7, Cons(5, Cons(4, Cons(8, Cons(3, Cons(0, Cons(7, Cons(2, Cons(8, Cons(8, Cons(4, Cons(1, Cons(7, Cons(5, Cons(1, Cons(0, Cons(1, Cons(5, Cons(4, Cons(0, Cons(0, Cons(6, Cons(4, Cons(9, Cons(8, Cons(7, Cons(7, Cons(4, Cons(8, Cons(0, Cons(2, Cons(2, Cons(8, Cons(0, Cons(7, Cons(4, Cons(6, Cons(5, Cons(7, Cons(3, Cons(6, Cons(0, Cons(2, Cons(3, Cons(3, Cons(1, Cons(8, Cons(5, Cons(7, Cons(8, Cons(5, Cons(5, Cons(8, Cons(6, Cons(6, Cons(9, Cons(6, Cons(8, Cons(4, Cons(9, Cons(1, Cons(6, Cons(2, Cons(6, Cons(5, Cons(5, Cons(6, Cons(0, Cons(6, Cons(5, Cons(8, Cons(6, Cons(2, Cons(6, Cons(3, Cons(3, Cons(1, Cons(5, Cons(7, Cons(3, Cons(9, Cons(5, Cons(7, Cons(8, Cons(2, Cons(9, Cons(6, Cons(7, Cons(3, Cons(9, Cons(5, Cons(3, Cons(3, Cons(9, Cons(8, Cons(1, Cons(5, Cons(9, Cons(3, Cons(7, Cons(6, Cons(1, Cons(1, Cons(5, Cons(0, Cons(0, Cons(7, Cons(4, Cons(4, Cons(3, Cons(3, Cons(8, Cons(4, Cons(3, Cons(0, Cons(4, Cons(4, Cons(9, Cons(9, Cons(5, Cons(2, Cons(4, Cons(1, Cons(5, Cons(0, Cons(0, Cons(9, Cons(7, Cons(6, Cons(3, Cons(7, Cons(7, Cons(3, Cons(0, Cons(8, Cons(8, Cons(6, Cons(6, Cons(3, Cons(3, Cons(6, Cons(6, Cons(9, Cons(8, Cons(1, Cons(7, Cons(8, Cons(3, Cons(0, Cons(3, Cons(3, Cons(5, Cons(3, Cons(9, Cons(5, Cons(0, Cons(6, Cons(4, Cons(0, Cons(0, Cons(6, Cons(3, Cons(9, Cons(5, Cons(7, Cons(3, Cons(3, Cons(8, Cons(3, Cons(7, Cons(8, Cons(7, Cons(0, Cons(9, Cons(6, Cons(5, Cons(2, Cons(3, Cons(8, Cons(3, Cons(5, Cons(7, Cons(7, Cons(5, Cons(7, Cons(2, Cons(1, Cons(3, Cons(4, Cons(9, Cons(2, Cons(7, Cons(3, Cons(0, Cons(2, Cons(3, Cons(5, Cons(0, Cons(9, Cons(5, Cons(8, Cons(9, Cons(6, Cons(0, Cons(5, Cons(0, Cons(3, Cons(3, Cons(9, Cons(2, Cons(9, Cons(7, Cons(9, Cons(2, Cons(6, Cons(2, Cons(6, Cons(5, Cons(2, Cons(8, Cons(1, Cons(9, Cons(5, Cons(7, Cons(7, Cons(6, Cons(9, Cons(5, Cons(1, Cons(4, Cons(5, Cons(9, Cons(2, Cons(6, Cons(0, Cons(1, Cons(0, Cons(6, Cons(4, Cons(0, Cons(9, Cons(4, Cons(0, Cons(1, Cons(0, Cons(2, Cons(9, Cons(1, Cons(0, Cons(2, Cons(9, Cons(5, Cons(2, Cons(2, Cons(3, Cons(4, Cons(1, Cons(2, Cons(1, Cons(6, Cons(5, Cons(7, Cons(4, Cons(7, Cons(8, Cons(6, Cons(1, Cons(5, Cons(3, Cons(5, Cons(8, Cons(6, Cons(2, Cons(1, Cons(1, Cons(4, Cons(0, Cons(0, Cons(6, Cons(1, Cons(6, Cons(8, Cons(4, Cons(2, Cons(0, Cons(1, Cons(2, Cons(4, Cons(4, Cons(2, Cons(5, Cons(3, Cons(0, Cons(7, Cons(5, Cons(9, Cons(6, Cons(9, Cons(4, Cons(7, Cons(5, Cons(1, Cons(2, Cons(6, Cons(6, Cons(0, Cons(0, Cons(1, Cons(0, Cons(9, Cons(7, Cons(1, Cons(6, Cons(2, Cons(9, Cons(0, Cons(5, Cons(2, Cons(6, Cons(6, Cons(5, Cons(1, Cons(1, Cons(0, Cons(8, Cons(9, Cons(2, Cons(0, Cons(7, Cons(9, Cons(2, Cons(6, Cons(6, Cons(5, Cons(7, Cons(0, Cons(8, Cons(2, Cons(9, Cons(8, Cons(8, Cons(3, Cons(2, Cons(8, Cons(7, Cons(8, Cons(5, Cons(5, Cons(2, Cons(1, Cons(8, Cons(9, Cons(8, Cons(3, Cons(3, Cons(8, Cons(1, Cons(1, Cons(4, Cons(0, Cons(5, Cons(2, Cons(0, Cons(7, Cons(8, Cons(8, Cons(2, Cons(9, Cons(8, Cons(7, Cons(3, Cons(3, Cons(4, Cons(6, Cons(9, Cons(4, Cons(4, Cons(9, Cons(9, Cons(2, Cons(2, Cons(8, Cons(6, Cons(1, Cons(1, Cons(9, Cons(1, Cons(1, Cons(8, Cons(3, Cons(7, Cons(6, Cons(6, Cons(7, Cons(2, Cons(9, Cons(9, Cons(1, Cons(0, Cons(3, Cons(6, Cons(1, Cons(1, Cons(2, Cons(4, Cons(6, Cons(9, Cons(6, Cons(4, Cons(9, Cons(1, Cons(4, Cons(0, Cons(6, Cons(0, Cons(6, Cons(7, Cons(3, Cons(7, Cons(1, Cons(4, Cons(2, Cons(7, Cons(0, Cons(2, Cons(3, Cons(2, Cons(5, Cons(7, Cons(8, Cons(4, Cons(7, Cons(9, Cons(6, Cons(3, Cons(0, Cons(6, Cons(1, Cons(5, Cons(5, Cons(0, Cons(6, Cons(0, Cons(0, Cons(5, Cons(1, Cons(4, Cons(2, Cons(2, Cons(3, Cons(6, Cons(4, Cons(3, Cons(9, Cons(9, Cons(2, Cons(2, Cons(3, Cons(5, Cons(6, Cons(1, Cons(0, Cons(5, Cons(8, Cons(8, Cons(2, Cons(7, Cons(2, Cons(0, Cons(7, Cons(5, Cons(0, Cons(6, Cons(2, Cons(7, Cons(0, Cons(3, Cons(9, Cons(8, Cons(7, Cons(3, Cons(1, Cons(7, Cons(9, Cons(3, Cons(8, Cons(2, Cons(6, Cons(4, Cons(1, Cons(5, Cons(1, Cons(4, Cons(9, Cons(0, Cons(0, Cons(5, Cons(4, Cons(6, Cons(9, Cons(8, Cons(8, Cons(0, Cons(6, Cons(1, Cons(0, Cons(2, Cons(7, Cons(6, Cons(8, Cons(1, Cons(9, Cons(7, Cons(3, Cons(7, Cons(8, Cons(6, Cons(9, Cons(4, Cons(5, Cons(3, Cons(0, Cons(7, Cons(8, Cons(3, Cons(4, Nil
println("600 " + sorttimerec(ls600))
val ls700: List = Cons(7, Cons(7, Cons(1, Cons(1, Cons(6, Cons(9, Cons(3, Cons(1, Cons(5, Cons(9, Cons(2, Cons(4, Cons(7, Cons(7, Cons(9, Cons(2, Cons(3, Cons(0, Cons(2, Cons(0, Cons(4, Cons(4, Cons(2, Cons(0, Cons(4, Cons(3, Cons(8, Cons(9, Cons(0, Cons(7, Cons(2, Cons(8, Cons(4, Cons(0, Cons(8, Cons(0, Cons(2, Cons(2, Cons(7, Cons(7, Cons(9, Cons(4, Cons(9, Cons(8, Cons(8, Cons(1, Cons(2, Cons(8, Cons(5, Cons(7, Cons(7, Cons(5, Cons(0, Cons(3, Cons(2, Cons(9, Cons(8, Cons(4, Cons(0, Cons(6, Cons(7, Cons(7, Cons(7, Cons(5, Cons(3, Cons(6, Cons(6, Cons(9, Cons(6, Cons(9, Cons(4, Cons(2, Cons(7, Cons(1, Cons(6, Cons(0, Cons(0, Cons(0, Cons(0, Cons(3, Cons(5, Cons(8, Cons(5, Cons(0, Cons(4, Cons(3, Cons(1, Cons(7, Cons(6, Cons(9, Cons(4, Cons(3, Cons(4, Cons(3, Cons(5, Cons(6, Cons(8, Cons(4, Cons(2, Cons(3, Cons(5, Cons(7, Cons(4, Cons(2, Cons(0, Cons(6, Cons(4, Cons(8, Cons(0, Cons(5, Cons(7, Cons(2, Cons(3, Cons(7, Cons(1, Cons(9, Cons(2, Cons(1, Cons(5, Cons(9, Cons(7, Cons(4, Cons(8, Cons(5, Cons(0, Cons(1, Cons(6, Cons(5, Cons(7, Cons(7, Cons(2, Cons(3, Cons(8, Cons(0, Cons(7, Cons(0, Cons(9, Cons(8, Cons(3, Cons(3, Cons(2, Cons(1, Cons(0, Cons(2, Cons(5, Cons(5, Cons(4, Cons(0, Cons(8, Cons(9, Cons(5, Cons(1, Cons(6, Cons(8, Cons(8, Cons(0, Cons(3, Cons(1, Cons(4, Cons(9, Cons(9, Cons(4, Cons(1, Cons(0, Cons(7, Cons(1, Cons(9, Cons(7, Cons(4, Cons(2, Cons(7, Cons(7, Cons(3, Cons(4, Cons(8, Cons(6, Cons(3, Cons(4, Cons(1, Cons(0, Cons(8, Cons(8, Cons(4, Cons(6, Cons(4, Cons(0, Cons(7, Cons(0, Cons(6, Cons(4, Cons(9, Cons(3, Cons(6, Cons(1, Cons(7, Cons(6, Cons(9, Cons(3, Cons(8, Cons(6, Cons(3, Cons(7, Cons(0, Cons(7, Cons(2, Cons(1, Cons(3, Cons(6, Cons(9, Cons(4, Cons(8, Cons(2, Cons(7, Cons(5, Cons(4, Cons(4, Cons(9, Cons(9, Cons(5, Cons(1, Cons(4, Cons(1, Cons(7, Cons(5, Cons(9, Cons(8, Cons(4, Cons(3, Cons(7, Cons(1, Cons(6, Cons(8, Cons(8, Cons(5, Cons(3, Cons(1, Cons(9, Cons(7, Cons(3, Cons(1, Cons(7, Cons(2, Cons(1, Cons(2, Cons(3, Cons(8, Cons(4, Cons(3, Cons(5, Cons(1, Cons(7, Cons(3, Cons(3, Cons(3, Cons(0, Cons(6, Cons(6, Cons(5, Cons(9, Cons(4, Cons(5, Cons(0, Cons(4, Cons(4, Cons(1, Cons(5, Cons(8, Cons(2, Cons(6, Cons(1, Cons(6, Cons(6, Cons(0, Cons(5, Cons(6, Cons(8, Cons(0, Cons(2, Cons(5, Cons(4, Cons(6, Cons(0, Cons(1, Cons(7, Cons(9, Cons(7, Cons(3, Cons(4, Cons(5, Cons(2, Cons(3, Cons(2, Cons(0, Cons(5, Cons(6, Cons(0, Cons(0, Cons(8, Cons(3, Cons(6, Cons(8, Cons(3, Cons(7, Cons(1, Cons(4, Cons(4, Cons(9, Cons(9, Cons(1, Cons(8, Cons(6, Cons(1, Cons(2, Cons(1, Cons(4, Cons(3, Cons(9, Cons(7, Cons(0, Cons(2, Cons(9, Cons(6, Cons(6, Cons(7, Cons(2, Cons(9, Cons(6, Cons(7, Cons(0, Cons(2, Cons(0, Cons(9, Cons(8, Cons(2, Cons(9, Cons(6, Cons(4, Cons(6, Cons(7, Cons(2, Cons(4, Cons(8, Cons(3, Cons(4, Cons(9, Cons(8, Cons(3, Cons(2, Cons(1, Cons(0, Cons(9, Cons(1, Cons(3, Cons(2, Cons(6, Cons(2, Cons(6, Cons(4, Cons(1, Cons(5, Cons(5, Cons(9, Cons(1, Cons(5, Cons(9, Cons(2, Cons(5, Cons(4, Cons(6, Cons(9, Cons(9, Cons(0, Cons(5, Cons(5, Cons(9, Cons(8, Cons(5, Cons(3, Cons(0, Cons(4, Cons(8, Cons(2, Cons(1, Cons(3, Cons(3, Cons(8, Cons(8, Cons(4, Cons(4, Cons(1, Cons(2, Cons(1, Cons(6, Cons(3, Cons(0, Cons(0, Cons(5, Cons(7, Cons(3, Cons(1, Cons(6, Cons(4, Cons(3, Cons(8, Cons(2, Cons(7, Cons(7, Cons(5, Cons(6, Cons(1, Cons(0, Cons(1, Cons(7, Cons(8, Cons(6, Cons(1, Cons(2, Cons(1, Cons(4, Cons(7, Cons(2, Cons(9, Cons(1, Cons(8, Cons(9, Cons(4, Cons(3, Cons(2, Cons(7, Cons(7, Cons(8, Cons(8, Cons(4, Cons(6, Cons(5, Cons(5, Cons(1, Cons(3, Cons(7, Cons(8, Cons(8, Cons(4, Cons(4, Cons(0, Cons(8, Cons(8, Cons(1, Cons(7, Cons(0, Cons(7, Cons(3, Cons(1, Cons(6, Cons(2, Cons(2, Cons(1, Cons(6, Cons(2, Cons(7, Cons(3, Cons(9, Cons(4, Cons(5, Cons(4, Cons(8, Cons(0, Cons(5, Cons(6, Cons(4, Cons(6, Cons(0, Cons(8, Cons(5, Cons(1, Cons(3, Cons(3, Cons(5, Cons(8, Cons(0, Cons(7, Cons(4, Cons(3, Cons(5, Cons(2, Cons(8, Cons(9, Cons(0, Cons(4, Cons(2, Cons(1, Cons(0, Cons(4, Cons(1, Cons(1, Cons(4, Cons(4, Cons(0, Cons(6, Cons(7, Cons(4, Cons(8, Cons(0, Cons(5, Cons(3, Cons(5, Cons(3, Cons(2, Cons(5, Cons(7, Cons(0, Cons(8, Cons(3, Cons(8, Cons(0, Cons(1, Cons(4, Cons(3, Cons(4, Cons(8, Cons(6, Cons(2, Cons(1, Cons(4, Cons(7, Cons(5, Cons(8, Cons(0, Cons(3, Cons(7, Cons(3, Cons(1, Cons(3, Cons(1, Cons(2, Cons(7, Cons(5, Cons(2, Cons(9, Cons(4, Cons(2, Cons(4, Cons(3, Cons(1, Cons(5, Cons(8, Cons(1, Cons(3, Cons(8, Cons(3, Cons(9, Cons(5, Cons(3, Cons(5, Cons(5, Cons(0, Cons(4, Cons(3, Cons(8, Cons(2, Cons(3, Cons(1, Cons(6, Cons(2, Cons(8, Cons(3, Cons(0, Cons(7, Cons(3, Cons(1, Cons(6, Cons(7, Cons(4, Cons(2, Cons(9, Cons(0, Cons(8, Cons(8, Cons(9, Cons(3, Cons(9, Cons(8, Cons(3, Cons(9, Cons(6, Cons(2, Cons(1, Cons(8, Cons(9, Cons(3, Cons(1, Cons(6, Cons(5, Cons(5, Cons(3, Cons(0, Cons(4, Cons(4, Cons(9, Cons(8, Cons(1, Cons(0, Cons(0, Cons(5, Cons(1, Cons(3, Cons(6, Cons(3, Cons(5, Cons(0, Cons(3, Cons(5, Cons(0, Cons(8, Cons(3, Cons(8, Cons(3, Cons(0, Cons(0, Cons(7, Cons(4, Cons(1, Cons(9, Cons(6, Cons(2, Cons(3, Cons(3, Cons(7, Cons(7, Cons(5, Cons(1, Cons(1, Cons(5, Cons(9, Cons(7, Cons(5, Cons(9, Cons(2, Cons(5, Cons(0, Cons(4, Cons(2, Cons(3, Cons(2, Cons(3, Cons(4, Cons(4, Cons(2, Cons(9, Cons(4, Cons(6, Cons(6, Cons(5, Cons(7, Cons(4, Cons(2, Cons(5, Cons(7, Cons(9, Cons(4, Cons(4, Cons(5, Cons(8, Cons(9, Cons(9, Cons(8, Cons(5, Cons(9, Cons(3, Cons(4, Cons(8, Cons(4, Cons(9, Cons(5, Cons(2, Cons(3, Cons(9, Cons(5, Cons(6, Cons(0, Cons(3, Cons(8, Cons(7, Cons(7, Cons(1, Cons(1, Cons(8, Cons(7, Cons(0, Cons(5, Cons(5, Cons(1, Cons(5, Cons(9, Cons(0, Cons(5, Cons(4, Cons(8, Cons(8, Cons(1, Cons(9, Nil
println("700 " + sorttimerec(ls700))
val ls800: List = Cons(0, Cons(2, Cons(3, Cons(2, Cons(5, Cons(3, Cons(0, Cons(3, Cons(4, Cons(9, Cons(3, Cons(7, Cons(5, Cons(8, Cons(0, Cons(0, Cons(1, Cons(9, Cons(6, Cons(0, Cons(5, Cons(2, Cons(2, Cons(7, Cons(9, Cons(8, Cons(1, Cons(8, Cons(6, Cons(5, Cons(0, Cons(1, Cons(7, Cons(9, Cons(3, Cons(6, Cons(0, Cons(9, Cons(4, Cons(9, Cons(8, Cons(6, Cons(3, Cons(3, Cons(4, Cons(9, Cons(9, Cons(5, Cons(5, Cons(3, Cons(0, Cons(6, Cons(7, Cons(3, Cons(0, Cons(6, Cons(6, Cons(7, Cons(9, Cons(0, Cons(2, Cons(4, Cons(2, Cons(2, Cons(4, Cons(8, Cons(6, Cons(6, Cons(9, Cons(3, Cons(5, Cons(1, Cons(6, Cons(7, Cons(0, Cons(3, Cons(7, Cons(8, Cons(7, Cons(7, Cons(7, Cons(8, Cons(4, Cons(4, Cons(3, Cons(3, Cons(5, Cons(6, Cons(5, Cons(8, Cons(8, Cons(0, Cons(6, Cons(2, Cons(0, Cons(1, Cons(1, Cons(0, Cons(1, Cons(3, Cons(6, Cons(0, Cons(0, Cons(2, Cons(7, Cons(4, Cons(7, Cons(9, Cons(2, Cons(6, Cons(1, Cons(2, Cons(7, Cons(1, Cons(2, Cons(0, Cons(5, Cons(1, Cons(5, Cons(1, Cons(5, Cons(8, Cons(5, Cons(4, Cons(3, Cons(0, Cons(9, Cons(8, Cons(2, Cons(1, Cons(4, Cons(6, Cons(3, Cons(1, Cons(5, Cons(6, Cons(2, Cons(1, Cons(0, Cons(5, Cons(6, Cons(9, Cons(3, Cons(4, Cons(7, Cons(2, Cons(5, Cons(0, Cons(5, Cons(1, Cons(9, Cons(1, Cons(5, Cons(8, Cons(5, Cons(6, Cons(2, Cons(4, Cons(0, Cons(3, Cons(3, Cons(9, Cons(9, Cons(5, Cons(6, Cons(8, Cons(8, Cons(9, Cons(9, Cons(3, Cons(5, Cons(0, Cons(4, Cons(6, Cons(3, Cons(4, Cons(5, Cons(5, Cons(9, Cons(6, Cons(4, Cons(9, Cons(8, Cons(3, Cons(0, Cons(4, Cons(8, Cons(3, Cons(2, Cons(3, Cons(3, Cons(9, Cons(3, Cons(9, Cons(5, Cons(4, Cons(7, Cons(0, Cons(9, Cons(1, Cons(1, Cons(5, Cons(3, Cons(0, Cons(9, Cons(0, Cons(4, Cons(3, Cons(2, Cons(9, Cons(3, Cons(1, Cons(7, Cons(5, Cons(7, Cons(2, Cons(9, Cons(7, Cons(9, Cons(5, Cons(2, Cons(7, Cons(8, Cons(5, Cons(2, Cons(0, Cons(7, Cons(0, Cons(6, Cons(4, Cons(5, Cons(3, Cons(0, Cons(8, Cons(6, Cons(6, Cons(0, Cons(4, Cons(8, Cons(6, Cons(9, Cons(5, Cons(1, Cons(5, Cons(1, Cons(3, Cons(8, Cons(8, Cons(9, Cons(7, Cons(2, Cons(2, Cons(8, Cons(3, Cons(6, Cons(8, Cons(6, Cons(8, Cons(3, Cons(4, Cons(6, Cons(5, Cons(2, Cons(8, Cons(5, Cons(0, Cons(4, Cons(8, Cons(1, Cons(4, Cons(5, Cons(9, Cons(8, Cons(1, Cons(9, Cons(8, Cons(0, Cons(3, Cons(7, Cons(8, Cons(5, Cons(4, Cons(5, Cons(2, Cons(8, Cons(4, Cons(6, Cons(8, Cons(0, Cons(2, Cons(2, Cons(0, Cons(3, Cons(5, Cons(5, Cons(0, Cons(9, Cons(8, Cons(9, Cons(7, Cons(2, Cons(7, Cons(8, Cons(6, Cons(3, Cons(2, Cons(7, Cons(5, Cons(4, Cons(2, Cons(7, Cons(0, Cons(2, Cons(1, Cons(3, Cons(7, Cons(9, Cons(5, Cons(6, Cons(7, Cons(2, Cons(2, Cons(7, Cons(9, Cons(2, Cons(8, Cons(8, Cons(4, Cons(7, Cons(4, Cons(9, Cons(9, Cons(6, Cons(1, Cons(1, Cons(6, Cons(1, Cons(3, Cons(0, Cons(1, Cons(4, Cons(5, Cons(7, Cons(2, Cons(8, Cons(2, Cons(8, Cons(5, Cons(0, Cons(6, Cons(6, Cons(8, Cons(1, Cons(0, Cons(4, Cons(8, Cons(6, Cons(9, Cons(7, Cons(3, Cons(0, Cons(8, Cons(9, Cons(3, Cons(8, Cons(6, Cons(2, Cons(3, Cons(8, Cons(5, Cons(4, Cons(5, Cons(7, Cons(9, Cons(4, Cons(2, Cons(1, Cons(5, Cons(6, Cons(2, Cons(0, Cons(6, Cons(7, Cons(1, Cons(8, Cons(0, Cons(6, Cons(0, Cons(9, Cons(6, Cons(3, Cons(9, Cons(7, Cons(4, Cons(4, Cons(3, Cons(2, Cons(7, Cons(0, Cons(3, Cons(3, Cons(7, Cons(1, Cons(8, Cons(9, Cons(5, Cons(2, Cons(3, Cons(5, Cons(9, Cons(4, Cons(8, Cons(7, Cons(8, Cons(5, Cons(9, Cons(0, Cons(6, Cons(4, Cons(6, Cons(7, Cons(1, Cons(9, Cons(3, Cons(7, Cons(7, Cons(7, Cons(5, Cons(2, Cons(2, Cons(4, Cons(3, Cons(1, Cons(6, Cons(2, Cons(1, Cons(4, Cons(3, Cons(5, Cons(9, Cons(0, Cons(5, Cons(2, Cons(4, Cons(1, Cons(8, Cons(2, Cons(9, Cons(1, Cons(3, Cons(2, Cons(5, Cons(4, Cons(0, Cons(8, Cons(2, Cons(4, Cons(6, Cons(3, Cons(0, Cons(6, Cons(9, Cons(3, Cons(5, Cons(4, Cons(7, Cons(2, Cons(2, Cons(1, Cons(7, Cons(4, Cons(4, Cons(6, Cons(9, Cons(4, Cons(9, Cons(2, Cons(4, Cons(9, Cons(3, Cons(3, Cons(2, Cons(1, Cons(6, Cons(4, Cons(8, Cons(3, Cons(2, Cons(3, Cons(4, Cons(0, Cons(3, Cons(4, Cons(7, Cons(9, Cons(8, Cons(4, Cons(0, Cons(4, Cons(6, Cons(7, Cons(3, Cons(9, Cons(0, Cons(5, Cons(7, Cons(8, Cons(8, Cons(8, Cons(7, Cons(3, Cons(2, Cons(8, Cons(7, Cons(1, Cons(2, Cons(4, Cons(8, Cons(4, Cons(3, Cons(5, Cons(3, Cons(3, Cons(3, Cons(5, Cons(7, Cons(5, Cons(2, Cons(0, Cons(3, Cons(3, Cons(4, Cons(1, Cons(2, Cons(4, Cons(4, Cons(7, Cons(2, Cons(6, Cons(7, Cons(1, Cons(8, Cons(7, Cons(0, Cons(1, Cons(8, Cons(7, Cons(2, Cons(8, Cons(6, Cons(5, Cons(7, Cons(6, Cons(5, Cons(2, Cons(4, Cons(5, Cons(0, Cons(9, Cons(3, Cons(7, Cons(6, Cons(6, Cons(0, Cons(4, Cons(1, Cons(8, Cons(0, Cons(2, Cons(6, Cons(3, Cons(5, Cons(1, Cons(6, Cons(0, Cons(4, Cons(9, Cons(2, Cons(9, Cons(4, Cons(8, Cons(5, Cons(8, Cons(2, Cons(1, Cons(6, Cons(2, Cons(3, Cons(6, Cons(3, Cons(6, Cons(9, Cons(9, Cons(3, Cons(5, Cons(5, Cons(4, Cons(7, Cons(5, Cons(3, Cons(0, Cons(8, Cons(8, Cons(2, Cons(5, Cons(8, Cons(6, Cons(2, Cons(8, Cons(1, Cons(2, Cons(3, Cons(7, Cons(9, Cons(2, Cons(1, Cons(1, Cons(4, Cons(8, Cons(1, Cons(3, Cons(7, Cons(5, Cons(9, Cons(7, Cons(8, Cons(1, Cons(3, Cons(2, Cons(1, Cons(8, Cons(8, Cons(6, Cons(3, Cons(8, Cons(4, Cons(8, Cons(4, Cons(0, Cons(6, Cons(8, Cons(6, Cons(8, Cons(1, Cons(1, Cons(6, Cons(8, Cons(9, Cons(4, Cons(8, Cons(6, Cons(5, Cons(7, Cons(8, Cons(3, Cons(1, Cons(3, Cons(7, Cons(2, Cons(7, Cons(9, Cons(2, Cons(4, Cons(1, Cons(8, Cons(7, Cons(2, Cons(0, Cons(3, Cons(9, Cons(7, Cons(8, Cons(6, Cons(4, Cons(1, Cons(2, Cons(3, Cons(7, Cons(3, Cons(9, Cons(1, Cons(0, Cons(9, Cons(0, Cons(7, Cons(4, Cons(0, Cons(3, Cons(0, Cons(3, Cons(0, Cons(1, Cons(0, Cons(7, Cons(1, Cons(8, Cons(8, Cons(2, Cons(7, Cons(4, Cons(8, Cons(2, Cons(4, Cons(5, Cons(8, Cons(8, Cons(0, Cons(6, Cons(9, Cons(6, Cons(7, Cons(8, Cons(7, Cons(2, Cons(7, Cons(3, Cons(6, Cons(5, Cons(1, Cons(9, Cons(4, Cons(8, Cons(0, Cons(8, Cons(1, Cons(3, Cons(9, Cons(8, Cons(3, Cons(4, Cons(2, Cons(9, Cons(9, Cons(8, Cons(1, Cons(3, Cons(8, Cons(9, Cons(8, Cons(4, Cons(1, Cons(1, Cons(6, Cons(4, Cons(8, Cons(1, Cons(6, Cons(1, Cons(7, Cons(2, Cons(7, Cons(2, Cons(4, Cons(4, Cons(9, Cons(6, Cons(2, Cons(4, Cons(5, Cons(0, Cons(8, Cons(5, Cons(0, Cons(3, Cons(0, Cons(1, Cons(2, Cons(4, Cons(5, Cons(1, Cons(1, Cons(6, Cons(0, Cons(8, Cons(6, Cons(4, Cons(9, Cons(3, Cons(6, Cons(8, Cons(0, Cons(2, Cons(9, Cons(4, Cons(5, Cons(9, Cons(9, Cons(6, Cons(5, Cons(8, Cons(0, Cons(1, Cons(0, Cons(8, Cons(0, Cons(8, Cons(6, Cons(0, Cons(2, Cons(7, Nil
println("800 " + sorttimerec(ls800))
val ls900: List = Cons(7, Cons(3, Cons(2, Cons(2, Cons(8, Cons(9, Cons(9, Cons(3, Cons(7, Cons(9, Cons(5, Cons(7, Cons(9, Cons(5, Cons(0, Cons(1, Cons(8, Cons(4, Cons(5, Cons(4, Cons(7, Cons(1, Cons(8, Cons(8, Cons(2, Cons(4, Cons(4, Cons(8, Cons(8, Cons(7, Cons(9, Cons(7, Cons(5, Cons(6, Cons(3, Cons(0, Cons(4, Cons(5, Cons(9, Cons(1, Cons(1, Cons(2, Cons(0, Cons(0, Cons(8, Cons(4, Cons(1, Cons(3, Cons(9, Cons(8, Cons(7, Cons(7, Cons(0, Cons(8, Cons(4, Cons(5, Cons(0, Cons(4, Cons(7, Cons(4, Cons(7, Cons(8, Cons(8, Cons(3, Cons(5, Cons(6, Cons(7, Cons(0, Cons(3, Cons(4, Cons(9, Cons(1, Cons(7, Cons(3, Cons(1, Cons(0, Cons(1, Cons(9, Cons(8, Cons(0, Cons(4, Cons(7, Cons(6, Cons(4, Cons(2, Cons(5, Cons(8, Cons(9, Cons(3, Cons(7, Cons(5, Cons(4, Cons(9, Cons(5, Cons(3, Cons(3, Cons(1, Cons(0, Cons(2, Cons(0, Cons(5, Cons(0, Cons(2, Cons(1, Cons(0, Cons(9, Cons(2, Cons(3, Cons(0, Cons(2, Cons(1, Cons(7, Cons(7, Cons(5, Cons(6, Cons(8, Cons(3, Cons(0, Cons(8, Cons(3, Cons(4, Cons(6, Cons(2, Cons(3, Cons(9, Cons(5, Cons(1, Cons(2, Cons(4, Cons(5, Cons(8, Cons(6, Cons(1, Cons(0, Cons(5, Cons(1, Cons(8, Cons(4, Cons(6, Cons(4, Cons(2, Cons(8, Cons(5, Cons(4, Cons(6, Cons(1, Cons(1, Cons(3, Cons(8, Cons(8, Cons(0, Cons(2, Cons(0, Cons(2, Cons(0, Cons(1, Cons(4, Cons(7, Cons(1, Cons(3, Cons(1, Cons(7, Cons(7, Cons(2, Cons(6, Cons(2, Cons(8, Cons(5, Cons(7, Cons(6, Cons(9, Cons(6, Cons(6, Cons(9, Cons(5, Cons(7, Cons(9, Cons(2, Cons(3, Cons(1, Cons(4, Cons(5, Cons(8, Cons(7, Cons(2, Cons(9, Cons(3, Cons(3, Cons(8, Cons(4, Cons(0, Cons(9, Cons(3, Cons(0, Cons(7, Cons(5, Cons(7, Cons(4, Cons(9, Cons(3, Cons(0, Cons(2, Cons(7, Cons(2, Cons(0, Cons(6, Cons(9, Cons(5, Cons(5, Cons(8, Cons(2, Cons(9, Cons(3, Cons(5, Cons(1, Cons(5, Cons(6, Cons(3, Cons(8, Cons(9, Cons(0, Cons(5, Cons(9, Cons(1, Cons(3, Cons(1, Cons(5, Cons(6, Cons(3, Cons(6, Cons(4, Cons(3, Cons(5, Cons(5, Cons(1, Cons(1, Cons(9, Cons(5, Cons(0, Cons(0, Cons(6, Cons(1, Cons(7, Cons(8, Cons(1, Cons(4, Cons(5, Cons(6, Cons(9, Cons(1, Cons(7, Cons(3, Cons(9, Cons(6, Cons(3, Cons(1, Cons(4, Cons(8, Cons(4, Cons(2, Cons(5, Cons(0, Cons(5, Cons(0, Cons(3, Cons(6, Cons(6, Cons(0, Cons(5, Cons(1, Cons(2, Cons(3, Cons(1, Cons(1, Cons(0, Cons(9, Cons(2, Cons(3, Cons(5, Cons(1, Cons(9, Cons(1, Cons(8, Cons(7, Cons(0, Cons(4, Cons(9, Cons(0, Cons(4, Cons(9, Cons(8, Cons(7, Cons(1, Cons(4, Cons(7, Cons(3, Cons(2, Cons(0, Cons(0, Cons(0, Cons(0, Cons(1, Cons(5, Cons(2, Cons(3, Cons(6, Cons(1, Cons(9, Cons(2, Cons(2, Cons(0, Cons(1, Cons(1, Cons(0, Cons(7, Cons(8, Cons(9, Cons(9, Cons(2, Cons(4, Cons(6, Cons(6, Cons(7, Cons(3, Cons(3, Cons(9, Cons(4, Cons(6, Cons(7, Cons(9, Cons(5, Cons(2, Cons(8, Cons(5, Cons(7, Cons(3, Cons(0, Cons(3, Cons(3, Cons(6, Cons(5, Cons(3, Cons(0, Cons(4, Cons(1, Cons(4, Cons(6, Cons(2, Cons(2, Cons(0, Cons(0, Cons(4, Cons(7, Cons(9, Cons(2, Cons(4, Cons(9, Cons(6, Cons(5, Cons(2, Cons(4, Cons(9, Cons(6, Cons(2, Cons(6, Cons(2, Cons(9, Cons(1, Cons(5, Cons(0, Cons(0, Cons(6, Cons(9, Cons(0, Cons(4, Cons(6, Cons(8, Cons(7, Cons(7, Cons(7, Cons(0, Cons(3, Cons(7, Cons(7, Cons(4, Cons(2, Cons(1, Cons(5, Cons(1, Cons(3, Cons(4, Cons(1, Cons(2, Cons(3, Cons(8, Cons(5, Cons(7, Cons(6, Cons(0, Cons(5, Cons(2, Cons(5, Cons(7, Cons(8, Cons(3, Cons(1, Cons(6, Cons(3, Cons(1, Cons(8, Cons(2, Cons(0, Cons(6, Cons(0, Cons(2, Cons(4, Cons(1, Cons(8, Cons(1, Cons(9, Cons(8, Cons(7, Cons(2, Cons(6, Cons(7, Cons(0, Cons(9, Cons(8, Cons(9, Cons(5, Cons(4, Cons(5, Cons(3, Cons(2, Cons(8, Cons(2, Cons(1, Cons(8, Cons(8, Cons(0, Cons(1, Cons(5, Cons(6, Cons(0, Cons(8, Cons(2, Cons(3, Cons(2, Cons(8, Cons(0, Cons(2, Cons(5, Cons(1, Cons(1, Cons(8, Cons(2, Cons(2, Cons(5, Cons(4, Cons(5, Cons(5, Cons(5, Cons(0, Cons(6, Cons(4, Cons(7, Cons(5, Cons(5, Cons(7, Cons(5, Cons(6, Cons(9, Cons(6, Cons(8, Cons(2, Cons(0, Cons(9, Cons(9, Cons(2, Cons(3, Cons(7, Cons(0, Cons(9, Cons(1, Cons(8, Cons(8, Cons(5, Cons(2, Cons(3, Cons(6, Cons(7, Cons(5, Cons(7, Cons(0, Cons(4, Cons(8, Cons(3, Cons(0, Cons(7, Cons(6, Cons(7, Cons(3, Cons(0, Cons(3, Cons(0, Cons(1, Cons(5, Cons(9, Cons(1, Cons(1, Cons(6, Cons(2, Cons(5, Cons(2, Cons(0, Cons(2, Cons(6, Cons(7, Cons(0, Cons(4, Cons(5, Cons(9, Cons(9, Cons(9, Cons(3, Cons(6, Cons(7, Cons(4, Cons(5, Cons(3, Cons(2, Cons(0, Cons(4, Cons(0, Cons(2, Cons(0, Cons(5, Cons(4, Cons(4, Cons(8, Cons(5, Cons(2, Cons(2, Cons(6, Cons(0, Cons(2, Cons(6, Cons(5, Cons(7, Cons(3, Cons(3, Cons(5, Cons(1, Cons(6, Cons(1, Cons(7, Cons(0, Cons(0, Cons(2, Cons(4, Cons(9, Cons(8, Cons(5, Cons(5, Cons(3, Cons(1, Cons(8, Cons(7, Cons(9, Cons(6, Cons(7, Cons(4, Cons(7, Cons(6, Cons(2, Cons(7, Cons(4, Cons(5, Cons(3, Cons(9, Cons(8, Cons(6, Cons(7, Cons(9, Cons(9, Cons(2, Cons(1, Cons(5, Cons(2, Cons(2, Cons(4, Cons(5, Cons(4, Cons(6, Cons(0, Cons(2, Cons(0, Cons(4, Cons(5, Cons(6, Cons(1, Cons(3, Cons(5, Cons(0, Cons(1, Cons(5, Cons(0, Cons(4, Cons(8, Cons(7, Cons(8, Cons(0, Cons(0, Cons(6, Cons(5, Cons(0, Cons(3, Cons(5, Cons(6, Cons(5, Cons(1, Cons(0, Cons(1, Cons(2, Cons(4, Cons(7, Cons(9, Cons(8, Cons(8, Cons(3, Cons(6, Cons(5, Cons(1, Cons(5, Cons(2, Cons(4, Cons(1, Cons(2, Cons(6, Cons(9, Cons(7, Cons(3, Cons(7, Cons(2, Cons(2, Cons(4, Cons(5, Cons(4, Cons(3, Cons(4, Cons(2, Cons(1, Cons(2, Cons(3, Cons(4, Cons(4, Cons(2, Cons(4, Cons(7, Cons(8, Cons(5, Cons(3, Cons(1, Cons(4, Cons(8, Cons(7, Cons(9, Cons(1, Cons(4, Cons(3, Cons(2, Cons(7, Cons(0, Cons(6, Cons(7, Cons(2, Cons(1, Cons(1, Cons(4, Cons(7, Cons(4, Cons(2, Cons(7, Cons(5, Cons(2, Cons(2, Cons(9, Cons(9, Cons(5, Cons(8, Cons(1, Cons(2, Cons(4, Cons(8, Cons(8, Cons(5, Cons(5, Cons(2, Cons(0, Cons(0, Cons(2, Cons(0, Cons(0, Cons(8, Cons(5, Cons(8, Cons(4, Cons(8, Cons(1, Cons(9, Cons(2, Cons(4, Cons(1, Cons(5, Cons(2, Cons(8, Cons(2, Cons(4, Cons(0, Cons(8, Cons(1, Cons(8, Cons(0, Cons(4, Cons(9, Cons(4, Cons(9, Cons(7, Cons(2, Cons(1, Cons(9, Cons(1, Cons(6, Cons(3, Cons(8, Cons(2, Cons(3, Cons(8, Cons(3, Cons(3, Cons(5, Cons(7, Cons(0, Cons(1, Cons(0, Cons(6, Cons(4, Cons(6, Cons(2, Cons(7, Cons(5, Cons(2, Cons(4, Cons(3, Cons(4, Cons(0, Cons(8, Cons(7, Cons(2, Cons(9, Cons(5, Cons(6, Cons(8, Cons(8, Cons(9, Cons(8, Cons(8, Cons(4, Cons(3, Cons(5, Cons(5, Cons(4, Cons(0, Cons(7, Cons(7, Cons(2, Cons(3, Cons(8, Cons(9, Cons(6, Cons(5, Cons(9, Cons(0, Cons(3, Cons(8, Cons(1, Cons(9, Cons(8, Cons(1, Cons(4, Cons(3, Cons(5, Cons(3, Cons(9, Cons(3, Cons(7, Cons(1, Cons(5, Cons(9, Cons(1, Cons(2, Cons(1, Cons(5, Cons(6, Cons(2, Cons(9, Cons(5, Cons(5, Cons(1, Cons(1, Cons(0, Cons(0, Cons(2, Cons(1, Cons(0, Cons(3, Cons(3, Cons(1, Cons(3, Cons(3, Cons(7, Cons(6, Cons(3, Cons(1, Cons(9, Cons(2, Cons(2, Cons(1, Cons(5, Cons(9, Cons(7, Cons(9, Cons(7, Cons(1, Cons(0, Cons(7, Cons(3, Cons(5, Cons(5, Cons(4, Cons(3, Cons(9, Cons(0, Cons(8, Cons(7, Cons(7, Cons(2, Cons(1, Cons(9, Cons(8, Cons(7, Cons(5, Cons(5, Cons(3, Cons(0, Cons(4, Cons(3, Cons(7, Cons(8, Cons(0, Cons(8, Cons(3, Cons(6, Cons(3, Cons(4, Cons(1, Cons(6, Cons(6, Cons(5, Cons(2, Cons(7, Cons(1, Cons(4, Cons(0, Cons(1, Cons(4, Cons(0, Cons(8, Cons(4, Cons(2, Cons(5, Cons(8, Cons(7, Cons(3, Cons(5, Cons(2, Cons(5, Cons(1, Cons(2, Cons(0, Cons(3, Cons(4, Cons(0, Cons(0, Cons(2, Cons(3, Cons(8, Cons(5, Cons(9, Cons(0, Nil
println("900 " + sorttimerec(ls900))
val ls1000: List = Cons(8, Cons(0, Cons(2, Cons(5, Cons(5, Cons(4, Cons(2, Cons(6, Cons(9, Cons(0, Cons(6, Cons(4, Cons(1, Cons(8, Cons(9, Cons(8, Cons(7, Cons(2, Cons(3, Cons(1, Cons(5, Cons(8, Cons(9, Cons(2, Cons(5, Cons(1, Cons(6, Cons(1, Cons(8, Cons(9, Cons(9, Cons(7, Cons(1, Cons(3, Cons(3, Cons(1, Cons(0, Cons(2, Cons(7, Cons(7, Cons(5, Cons(7, Cons(1, Cons(8, Cons(8, Cons(8, Cons(1, Cons(6, Cons(9, Cons(4, Cons(2, Cons(0, Cons(9, Cons(9, Cons(3, Cons(2, Cons(1, Cons(7, Cons(8, Cons(8, Cons(6, Cons(5, Cons(2, Cons(4, Cons(6, Cons(6, Cons(8, Cons(0, Cons(2, Cons(8, Cons(0, Cons(8, Cons(5, Cons(9, Cons(3, Cons(3, Cons(1, Cons(0, Cons(0, Cons(2, Cons(3, Cons(0, Cons(6, Cons(2, Cons(9, Cons(8, Cons(7, Cons(4, Cons(3, Cons(1, Cons(3, Cons(4, Cons(9, Cons(4, Cons(6, Cons(9, Cons(8, Cons(5, Cons(7, Cons(3, Cons(2, Cons(5, Cons(7, Cons(6, Cons(4, Cons(6, Cons(1, Cons(1, Cons(8, Cons(9, Cons(1, Cons(4, Cons(9, Cons(9, Cons(1, Cons(7, Cons(1, Cons(9, Cons(2, Cons(1, Cons(3, Cons(3, Cons(4, Cons(2, Cons(1, Cons(3, Cons(6, Cons(0, Cons(4, Cons(4, Cons(1, Cons(4, Cons(6, Cons(0, Cons(5, Cons(0, Cons(5, Cons(0, Cons(3, Cons(2, Cons(9, Cons(9, Cons(0, Cons(0, Cons(0, Cons(7, Cons(2, Cons(3, Cons(2, Cons(3, Cons(7, Cons(8, Cons(0, Cons(7, Cons(8, Cons(2, Cons(4, Cons(5, Cons(0, Cons(0, Cons(5, Cons(6, Cons(2, Cons(8, Cons(8, Cons(8, Cons(3, Cons(7, Cons(1, Cons(2, Cons(9, Cons(5, Cons(8, Cons(2, Cons(2, Cons(6, Cons(9, Cons(4, Cons(8, Cons(9, Cons(8, Cons(1, Cons(4, Cons(4, Cons(2, Cons(7, Cons(6, Cons(0, Cons(6, Cons(7, Cons(5, Cons(2, Cons(9, Cons(7, Cons(4, Cons(2, Cons(5, Cons(0, Cons(3, Cons(0, Cons(7, Cons(2, Cons(7, Cons(4, Cons(5, Cons(4, Cons(2, Cons(9, Cons(2, Cons(5, Cons(7, Cons(4, Cons(8, Cons(7, Cons(6, Cons(5, Cons(6, Cons(1, Cons(4, Cons(4, Cons(8, Cons(9, Cons(7, Cons(5, Cons(5, Cons(2, Cons(0, Cons(9, Cons(2, Cons(4, Cons(4, Cons(8, Cons(2, Cons(8, Cons(8, Cons(9, Cons(1, Cons(8, Cons(5, Cons(8, Cons(5, Cons(2, Cons(9, Cons(7, Cons(9, Cons(2, Cons(1, Cons(5, Cons(1, Cons(8, Cons(4, Cons(3, Cons(0, Cons(2, Cons(8, Cons(1, Cons(0, Cons(8, Cons(6, Cons(4, Cons(9, Cons(2, Cons(4, Cons(9, Cons(5, Cons(9, Cons(0, Cons(8, Cons(3, Cons(6, Cons(5, Cons(0, Cons(7, Cons(8, Cons(3, Cons(1, Cons(6, Cons(9, Cons(2, Cons(8, Cons(0, Cons(4, Cons(5, Cons(4, Cons(3, Cons(1, Cons(0, Cons(1, Cons(3, Cons(2, Cons(1, Cons(5, Cons(8, Cons(9, Cons(5, Cons(3, Cons(8, Cons(4, Cons(4, Cons(6, Cons(1, Cons(2, Cons(0, Cons(4, Cons(6, Cons(7, Cons(6, Cons(1, Cons(1, Cons(9, Cons(6, Cons(4, Cons(6, Cons(5, Cons(6, Cons(6, Cons(1, Cons(2, Cons(9, Cons(4, Cons(8, Cons(4, Cons(6, Cons(9, Cons(3, Cons(4, Cons(6, Cons(1, Cons(3, Cons(6, Cons(8, Cons(0, Cons(9, Cons(2, Cons(5, Cons(0, Cons(9, Cons(3, Cons(3, Cons(0, Cons(6, Cons(0, Cons(1, Cons(1, Cons(1, Cons(9, Cons(3, Cons(0, Cons(4, Cons(2, Cons(7, Cons(3, Cons(6, Cons(2, Cons(0, Cons(1, Cons(3, Cons(5, Cons(3, Cons(4, Cons(7, Cons(3, Cons(7, Cons(8, Cons(4, Cons(7, Cons(0, Cons(0, Cons(6, Cons(1, Cons(3, Cons(3, Cons(3, Cons(6, Cons(6, Cons(4, Cons(1, Cons(4, Cons(7, Cons(8, Cons(7, Cons(1, Cons(6, Cons(2, Cons(4, Cons(4, Cons(3, Cons(0, Cons(1, Cons(1, Cons(5, Cons(1, Cons(8, Cons(2, Cons(2, Cons(7, Cons(0, Cons(5, Cons(0, Cons(8, Cons(9, Cons(9, Cons(9, Cons(2, Cons(3, Cons(2, Cons(5, Cons(9, Cons(3, Cons(2, Cons(0, Cons(9, Cons(8, Cons(9, Cons(6, Cons(7, Cons(7, Cons(9, Cons(1, Cons(5, Cons(7, Cons(1, Cons(1, Cons(1, Cons(9, Cons(2, Cons(2, Cons(8, Cons(9, Cons(6, Cons(1, Cons(4, Cons(2, Cons(0, Cons(2, Cons(1, Cons(2, Cons(8, Cons(6, Cons(1, Cons(1, Cons(5, Cons(9, Cons(0, Cons(1, Cons(5, Cons(6, Cons(2, Cons(1, Cons(7, Cons(5, Cons(5, Cons(7, Cons(0, Cons(9, Cons(9, Cons(2, Cons(2, Cons(2, Cons(0, Cons(9, Cons(6, Cons(9, Cons(5, Cons(7, Cons(8, Cons(1, Cons(4, Cons(1, Cons(0, Cons(9, Cons(9, Cons(7, Cons(8, Cons(8, Cons(3, Cons(4, Cons(4, Cons(1, Cons(8, Cons(4, Cons(8, Cons(0, Cons(4, Cons(9, Cons(4, Cons(6, Cons(2, Cons(8, Cons(9, Cons(1, Cons(5, Cons(0, Cons(9, Cons(8, Cons(6, Cons(8, Cons(0, Cons(3, Cons(5, Cons(1, Cons(6, Cons(0, Cons(9, Cons(8, Cons(0, Cons(3, Cons(4, Cons(4, Cons(0, Cons(4, Cons(5, Cons(9, Cons(9, Cons(1, Cons(9, Cons(3, Cons(3, Cons(9, Cons(8, Cons(7, Cons(8, Cons(0, Cons(9, Cons(3, Cons(8, Cons(9, Cons(6, Cons(1, Cons(3, Cons(4, Cons(9, Cons(0, Cons(1, Cons(8, Cons(6, Cons(1, Cons(2, Cons(6, Cons(2, Cons(4, Cons(6, Cons(1, Cons(5, Cons(1, Cons(3, Cons(9, Cons(2, Cons(8, Cons(4, Cons(2, Cons(9, Cons(1, Cons(3, Cons(8, Cons(3, Cons(3, Cons(7, Cons(2, Cons(7, Cons(6, Cons(9, Cons(7, Cons(5, Cons(9, Cons(9, Cons(5, Cons(9, Cons(5, Cons(6, Cons(8, Cons(9, Cons(2, Cons(0, Cons(7, Cons(6, Cons(8, Cons(0, Cons(5, Cons(5, Cons(2, Cons(2, Cons(9, Cons(7, Cons(7, Cons(7, Cons(1, Cons(5, Cons(7, Cons(2, Cons(0, Cons(3, Cons(6, Cons(7, Cons(7, Cons(7, Cons(1, Cons(9, Cons(2, Cons(3, Cons(0, Cons(0, Cons(3, Cons(4, Cons(0, Cons(3, Cons(4, Cons(2, Cons(5, Cons(5, Cons(3, Cons(0, Cons(0, Cons(3, Cons(9, Cons(9, Cons(3, Cons(5, Cons(8, Cons(7, Cons(8, Cons(2, Cons(1, Cons(5, Cons(2, Cons(0, Cons(0, Cons(7, Cons(7, Cons(8, Cons(0, Cons(3, Cons(8, Cons(4, Cons(7, Cons(5, Cons(9, Cons(4, Cons(9, Cons(5, Cons(8, Cons(8, Cons(5, Cons(4, Cons(0, Cons(5, Cons(8, Cons(5, Cons(3, Cons(4, Cons(3, Cons(0, Cons(0, Cons(1, Cons(8, Cons(1, Cons(0, Cons(6, Cons(0, Cons(9, Cons(6, Cons(6, Cons(9, Cons(7, Cons(7, Cons(9, Cons(4, Cons(8, Cons(7, Cons(5, Cons(1, Cons(6, Cons(2, Cons(7, Cons(9, Cons(0, Cons(4, Cons(5, Cons(5, Cons(4, Cons(3, Cons(0, Cons(4, Cons(6, Cons(1, Cons(3, Cons(7, Cons(6, Cons(8, Cons(5, Cons(2, Cons(5, Cons(4, Cons(3, Cons(7, Cons(0, Cons(7, Cons(1, Cons(5, Cons(5, Cons(4, Cons(5, Cons(2, Cons(8, Cons(2, Cons(6, Cons(1, Cons(9, Cons(6, Cons(7, Cons(3, Cons(6, Cons(4, Cons(5, Cons(5, Cons(4, Cons(4, Cons(5, Cons(5, Cons(4, Cons(1, Cons(1, Cons(2, Cons(1, Cons(6, Cons(8, Cons(8, Cons(2, Cons(2, Cons(6, Cons(8, Cons(8, Cons(1, Cons(1, Cons(5, Cons(1, Cons(7, Cons(7, Cons(6, Cons(6, Cons(6, Cons(8, Cons(6, Cons(4, Cons(1, Cons(3, Cons(0, Cons(4, Cons(1, Cons(4, Cons(6, Cons(3, Cons(7, Cons(5, Cons(0, Cons(7, Cons(2, Cons(9, Cons(6, Cons(1, Cons(9, Cons(7, Cons(7, Cons(9, Cons(0, Cons(0, Cons(0, Cons(5, Cons(6, Cons(2, Cons(0, Cons(9, Cons(2, Cons(9, Cons(6, Cons(9, Cons(3, Cons(6, Cons(2, Cons(2, Cons(4, Cons(0, Cons(3, Cons(0, Cons(1, Cons(6, Cons(6, Cons(3, Cons(2, Cons(1, Cons(1, Cons(0, Cons(2, Cons(6, Cons(3, Cons(1, Cons(7, Cons(3, Cons(6, Cons(3, Cons(1, Cons(2, Cons(4, Cons(9, Cons(9, Cons(6, Cons(8, Cons(8, Cons(3, Cons(8, Cons(3, Cons(9, Cons(5, Cons(3, Cons(3, Cons(9, Cons(1, Cons(3, Cons(0, Cons(2, Cons(8, Cons(4, Cons(3, Cons(2, Cons(9, Cons(8, Cons(5, Cons(4, Cons(7, Cons(5, Cons(8, Cons(8, Cons(6, Cons(6, Cons(6, Cons(3, Cons(8, Cons(4, Cons(4, Cons(2, Cons(6, Cons(8, Cons(3, Cons(7, Cons(2, Cons(7, Cons(0, Cons(1, Cons(8, Cons(9, Cons(9, Cons(5, Cons(1, Cons(5, Cons(4, Cons(0, Cons(0, Cons(9, Cons(9, Cons(9, Cons(6, Cons(1, Cons(6, Cons(0, Cons(4, Cons(3, Cons(3, Cons(5, Cons(1, Cons(0, Cons(1, Cons(2, Cons(6, Cons(0, Cons(5, Cons(0, Cons(1, Cons(5, Cons(6, Cons(3, Cons(4, Cons(5, Cons(2, Cons(9, Cons(3, Cons(7, Cons(0, Cons(1, Cons(1, Cons(6, Cons(0, Cons(1, Cons(7, Cons(8, Cons(2, Cons(8, Cons(7, Cons(3, Cons(5, Cons(4, Cons(4, Cons(8, Cons(9, Cons(4, Cons(0, Cons(5, Cons(8, Cons(3, Cons(8, Cons(7, Cons(0, Cons(3, Cons(4, Cons(7, Cons(3, Cons(0, Cons(3, Cons(0, Cons(6, Cons(5, Cons(8, Cons(2, Cons(4, Cons(4, Cons(9, Cons(1, Cons(1, Cons(2, Cons(4, Cons(0, Cons(0, Cons(3, Cons(9, Cons(6, Cons(1, Cons(9, Cons(1, Cons(1, Cons(3, Cons(5, Cons(0, Cons(0, Cons(0, Cons(3, Cons(3, Cons(6, Cons(8, Cons(8, Cons(0, Cons(2, Cons(2, Cons(8, Cons(1, Cons(0, Cons(6, Cons(0, Cons(6, Cons(7, Cons(8, Cons(2, Cons(2, Cons(8, Cons(0, Cons(7, Cons(2, Cons(5, Cons(0, Cons(4, Cons(1, Cons(3, Cons(9, Cons(1, Cons(7, Cons(8, Cons(2, Cons(5, Cons(4, Cons(8, Cons(5, Cons(0, Cons(3, Cons(6, Cons(2, Cons(4, Cons(6, Cons(0, Cons(4, Cons(7, Cons(8, Cons(4, Cons(7, Cons(2, Cons(8, Cons(2, Cons(3, Cons(1, Cons(8, Cons(6, Cons(3, Cons(7, Nil
println("1000 " + sorttimerec(ls1000))
val ls1100: List = Cons(2, Cons(6, Cons(2, Cons(7, Cons(3, Cons(7, Cons(5, Cons(0, Cons(0, Cons(7, Cons(0, Cons(1, Cons(8, Cons(3, Cons(4, Cons(0, Cons(2, Cons(6, Cons(3, Cons(3, Cons(3, Cons(3, Cons(7, Cons(6, Cons(4, Cons(5, Cons(5, Cons(1, Cons(9, Cons(9, Cons(7, Cons(6, Cons(5, Cons(8, Cons(3, Cons(3, Cons(0, Cons(8, Cons(1, Cons(0, Cons(7, Cons(5, Cons(1, Cons(6, Cons(2, Cons(0, Cons(4, Cons(6, Cons(2, Cons(3, Cons(0, Cons(1, Cons(8, Cons(1, Cons(6, Cons(6, Cons(1, Cons(7, Cons(2, Cons(7, Cons(6, Cons(3, Cons(4, Cons(5, Cons(7, Cons(3, Cons(3, Cons(3, Cons(5, Cons(6, Cons(8, Cons(4, Cons(1, Cons(7, Cons(4, Cons(4, Cons(1, Cons(7, Cons(9, Cons(8, Cons(6, Cons(2, Cons(1, Cons(3, Cons(6, Cons(6, Cons(3, Cons(0, Cons(0, Cons(0, Cons(5, Cons(2, Cons(7, Cons(4, Cons(3, Cons(5, Cons(8, Cons(8, Cons(0, Cons(5, Cons(0, Cons(9, Cons(9, Cons(2, Cons(4, Cons(0, Cons(1, Cons(6, Cons(7, Cons(4, Cons(3, Cons(1, Cons(8, Cons(0, Cons(4, Cons(0, Cons(5, Cons(7, Cons(5, Cons(0, Cons(1, Cons(3, Cons(0, Cons(2, Cons(3, Cons(9, Cons(3, Cons(9, Cons(7, Cons(2, Cons(0, Cons(8, Cons(1, Cons(8, Cons(4, Cons(1, Cons(7, Cons(0, Cons(6, Cons(9, Cons(1, Cons(9, Cons(9, Cons(8, Cons(2, Cons(2, Cons(0, Cons(3, Cons(8, Cons(9, Cons(1, Cons(4, Cons(5, Cons(4, Cons(1, Cons(2, Cons(2, Cons(4, Cons(8, Cons(8, Cons(1, Cons(6, Cons(6, Cons(2, Cons(3, Cons(2, Cons(9, Cons(2, Cons(5, Cons(1, Cons(3, Cons(4, Cons(3, Cons(7, Cons(8, Cons(8, Cons(9, Cons(6, Cons(1, Cons(1, Cons(0, Cons(5, Cons(0, Cons(3, Cons(9, Cons(6, Cons(7, Cons(5, Cons(1, Cons(1, Cons(6, Cons(4, Cons(8, Cons(0, Cons(5, Cons(1, Cons(2, Cons(8, Cons(6, Cons(6, Cons(2, Cons(2, Cons(5, Cons(4, Cons(4, Cons(4, Cons(9, Cons(7, Cons(4, Cons(1, Cons(1, Cons(7, Cons(1, Cons(6, Cons(4, Cons(0, Cons(6, Cons(3, Cons(7, Cons(7, Cons(0, Cons(4, Cons(3, Cons(0, Cons(7, Cons(5, Cons(3, Cons(4, Cons(3, Cons(2, Cons(9, Cons(9, Cons(6, Cons(0, Cons(5, Cons(8, Cons(3, Cons(3, Cons(0, Cons(2, Cons(2, Cons(5, Cons(7, Cons(2, Cons(5, Cons(1, Cons(6, Cons(8, Cons(2, Cons(9, Cons(9, Cons(0, Cons(3, Cons(0, Cons(5, Cons(6, Cons(5, Cons(3, Cons(3, Cons(8, Cons(8, Cons(6, Cons(4, Cons(8, Cons(4, Cons(6, Cons(9, Cons(5, Cons(6, Cons(5, Cons(7, Cons(1, Cons(4, Cons(3, Cons(3, Cons(9, Cons(3, Cons(4, Cons(4, Cons(7, Cons(2, Cons(2, Cons(7, Cons(9, Cons(5, Cons(4, Cons(1, Cons(9, Cons(7, Cons(8, Cons(6, Cons(5, Cons(9, Cons(7, Cons(1, Cons(8, Cons(7, Cons(5, Cons(8, Cons(4, Cons(5, Cons(2, Cons(9, Cons(6, Cons(2, Cons(3, Cons(9, Cons(9, Cons(3, Cons(6, Cons(9, Cons(7, Cons(1, Cons(4, Cons(8, Cons(4, Cons(8, Cons(9, Cons(8, Cons(8, Cons(1, Cons(7, Cons(0, Cons(0, Cons(2, Cons(4, Cons(8, Cons(8, Cons(1, Cons(3, Cons(1, Cons(2, Cons(2, Cons(1, Cons(1, Cons(9, Cons(9, Cons(9, Cons(9, Cons(9, Cons(2, Cons(6, Cons(2, Cons(3, Cons(5, Cons(5, Cons(9, Cons(8, Cons(3, Cons(4, Cons(8, Cons(8, Cons(6, Cons(5, Cons(1, Cons(8, Cons(0, Cons(5, Cons(5, Cons(8, Cons(3, Cons(4, Cons(4, Cons(8, Cons(5, Cons(3, Cons(8, Cons(4, Cons(0, Cons(4, Cons(5, Cons(9, Cons(8, Cons(7, Cons(4, Cons(8, Cons(5, Cons(3, Cons(6, Cons(3, Cons(5, Cons(0, Cons(8, Cons(4, Cons(8, Cons(9, Cons(2, Cons(4, Cons(2, Cons(5, Cons(7, Cons(6, Cons(6, Cons(5, Cons(7, Cons(5, Cons(6, Cons(5, Cons(3, Cons(9, Cons(3, Cons(8, Cons(2, Cons(3, Cons(6, Cons(3, Cons(6, Cons(5, Cons(1, Cons(5, Cons(2, Cons(9, Cons(9, Cons(5, Cons(5, Cons(0, Cons(1, Cons(6, Cons(1, Cons(8, Cons(6, Cons(2, Cons(4, Cons(3, Cons(5, Cons(0, Cons(1, Cons(1, Cons(5, Cons(1, Cons(3, Cons(6, Cons(2, Cons(8, Cons(6, Cons(0, Cons(6, Cons(7, Cons(7, Cons(3, Cons(2, Cons(8, Cons(1, Cons(0, Cons(7, Cons(6, Cons(2, Cons(5, Cons(7, Cons(2, Cons(5, Cons(0, Cons(5, Cons(6, Cons(1, Cons(3, Cons(8, Cons(1, Cons(0, Cons(8, Cons(2, Cons(3, Cons(2, Cons(7, Cons(6, Cons(0, Cons(6, Cons(9, Cons(9, Cons(5, Cons(9, Cons(5, Cons(7, Cons(3, Cons(5, Cons(9, Cons(7, Cons(0, Cons(3, Cons(0, Cons(3, Cons(0, Cons(9, Cons(7, Cons(2, Cons(9, Cons(9, Cons(1, Cons(9, Cons(6, Cons(8, Cons(8, Cons(7, Cons(5, Cons(5, Cons(6, Cons(8, Cons(6, Cons(8, Cons(9, Cons(9, Cons(4, Cons(3, Cons(9, Cons(6, Cons(1, Cons(2, Cons(7, Cons(5, Cons(1, Cons(7, Cons(2, Cons(4, Cons(2, Cons(9, Cons(9, Cons(0, Cons(1, Cons(0, Cons(8, Cons(5, Cons(7, Cons(6, Cons(5, Cons(7, Cons(8, Cons(0, Cons(6, Cons(4, Cons(6, Cons(7, Cons(9, Cons(8, Cons(9, Cons(6, Cons(4, Cons(2, Cons(1, Cons(0, Cons(5, Cons(8, Cons(5, Cons(4, Cons(0, Cons(9, Cons(4, Cons(3, Cons(5, Cons(4, Cons(4, Cons(5, Cons(8, Cons(0, Cons(5, Cons(7, Cons(9, Cons(7, Cons(7, Cons(6, Cons(5, Cons(0, Cons(5, Cons(5, Cons(6, Cons(3, Cons(4, Cons(8, Cons(9, Cons(0, Cons(7, Cons(4, Cons(2, Cons(1, Cons(0, Cons(1, Cons(8, Cons(5, Cons(4, Cons(2, Cons(5, Cons(5, Cons(8, Cons(9, Cons(8, Cons(1, Cons(6, Cons(2, Cons(5, Cons(1, Cons(5, Cons(7, Cons(0, Cons(1, Cons(6, Cons(8, Cons(3, Cons(4, Cons(5, Cons(8, Cons(9, Cons(5, Cons(8, Cons(6, Cons(5, Cons(1, Cons(9, Cons(0, Cons(1, Cons(4, Cons(8, Cons(2, Cons(2, Cons(2, Cons(9, Cons(6, Cons(5, Cons(8, Cons(7, Cons(9, Cons(8, Cons(0, Cons(2, Cons(8, Cons(1, Cons(5, Cons(4, Cons(8, Cons(2, Cons(8, Cons(9, Cons(0, Cons(2, Cons(6, Cons(0, Cons(3, Cons(6, Cons(3, Cons(6, Cons(0, Cons(7, Cons(8, Cons(2, Cons(5, Cons(3, Cons(7, Cons(5, Cons(3, Cons(8, Cons(2, Cons(3, Cons(6, Cons(0, Cons(0, Cons(6, Cons(3, Cons(8, Cons(7, Cons(4, Cons(9, Cons(9, Cons(6, Cons(4, Cons(5, Cons(5, Cons(4, Cons(7, Cons(5, Cons(8, Cons(3, Cons(0, Cons(9, Cons(4, Cons(0, Cons(1, Cons(5, Cons(9, Cons(7, Cons(6, Cons(2, Cons(0, Cons(9, Cons(1, Cons(9, Cons(9, Cons(7, Cons(1, Cons(5, Cons(7, Cons(6, Cons(3, Cons(1, Cons(0, Cons(4, Cons(3, Cons(7, Cons(9, Cons(1, Cons(2, Cons(3, Cons(7, Cons(6, Cons(7, Cons(0, Cons(1, Cons(8, Cons(5, Cons(6, Cons(6, Cons(4, Cons(2, Cons(1, Cons(9, Cons(0, Cons(6, Cons(3, Cons(9, Cons(0, Cons(6, Cons(6, Cons(1, Cons(9, Cons(4, Cons(4, Cons(6, Cons(5, Cons(7, Cons(6, Cons(1, Cons(4, Cons(0, Cons(2, Cons(9, Cons(9, Cons(0, Cons(2, Cons(9, Cons(3, Cons(5, Cons(8, Cons(6, Cons(8, Cons(0, Cons(4, Cons(2, Cons(4, Cons(4, Cons(1, Cons(1, Cons(4, Cons(7, Cons(4, Cons(9, Cons(7, Cons(9, Cons(2, Cons(2, Cons(6, Cons(6, Cons(3, Cons(3, Cons(1, Cons(3, Cons(3, Cons(2, Cons(2, Cons(9, Cons(7, Cons(2, Cons(4, Cons(4, Cons(1, Cons(0, Cons(8, Cons(8, Cons(1, Cons(6, Cons(7, Cons(7, Cons(3, Cons(0, Cons(8, Cons(9, Cons(2, Cons(3, Cons(2, Cons(1, Cons(8, Cons(1, Cons(4, Cons(7, Cons(1, Cons(4, Cons(2, Cons(1, Cons(4, Cons(2, Cons(2, Cons(4, Cons(3, Cons(8, Cons(3, Cons(1, Cons(0, Cons(1, Cons(4, Cons(6, Cons(3, Cons(5, Cons(8, Cons(2, Cons(8, Cons(8, Cons(7, Cons(1, Cons(2, Cons(9, Cons(9, Cons(6, Cons(1, Cons(1, Cons(1, Cons(6, Cons(5, Cons(5, Cons(8, Cons(7, Cons(9, Cons(8, Cons(3, Cons(8, Cons(8, Cons(5, Cons(8, Cons(1, Cons(7, Cons(5, Cons(8, Cons(0, Cons(6, Cons(4, Cons(0, Cons(1, Cons(0, Cons(6, Cons(8, Cons(3, Cons(4, Cons(0, Cons(6, Cons(8, Cons(2, Cons(4, Cons(6, Cons(8, Cons(2, Cons(1, Cons(3, Cons(3, Cons(2, Cons(9, Cons(0, Cons(0, Cons(5, Cons(2, Cons(6, Cons(0, Cons(6, Cons(8, Cons(8, Cons(1, Cons(5, Cons(2, Cons(8, Cons(9, Cons(6, Cons(3, Cons(0, Cons(2, Cons(5, Cons(8, Cons(2, Cons(2, Cons(6, Cons(5, Cons(1, Cons(6, Cons(5, Cons(4, Cons(6, Cons(3, Cons(6, Cons(6, Cons(7, Cons(9, Cons(5, Cons(4, Cons(6, Cons(2, Cons(1, Cons(3, Cons(5, Cons(1, Cons(4, Cons(6, Cons(1, Cons(0, Cons(1, Cons(5, Cons(2, Cons(4, Cons(6, Cons(6, Cons(3, Cons(0, Cons(2, Cons(0, Cons(3, Cons(4, Cons(4, Cons(3, Cons(2, Cons(7, Cons(7, Cons(8, Cons(5, Cons(6, Cons(6, Cons(9, Cons(6, Cons(2, Cons(9, Cons(4, Cons(1, Cons(7, Cons(7, Cons(4, Cons(9, Cons(0, Cons(2, Cons(3, Cons(8, Cons(4, Cons(0, Cons(9, Cons(2, Cons(9, Cons(5, Cons(5, Cons(5, Cons(6, Cons(7, Cons(0, Cons(7, Cons(3, Cons(0, Cons(7, Cons(0, Cons(9, Cons(4, Cons(8, Cons(1, Cons(0, Cons(7, Cons(1, Cons(2, Cons(8, Cons(3, Cons(3, Cons(8, Cons(2, Cons(5, Cons(1, Cons(6, Cons(6, Cons(4, Cons(3, Cons(1, Cons(5, Cons(0, Cons(8, Cons(9, Cons(3, Cons(8, Cons(8, Cons(2, Cons(2, Cons(7, Cons(6, Cons(1, Cons(3, Cons(3, Cons(5, Cons(4, Cons(8, Cons(6, Cons(4, Cons(0, Cons(0, Cons(0, Cons(3, Cons(0, Cons(5, Cons(0, Cons(9, Cons(6, Cons(5, Cons(6, Cons(8, Cons(4, Cons(9, Cons(5, Cons(3, Cons(2, Cons(0, Cons(9, Cons(2, Cons(7, Cons(8, Cons(8, Cons(0, Cons(5, Cons(1, Cons(2, Cons(8, Cons(3, Cons(3, Cons(4, Cons(0, Cons(4, Cons(4, Cons(9, Cons(6, Cons(0, Cons(1, Cons(6, Cons(9, Cons(9, Cons(8, Cons(0, Cons(9, Cons(1, Cons(7, Cons(6, Cons(2, Cons(3, Cons(4, Cons(5, Cons(5, Cons(1, Cons(0, Cons(9, Cons(1, Cons(4, Cons(5, Cons(3, Cons(1, Cons(2, Cons(5, Cons(9, Cons(5, Cons(9, Cons(0, Cons(5, Cons(9, Cons(8, Cons(3, Cons(7, Cons(0, Cons(1, Cons(8, Cons(0, Cons(4, Cons(1, Cons(5, Cons(0, Cons(0, Cons(7, Cons(5, Cons(9, Cons(7, Cons(8, Cons(8, Cons(4, Cons(5, Cons(9, Cons(2, Cons(6, Cons(6, Cons(1, Cons(0, Cons(6, Cons(0, Cons(3, Cons(4, Cons(8, Cons(0, Cons(3, Cons(1, Cons(2, Cons(2, Nil
println("1100 " + sorttimerec(ls1100))
val ls1200: List = Cons(2, Cons(9, Cons(3, Cons(5, Cons(8, Cons(4, Cons(5, Cons(3, Cons(8, Cons(7, Cons(9, Cons(9, Cons(6, Cons(1, Cons(6, Cons(2, Cons(9, Cons(4, Cons(2, Cons(5, Cons(6, Cons(2, Cons(2, Cons(7, Cons(3, Cons(5, Cons(1, Cons(4, Cons(7, Cons(6, Cons(2, Cons(8, Cons(3, Cons(1, Cons(9, Cons(7, Cons(7, Cons(2, Cons(6, Cons(0, Cons(9, Cons(5, Cons(7, Cons(1, Cons(9, Cons(8, Cons(9, Cons(3, Cons(3, Cons(3, Cons(6, Cons(1, Cons(9, Cons(3, Cons(8, Cons(3, Cons(0, Cons(4, Cons(5, Cons(4, Cons(5, Cons(3, Cons(3, Cons(9, Cons(6, Cons(1, Cons(0, Cons(8, Cons(9, Cons(2, Cons(9, Cons(4, Cons(6, Cons(2, Cons(8, Cons(9, Cons(3, Cons(9, Cons(8, Cons(6, Cons(8, Cons(1, Cons(8, Cons(8, Cons(6, Cons(9, Cons(5, Cons(8, Cons(5, Cons(2, Cons(7, Cons(2, Cons(5, Cons(6, Cons(2, Cons(3, Cons(7, Cons(5, Cons(5, Cons(1, Cons(3, Cons(7, Cons(3, Cons(5, Cons(5, Cons(8, Cons(8, Cons(7, Cons(2, Cons(1, Cons(2, Cons(2, Cons(8, Cons(8, Cons(0, Cons(5, Cons(9, Cons(9, Cons(3, Cons(5, Cons(0, Cons(8, Cons(0, Cons(9, Cons(5, Cons(4, Cons(8, Cons(7, Cons(7, Cons(9, Cons(8, Cons(7, Cons(5, Cons(2, Cons(4, Cons(3, Cons(2, Cons(2, Cons(3, Cons(7, Cons(7, Cons(9, Cons(5, Cons(2, Cons(7, Cons(6, Cons(6, Cons(1, Cons(2, Cons(2, Cons(3, Cons(7, Cons(9, Cons(0, Cons(8, Cons(6, Cons(4, Cons(9, Cons(9, Cons(5, Cons(6, Cons(3, Cons(7, Cons(4, Cons(8, Cons(5, Cons(1, Cons(6, Cons(7, Cons(0, Cons(9, Cons(9, Cons(9, Cons(1, Cons(1, Cons(8, Cons(0, Cons(2, Cons(4, Cons(5, Cons(5, Cons(6, Cons(7, Cons(7, Cons(1, Cons(9, Cons(3, Cons(9, Cons(9, Cons(9, Cons(2, Cons(1, Cons(8, Cons(4, Cons(3, Cons(5, Cons(0, Cons(9, Cons(4, Cons(6, Cons(0, Cons(1, Cons(0, Cons(3, Cons(7, Cons(8, Cons(0, Cons(8, Cons(1, Cons(6, Cons(9, Cons(5, Cons(4, Cons(0, Cons(5, Cons(9, Cons(1, Cons(4, Cons(1, Cons(4, Cons(0, Cons(0, Cons(2, Cons(5, Cons(5, Cons(1, Cons(7, Cons(7, Cons(1, Cons(5, Cons(7, Cons(2, Cons(7, Cons(8, Cons(7, Cons(1, Cons(1, Cons(1, Cons(5, Cons(2, Cons(8, Cons(7, Cons(5, Cons(1, Cons(2, Cons(7, Cons(7, Cons(7, Cons(9, Cons(4, Cons(6, Cons(3, Cons(4, Cons(2, Cons(0, Cons(7, Cons(9, Cons(8, Cons(7, Cons(1, Cons(4, Cons(8, Cons(5, Cons(5, Cons(3, Cons(2, Cons(9, Cons(9, Cons(4, Cons(0, Cons(2, Cons(8, Cons(2, Cons(0, Cons(2, Cons(6, Cons(4, Cons(8, Cons(4, Cons(2, Cons(3, Cons(6, Cons(7, Cons(0, Cons(6, Cons(2, Cons(5, Cons(5, Cons(0, Cons(9, Cons(5, Cons(7, Cons(7, Cons(7, Cons(4, Cons(3, Cons(8, Cons(4, Cons(7, Cons(0, Cons(0, Cons(6, Cons(5, Cons(1, Cons(2, Cons(8, Cons(0, Cons(7, Cons(2, Cons(3, Cons(3, Cons(1, Cons(4, Cons(9, Cons(2, Cons(0, Cons(5, Cons(6, Cons(1, Cons(9, Cons(6, Cons(9, Cons(2, Cons(1, Cons(5, Cons(9, Cons(7, Cons(6, Cons(8, Cons(3, Cons(8, Cons(8, Cons(1, Cons(1, Cons(4, Cons(8, Cons(2, Cons(2, Cons(9, Cons(3, Cons(8, Cons(5, Cons(3, Cons(3, Cons(4, Cons(6, Cons(8, Cons(7, Cons(4, Cons(6, Cons(1, Cons(1, Cons(9, Cons(6, Cons(3, Cons(6, Cons(3, Cons(2, Cons(4, Cons(3, Cons(4, Cons(9, Cons(1, Cons(2, Cons(0, Cons(9, Cons(5, Cons(9, Cons(2, Cons(8, Cons(0, Cons(4, Cons(3, Cons(4, Cons(8, Cons(2, Cons(1, Cons(6, Cons(0, Cons(2, Cons(4, Cons(3, Cons(4, Cons(3, Cons(0, Cons(2, Cons(7, Cons(2, Cons(2, Cons(6, Cons(9, Cons(8, Cons(9, Cons(6, Cons(2, Cons(4, Cons(4, Cons(8, Cons(4, Cons(5, Cons(1, Cons(7, Cons(5, Cons(4, Cons(5, Cons(1, Cons(2, Cons(1, Cons(5, Cons(6, Cons(7, Cons(3, Cons(1, Cons(6, Cons(2, Cons(6, Cons(0, Cons(5, Cons(4, Cons(0, Cons(3, Cons(7, Cons(0, Cons(7, Cons(3, Cons(4, Cons(5, Cons(3, Cons(7, Cons(0, Cons(9, Cons(8, Cons(9, Cons(8, Cons(8, Cons(8, Cons(6, Cons(9, Cons(9, Cons(5, Cons(3, Cons(5, Cons(9, Cons(4, Cons(3, Cons(1, Cons(9, Cons(8, Cons(5, Cons(3, Cons(6, Cons(1, Cons(7, Cons(0, Cons(8, Cons(7, Cons(2, Cons(0, Cons(2, Cons(1, Cons(8, Cons(8, Cons(6, Cons(4, Cons(4, Cons(7, Cons(3, Cons(2, Cons(6, Cons(5, Cons(0, Cons(7, Cons(7, Cons(2, Cons(6, Cons(2, Cons(6, Cons(0, Cons(0, Cons(9, Cons(7, Cons(1, Cons(7, Cons(8, Cons(3, Cons(6, Cons(2, Cons(6, Cons(1, Cons(7, Cons(2, Cons(3, Cons(5, Cons(6, Cons(6, Cons(1, Cons(5, Cons(1, Cons(7, Cons(3, Cons(2, Cons(8, Cons(7, Cons(6, Cons(1, Cons(4, Cons(7, Cons(9, Cons(8, Cons(0, Cons(7, Cons(2, Cons(7, Cons(6, Cons(2, Cons(4, Cons(7, Cons(7, Cons(2, Cons(5, Cons(5, Cons(4, Cons(6, Cons(5, Cons(4, Cons(7, Cons(9, Cons(1, Cons(2, Cons(1, Cons(5, Cons(1, Cons(3, Cons(6, Cons(0, Cons(3, Cons(4, Cons(6, Cons(0, Cons(7, Cons(1, Cons(5, Cons(0, Cons(4, Cons(7, Cons(5, Cons(3, Cons(6, Cons(2, Cons(3, Cons(0, Cons(7, Cons(1, Cons(0, Cons(2, Cons(6, Cons(3, Cons(6, Cons(2, Cons(8, Cons(5, Cons(1, Cons(7, Cons(2, Cons(2, Cons(5, Cons(5, Cons(8, Cons(1, Cons(7, Cons(3, Cons(9, Cons(4, Cons(7, Cons(7, Cons(6, Cons(9, Cons(8, Cons(5, Cons(8, Cons(7, Cons(6, Cons(7, Cons(9, Cons(3, Cons(2, Cons(8, Cons(6, Cons(4, Cons(9, Cons(3, Cons(9, Cons(0, Cons(2, Cons(8, Cons(7, Cons(1, Cons(5, Cons(1, Cons(9, Cons(7, Cons(0, Cons(8, Cons(2, Cons(0, Cons(8, Cons(1, Cons(3, Cons(7, Cons(6, Cons(4, Cons(0, Cons(8, Cons(4, Cons(6, Cons(6, Cons(8, Cons(4, Cons(8, Cons(7, Cons(8, Cons(7, Cons(6, Cons(2, Cons(0, Cons(0, Cons(9, Cons(8, Cons(9, Cons(7, Cons(7, Cons(5, Cons(7, Cons(1, Cons(0, Cons(3, Cons(5, Cons(7, Cons(2, Cons(0, Cons(2, Cons(4, Cons(1, Cons(6, Cons(4, Cons(7, Cons(1, Cons(6, Cons(5, Cons(7, Cons(0, Cons(2, Cons(1, Cons(9, Cons(8, Cons(9, Cons(3, Cons(8, Cons(8, Cons(2, Cons(2, Cons(5, Cons(6, Cons(4, Cons(2, Cons(3, Cons(1, Cons(5, Cons(6, Cons(2, Cons(6, Cons(3, Cons(9, Cons(4, Cons(8, Cons(0, Cons(4, Cons(5, Cons(4, Cons(0, Cons(5, Cons(5, Cons(5, Cons(5, Cons(0, Cons(2, Cons(0, Cons(5, Cons(5, Cons(1, Cons(7, Cons(8, Cons(7, Cons(4, Cons(9, Cons(1, Cons(4, Cons(7, Cons(4, Cons(7, Cons(3, Cons(0, Cons(6, Cons(4, Cons(4, Cons(2, Cons(3, Cons(4, Cons(0, Cons(8, Cons(0, Cons(8, Cons(6, Cons(9, Cons(9, Cons(5, Cons(8, Cons(5, Cons(3, Cons(7, Cons(2, Cons(2, Cons(8, Cons(2, Cons(2, Cons(3, Cons(3, Cons(8, Cons(7, Cons(9, Cons(1, Cons(3, Cons(9, Cons(5, Cons(6, Cons(1, Cons(2, Cons(2, Cons(6, Cons(3, Cons(6, Cons(1, Cons(2, Cons(5, Cons(1, Cons(1, Cons(8, Cons(5, Cons(1, Cons(1, Cons(6, Cons(1, Cons(6, Cons(9, Cons(1, Cons(0, Cons(5, Cons(1, Cons(0, Cons(2, Cons(8, Cons(2, Cons(1, Cons(7, Cons(9, Cons(1, Cons(9, Cons(7, Cons(9, Cons(4, Cons(5, Cons(9, Cons(4, Cons(4, Cons(7, Cons(7, Cons(0, Cons(7, Cons(8, Cons(6, Cons(5, Cons(7, Cons(3, Cons(9, Cons(8, Cons(9, Cons(1, Cons(1, Cons(8, Cons(6, Cons(3, Cons(2, Cons(4, Cons(1, Cons(2, Cons(8, Cons(3, Cons(0, Cons(6, Cons(1, Cons(4, Cons(0, Cons(6, Cons(7, Cons(8, Cons(9, Cons(7, Cons(8, Cons(4, Cons(4, Cons(5, Cons(4, Cons(4, Cons(8, Cons(7, Cons(1, Cons(4, Cons(6, Cons(7, Cons(3, Cons(4, Cons(2, Cons(5, Cons(3, Cons(2, Cons(8, Cons(4, Cons(8, Cons(4, Cons(5, Cons(4, Cons(2, Cons(6, Cons(6, Cons(1, Cons(8, Cons(1, Cons(9, Cons(4, Cons(5, Cons(0, Cons(5, Cons(2, Cons(0, Cons(2, Cons(4, Cons(6, Cons(7, Cons(2, Cons(1, Cons(9, Cons(1, Cons(5, Cons(6, Cons(4, Cons(2, Cons(6, Cons(5, Cons(6, Cons(2, Cons(2, Cons(8, Cons(0, Cons(8, Cons(0, Cons(6, Cons(5, Cons(2, Cons(4, Cons(9, Cons(5, Cons(2, Cons(1, Cons(4, Cons(1, Cons(9, Cons(0, Cons(1, Cons(3, Cons(5, Cons(1, Cons(1, Cons(6, Cons(9, Cons(8, Cons(6, Cons(5, Cons(3, Cons(6, Cons(2, Cons(0, Cons(7, Cons(1, Cons(0, Cons(4, Cons(5, Cons(8, Cons(8, Cons(8, Cons(4, Cons(8, Cons(8, Cons(4, Cons(8, Cons(4, Cons(0, Cons(2, Cons(7, Cons(9, Cons(3, Cons(6, Cons(1, Cons(2, Cons(7, Cons(4, Cons(2, Cons(5, Cons(9, Cons(2, Cons(6, Cons(8, Cons(5, Cons(9, Cons(4, Cons(6, Cons(1, Cons(8, Cons(4, Cons(5, Cons(8, Cons(6, Cons(1, Cons(1, Cons(9, Cons(9, Cons(5, Cons(3, Cons(4, Cons(0, Cons(8, Cons(9, Cons(0, Cons(3, Cons(9, Cons(8, Cons(8, Cons(7, Cons(7, Cons(3, Cons(0, Cons(8, Cons(3, Cons(3, Cons(8, Cons(7, Cons(1, Cons(0, Cons(0, Cons(6, Cons(7, Cons(5, Cons(5, Cons(1, Cons(1, Cons(6, Cons(0, Cons(0, Cons(4, Cons(2, Cons(6, Cons(1, Cons(2, Cons(4, Cons(4, Cons(8, Cons(2, Cons(6, Cons(0, Cons(1, Cons(3, Cons(5, Cons(5, Cons(8, Cons(8, Cons(1, Cons(3, Cons(8, Cons(0, Cons(3, Cons(7, Cons(0, Cons(1, Cons(2, Cons(7, Cons(9, Cons(9, Cons(3, Cons(8, Cons(5, Cons(3, Cons(4, Cons(5, Cons(4, Cons(0, Cons(9, Cons(5, Cons(8, Cons(6, Cons(0, Cons(5, Cons(0, Cons(5, Cons(3, Cons(7, Cons(0, Cons(1, Cons(9, Cons(2, Cons(7, Cons(6, Cons(1, Cons(1, Cons(0, Cons(0, Cons(3, Cons(5, Cons(7, Cons(4, Cons(7, Cons(4, Cons(5, Cons(5, Cons(6, Cons(5, Cons(7, Cons(5, Cons(8, Cons(3, Cons(2, Cons(5, Cons(8, Cons(5, Cons(8, Cons(2, Cons(7, Cons(8, Cons(9, Cons(2, Cons(2, Cons(9, Cons(6, Cons(0, Cons(8, Cons(7, Cons(3, Cons(6, Cons(6, Cons(2, Cons(5, Cons(7, Cons(0, Cons(6, Cons(1, Cons(3, Cons(9, Cons(4, Cons(3, Cons(7, Cons(8, Cons(9, Cons(4, Cons(7, Cons(7, Cons(8, Cons(6, Cons(0, Cons(2, Cons(5, Cons(6, Cons(9, Cons(4, Cons(5, Cons(5, Cons(1, Cons(8, Cons(9, Cons(7, Cons(7, Cons(8, Cons(2, Cons(0, Cons(6, Cons(9, Cons(8, Cons(3, Cons(9, Cons(2, Cons(9, Cons(1, Cons(8, Cons(2, Cons(3, Cons(5, Cons(6, Cons(3, Cons(9, Cons(7, Cons(0, Cons(6, Cons(1, Cons(8, Cons(3, Cons(4, Cons(2, Cons(8, Cons(1, Cons(8, Cons(4, Cons(9, Cons(5, Cons(5, Cons(1, Cons(1, Cons(5, Cons(0, Cons(1, Cons(1, Cons(6, Cons(1, Cons(5, Cons(9, Cons(8, Cons(7, Cons(8, Cons(5, Cons(6, Cons(9, Cons(7, Cons(3, Cons(7, Cons(5, Cons(6, Cons(8, Cons(0, Cons(1, Cons(6, Cons(6, Cons(0, Cons(5, Cons(4, Cons(4, Cons(4, Cons(2, Cons(2, Cons(3, Cons(4, Cons(2, Cons(9, Cons(1, Cons(5, Cons(0, Cons(3, Cons(2, Cons(7, Cons(8, Cons(4, Cons(0, Cons(4, Cons(6, Cons(0, Cons(7, Cons(6, Cons(0, Cons(8, Cons(2, Cons(5, Cons(7, Cons(6, Cons(4, Cons(7, Cons(3, Cons(4, Cons(1, Cons(3, Cons(0, Cons(8, Cons(8, Cons(5, Cons(7, Cons(6, Cons(1, Cons(3, Cons(0, Cons(3, Cons(0, Cons(6, Cons(3, Cons(5, Cons(6, Cons(3, Nil()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
println("1200 " + sorttimerec(ls1200))
val ls1300: List = Cons(8, Cons(8, Cons(6, Cons(8, Cons(7, Cons(1, Cons(3, Cons(3, Cons(9, Cons(8, Cons(9, Cons(6, Cons(1, Cons(2, Cons(7, Cons(9, Cons(8, Cons(1, Cons(8, Cons(1, Cons(6, Cons(4, Cons(3, Cons(6, Cons(8, Cons(9, Cons(2, Cons(5, Cons(1, Cons(0, Cons(6, Cons(2, Cons(7, Cons(0, Cons(1, Cons(4, Cons(1, Cons(6, Cons(2, Cons(5, Cons(3, Cons(0, Cons(0, Cons(3, Cons(3, Cons(0, Cons(9, Cons(9, Cons(4, Cons(3, Cons(6, Cons(2, Cons(2, Cons(8, Cons(0, Cons(9, Cons(5, Cons(2, Cons(2, Cons(8, Cons(4, Cons(3, Cons(0, Cons(8, Cons(8, Cons(2, Cons(8, Cons(2, Cons(2, Cons(4, Cons(7, Cons(4, Cons(1, Cons(9, Cons(0, Cons(0, Cons(4, Cons(1, Cons(1, Cons(5, Cons(2, Cons(6, Cons(3, Cons(0, Cons(6, Cons(7, Cons(7, Cons(4, Cons(7, Cons(2, Cons(7, Cons(8, Cons(9, Cons(0, Cons(2, Cons(1, Cons(4, Cons(6, Cons(1, Cons(0, Cons(0, Cons(6, Cons(8, Cons(2, Cons(8, Cons(4, Cons(4, Cons(0, Cons(9, Cons(4, Cons(0, Cons(0, Cons(7, Cons(0, Cons(0, Cons(6, Cons(3, Cons(3, Cons(5, Cons(4, Cons(3, Cons(7, Cons(0, Cons(0, Cons(8, Cons(2, Cons(9, Cons(1, Cons(5, Cons(2, Cons(7, Cons(9, Cons(2, Cons(3, Cons(8, Cons(5, Cons(6, Cons(9, Cons(8, Cons(2, Cons(7, Cons(3, Cons(2, Cons(4, Cons(3, Cons(0, Cons(0, Cons(9, Cons(9, Cons(0, Cons(8, Cons(1, Cons(2, Cons(0, Cons(5, Cons(1, Cons(3, Cons(4, Cons(4, Cons(0, Cons(3, Cons(2, Cons(8, Cons(7, Cons(5, Cons(2, Cons(7, Cons(7, Cons(9, Cons(5, Cons(3, Cons(5, Cons(3, Cons(7, Cons(6, Cons(4, Cons(5, Cons(6, Cons(6, Cons(2, Cons(6, Cons(0, Cons(1, Cons(9, Cons(9, Cons(2, Cons(2, Cons(3, Cons(4, Cons(0, Cons(2, Cons(0, Cons(9, Cons(1, Cons(2, Cons(3, Cons(3, Cons(4, Cons(7, Cons(1, Cons(7, Cons(3, Cons(6, Cons(8, Cons(8, Cons(7, Cons(0, Cons(3, Cons(3, Cons(4, Cons(9, Cons(6, Cons(6, Cons(9, Cons(1, Cons(2, Cons(7, Cons(8, Cons(8, Cons(3, Cons(9, Cons(2, Cons(1, Cons(4, Cons(2, Cons(2, Cons(0, Cons(0, Cons(7, Cons(7, Cons(5, Cons(0, Cons(4, Cons(0, Cons(9, Cons(1, Cons(9, Cons(3, Cons(9, Cons(6, Cons(7, Cons(1, Cons(5, Cons(9, Cons(0, Cons(9, Cons(6, Cons(3, Cons(9, Cons(1, Cons(2, Cons(9, Cons(0, Cons(8, Cons(9, Cons(3, Cons(0, Cons(3, Cons(7, Cons(8, Cons(4, Cons(1, Cons(3, Cons(8, Cons(4, Cons(6, Cons(1, Cons(9, Cons(9, Cons(0, Cons(2, Cons(7, Cons(1, Cons(6, Cons(4, Cons(9, Cons(7, Cons(4, Cons(5, Cons(8, Cons(9, Cons(6, Cons(5, Cons(4, Cons(7, Cons(3, Cons(5, Cons(8, Cons(9, Cons(8, Cons(4, Cons(5, Cons(6, Cons(3, Cons(3, Cons(8, Cons(4, Cons(2, Cons(9, Cons(7, Cons(3, Cons(5, Cons(9, Cons(1, Cons(0, Cons(2, Cons(0, Cons(1, Cons(6, Cons(4, Cons(1, Cons(8, Cons(8, Cons(9, Cons(1, Cons(8, Cons(5, Cons(4, Cons(9, Cons(0, Cons(2, Cons(0, Cons(4, Cons(9, Cons(8, Cons(5, Cons(4, Cons(6, Cons(8, Cons(6, Cons(4, Cons(3, Cons(5, Cons(2, Cons(3, Cons(0, Cons(7, Cons(1, Cons(0, Cons(9, Cons(0, Cons(1, Cons(1, Cons(6, Cons(2, Cons(6, Cons(4, Cons(3, Cons(9, Cons(1, Cons(3, Cons(5, Cons(8, Cons(9, Cons(3, Cons(2, Cons(9, Cons(3, Cons(4, Cons(4, Cons(0, Cons(0, Cons(9, Cons(2, Cons(7, Cons(6, Cons(5, Cons(9, Cons(8, Cons(7, Cons(4, Cons(5, Cons(4, Cons(2, Cons(3, Cons(0, Cons(4, Cons(3, Cons(9, Cons(7, Cons(9, Cons(0, Cons(8, Cons(5, Cons(3, Cons(0, Cons(0, Cons(2, Cons(8, Cons(4, Cons(3, Cons(7, Cons(7, Cons(0, Cons(6, Cons(0, Cons(0, Cons(8, Cons(0, Cons(6, Cons(2, Cons(7, Cons(7, Cons(2, Cons(4, Cons(1, Cons(1, Cons(9, Cons(0, Cons(2, Cons(9, Cons(5, Cons(7, Cons(1, Cons(5, Cons(4, Cons(6, Cons(5, Cons(9, Cons(6, Cons(1, Cons(1, Cons(1, Cons(8, Cons(2, Cons(0, Cons(4, Cons(4, Cons(8, Cons(7, Cons(6, Cons(9, Cons(8, Cons(1, Cons(5, Cons(3, Cons(2, Cons(3, Cons(1, Cons(1, Cons(7, Cons(7, Cons(6, Cons(7, Cons(3, Cons(4, Cons(1, Cons(1, Cons(8, Cons(8, Cons(6, Cons(8, Cons(4, Cons(9, Cons(7, Cons(6, Cons(2, Cons(6, Cons(7, Cons(8, Cons(8, Cons(0, Cons(9, Cons(1, Cons(3, Cons(3, Cons(4, Cons(8, Cons(3, Cons(7, Cons(5, Cons(7, Cons(8, Cons(7, Cons(3, Cons(3, Cons(5, Cons(3, Cons(2, Cons(6, Cons(8, Cons(6, Cons(3, Cons(9, Cons(9, Cons(1, Cons(9, Cons(7, Cons(1, Cons(5, Cons(6, Cons(9, Cons(4, Cons(0, Cons(1, Cons(0, Cons(4, Cons(2, Cons(6, Cons(0, Cons(4, Cons(7, Cons(8, Cons(7, Cons(1, Cons(2, Cons(4, Cons(4, Cons(9, Cons(1, Cons(8, Cons(1, Cons(4, Cons(3, Cons(1, Cons(4, Cons(6, Cons(4, Cons(5, Cons(5, Cons(9, Cons(5, Cons(1, Cons(2, Cons(5, Cons(8, Cons(3, Cons(2, Cons(4, Cons(0, Cons(2, Cons(8, Cons(6, Cons(1, Cons(7, Cons(9, Cons(7, Cons(7, Cons(2, Cons(4, Cons(4, Cons(6, Cons(8, Cons(9, Cons(8, Cons(2, Cons(2, Cons(3, Cons(1, Cons(9, Cons(1, Cons(7, Cons(6, Cons(8, Cons(5, Cons(6, Cons(3, Cons(0, Cons(0, Cons(2, Cons(3, Cons(7, Cons(7, Cons(9, Cons(7, Cons(2, Cons(5, Cons(7, Cons(8, Cons(5, Cons(0, Cons(1, Cons(2, Cons(1, Cons(5, Cons(4, Cons(6, Cons(0, Cons(2, Cons(2, Cons(8, Cons(6, Cons(5, Cons(3, Cons(0, Cons(9, Cons(2, Cons(2, Cons(9, Cons(2, Cons(6, Cons(6, Cons(2, Cons(6, Cons(4, Cons(8, Cons(7, Cons(4, Cons(5, Cons(5, Cons(7, Cons(9, Cons(1, Cons(0, Cons(9, Cons(6, Cons(3, Cons(0, Cons(5, Cons(4, Cons(4, Cons(2, Cons(9, Cons(6, Cons(7, Cons(8, Cons(6, Cons(7, Cons(6, Cons(9, Cons(9, Cons(2, Cons(7, Cons(0, Cons(4, Cons(2, Cons(6, Cons(0, Cons(5, Cons(1, Cons(7, Cons(6, Cons(8, Cons(0, Cons(9, Cons(0, Cons(5, Cons(9, Cons(6, Cons(4, Cons(8, Cons(6, Cons(8, Cons(2, Cons(0, Cons(4, Cons(1, Cons(9, Cons(8, Cons(3, Cons(1, Cons(4, Cons(7, Cons(7, Cons(5, Cons(4, Cons(8, Cons(9, Cons(9, Cons(9, Cons(8, Cons(6, Cons(6, Cons(7, Cons(2, Cons(6, Cons(0, Cons(6, Cons(4, Cons(4, Cons(1, Cons(7, Cons(3, Cons(2, Cons(6, Cons(4, Cons(5, Cons(3, Cons(9, Cons(4, Cons(9, Cons(5, Cons(3, Cons(2, Cons(0, Cons(9, Cons(9, Cons(5, Cons(1, Cons(7, Cons(9, Cons(4, Cons(5, Cons(0, Cons(1, Cons(6, Cons(5, Cons(8, Cons(1, Cons(7, Cons(2, Cons(7, Cons(2, Cons(2, Cons(0, Cons(1, Cons(4, Cons(3, Cons(4, Cons(5, Cons(9, Cons(2, Cons(2, Cons(1, Cons(0, Cons(5, Cons(0, Cons(8, Cons(2, Cons(0, Cons(5, Cons(0, Cons(9, Cons(8, Cons(2, Cons(9, Cons(2, Cons(8, Cons(6, Cons(3, Cons(7, Cons(1, Cons(1, Cons(9, Cons(5, Cons(8, Cons(4, Cons(6, Cons(4, Cons(0, Cons(3, Cons(0, Cons(0, Cons(8, Cons(4, Cons(2, Cons(5, Cons(9, Cons(3, Cons(1, Cons(1, Cons(9, Cons(8, Cons(2, Cons(5, Cons(7, Cons(5, Cons(2, Cons(3, Cons(5, Cons(5, Cons(4, Cons(2, Cons(4, Cons(1, Cons(2, Cons(1, Cons(0, Cons(5, Cons(4, Cons(5, Cons(0, Cons(9, Cons(9, Cons(6, Cons(2, Cons(3, Cons(4, Cons(4, Cons(9, Cons(5, Cons(8, Cons(3, Cons(5, Cons(6, Cons(3, Cons(7, Cons(6, Cons(5, Cons(1, Cons(5, Cons(6, Cons(0, Cons(5, Cons(1, Cons(9, Cons(9, Cons(5, Cons(6, Cons(9, Cons(4, Cons(6, Cons(3, Cons(7, Cons(1, Cons(7, Cons(6, Cons(6, Cons(6, Cons(2, Cons(6, Cons(7, Cons(2, Cons(8, Cons(2, Cons(8, Cons(8, Cons(8, Cons(0, Cons(9, Cons(2, Cons(2, Cons(8, Cons(3, Cons(7, Cons(3, Cons(5, Cons(1, Cons(4, Cons(0, Cons(9, Cons(5, Cons(6, Cons(5, Cons(0, Cons(0, Cons(9, Cons(5, Cons(6, Cons(0, Cons(2, Cons(0, Cons(0, Cons(1, Cons(5, Cons(9, Cons(8, Cons(6, Cons(5, Cons(1, Cons(5, Cons(9, Cons(9, Cons(5, Cons(9, Cons(8, Cons(5, Cons(0, Cons(0, Cons(4, Cons(5, Cons(0, Cons(4, Cons(5, Cons(4, Cons(6, Cons(4, Cons(7, Cons(2, Cons(1, Cons(0, Cons(5, Cons(2, Cons(7, Cons(2, Cons(6, Cons(8, Cons(7, Cons(9, Cons(2, Cons(2, Cons(0, Cons(9, Cons(8, Cons(2, Cons(9, Cons(9, Cons(6, Cons(1, Cons(6, Cons(8, Cons(0, Cons(8, Cons(6, Cons(1, Cons(4, Cons(9, Cons(2, Cons(7, Cons(2, Cons(3, Cons(5, Cons(9, Cons(5, Cons(0, Cons(0, Cons(1, Cons(6, Cons(6, Cons(1, Cons(5, Cons(4, Cons(2, Cons(0, Cons(8, Cons(0, Cons(7, Cons(0, Cons(6, Cons(3, Cons(9, Cons(9, Cons(8, Cons(3, Cons(0, Cons(0, Cons(7, Cons(1, Cons(8, Cons(6, Cons(2, Cons(5, Cons(5, Cons(5, Cons(3, Cons(5, Cons(1, Cons(0, Cons(3, Cons(1, Cons(8, Cons(3, Cons(2, Cons(2, Cons(0, Cons(7, Cons(7, Cons(7, Cons(5, Cons(4, Cons(6, Cons(8, Cons(5, Cons(3, Cons(4, Cons(8, Cons(6, Cons(7, Cons(6, Cons(8, Cons(3, Cons(1, Cons(2, Cons(0, Cons(3, Cons(2, Cons(3, Cons(6, Cons(1, Cons(8, Cons(4, Cons(4, Cons(5, Cons(7, Cons(0, Cons(7, Cons(3, Cons(9, Cons(4, Cons(0, Cons(5, Cons(5, Cons(0, Cons(2, Cons(5, Cons(9, Cons(6, Cons(5, Cons(3, Cons(4, Cons(5, Cons(4, Cons(1, Cons(2, Cons(1, Cons(1, Cons(6, Cons(1, Cons(2, Cons(5, Cons(7, Cons(7, Cons(4, Cons(7, Cons(5, Cons(7, Cons(5, Cons(9, Cons(0, Cons(9, Cons(8, Cons(2, Cons(9, Cons(1, Cons(9, Cons(8, Cons(7, Cons(2, Cons(4, Cons(8, Cons(2, Cons(5, Cons(6, Cons(0, Cons(8, Cons(8, Cons(4, Cons(2, Cons(2, Cons(3, Cons(8, Cons(5, Cons(9, Cons(3, Cons(4, Cons(7, Cons(5, Cons(5, Cons(2, Cons(9, Cons(8, Cons(9, Cons(2, Cons(6, Cons(5, Cons(6, Cons(2, Cons(6, Cons(5, Cons(6, Cons(8, Cons(1, Cons(0, Cons(1, Cons(8, Cons(0, Cons(4, Cons(6, Cons(3, Cons(0, Cons(7, Cons(3, Cons(1, Cons(8, Cons(7, Cons(7, Cons(9, Cons(6, Cons(6, Cons(3, Cons(4, Cons(8, Cons(9, Cons(8, Cons(1, Cons(6, Cons(5, Cons(5, Cons(5, Cons(0, Cons(3, Cons(5, Cons(7, Cons(5, Cons(6, Cons(1, Cons(3, Cons(3, Cons(3, Cons(1, Cons(7, Cons(9, Cons(1, Cons(4, Cons(1, Cons(8, Cons(3, Cons(7, Cons(0, Cons(6, Cons(5, Cons(6, Cons(8, Cons(5, Cons(2, Cons(6, Cons(7, Cons(5, Cons(6, Cons(7, Cons(6, Cons(2, Cons(2, Cons(3, Cons(2, Cons(5, Cons(2, Cons(6, Cons(2, Cons(0, Cons(2, Cons(3, Cons(9, Cons(5, Cons(3, Cons(8, Cons(5, Cons(4, Cons(9, Cons(2, Cons(8, Cons(3, Cons(9, Cons(8, Cons(7, Cons(8, Cons(3, Cons(8, Cons(7, Cons(4, Cons(9, Cons(4, Cons(1, Cons(0, Cons(2, Cons(8, Cons(1, Cons(2, Cons(1, Cons(5, Cons(3, Cons(5, Cons(0, Cons(9, Cons(6, Cons(3, Cons(2, Cons(6, Cons(7, Cons(4, Cons(1, Cons(4, Cons(4, Cons(6, Cons(1, Cons(2, Cons(0, Cons(8, Cons(3, Cons(8, Cons(7, Cons(3, Cons(9, Cons(9, Cons(2, Cons(5, Cons(8, Cons(3, Cons(0, Cons(5, Cons(4, Cons(5, Cons(0, Cons(8, Cons(6, Cons(5, Cons(2, Cons(9, Cons(7, Cons(1, Cons(2, Cons(0, Cons(5, Cons(2, Cons(1, Cons(7, Cons(4, Cons(4, Cons(1, Cons(5, Cons(2, Cons(4, Cons(1, Cons(9, Cons(5, Cons(1, Cons(0, Cons(1, Cons(7, Cons(9, Cons(9, Cons(8, Cons(5, Cons(1, Cons(0, Cons(6, Cons(2, Cons(2, Cons(5, Cons(0, Cons(3, Cons(1, Cons(9, Cons(5, Cons(3, Cons(6, Cons(6, Cons(0, Cons(7, Cons(6, Cons(0, Cons(7, Cons(3, Cons(5, Cons(4, Cons(7, Cons(5, Cons(0, Cons(6, Cons(6, Cons(3, Cons(7, Cons(9, Cons(7, Cons(5, Cons(4, Cons(9, Cons(7, Cons(6, Cons(2, Cons(4, Cons(5, Cons(0, Cons(0, Cons(4, Cons(4, Cons(6, Cons(9, Cons(1, Cons(9, Cons(5, Cons(7, Cons(8, Cons(7, Cons(9, Cons(9, Cons(4, Cons(3, Cons(1, Cons(7, Cons(0, Cons(9, Cons(4, Cons(7, Cons(5, Cons(5, Cons(3, Cons(2, Cons(2, Cons(4, Cons(5, Cons(8, Cons(5, Cons(6, Cons(3, Cons(6, Cons(1, Cons(9, Cons(9, Cons(5, Cons(4, Cons(9, Cons(7, Cons(3, Cons(8, Cons(6, Cons(0, Cons(8, Cons(3, Cons(1, Nil
println("1300 " + sorttimerec(ls1300))
val ls1400: List = Cons(4, Cons(5, Cons(2, Cons(2, Cons(9, Cons(5, Cons(5, Cons(6, Cons(9, Cons(5, Cons(5, Cons(2, Cons(3, Cons(9, Cons(5, Cons(3, Cons(7, Cons(7, Cons(0, Cons(3, Cons(0, Cons(5, Cons(7, Cons(8, Cons(8, Cons(1, Cons(0, Cons(1, Cons(7, Cons(4, Cons(8, Cons(0, Cons(1, Cons(8, Cons(4, Cons(1, Cons(2, Cons(0, Cons(5, Cons(5, Cons(1, Cons(7, Cons(4, Cons(7, Cons(8, Cons(5, Cons(6, Cons(3, Cons(3, Cons(5, Cons(3, Cons(9, Cons(7, Cons(5, Cons(6, Cons(4, Cons(9, Cons(9, Cons(6, Cons(4, Cons(8, Cons(2, Cons(5, Cons(5, Cons(3, Cons(9, Cons(6, Cons(2, Cons(3, Cons(3, Cons(0, Cons(8, Cons(7, Cons(0, Cons(8, Cons(9, Cons(2, Cons(2, Cons(6, Cons(8, Cons(6, Cons(8, Cons(2, Cons(4, Cons(7, Cons(1, Cons(2, Cons(1, Cons(9, Cons(9, Cons(7, Cons(6, Cons(0, Cons(1, Cons(8, Cons(3, Cons(9, Cons(3, Cons(9, Cons(7, Cons(7, Cons(3, Cons(3, Cons(0, Cons(2, Cons(6, Cons(8, Cons(3, Cons(9, Cons(1, Cons(5, Cons(9, Cons(3, Cons(9, Cons(5, Cons(9, Cons(5, Cons(6, Cons(6, Cons(0, Cons(0, Cons(2, Cons(3, Cons(9, Cons(6, Cons(6, Cons(2, Cons(2, Cons(3, Cons(1, Cons(8, Cons(2, Cons(6, Cons(8, Cons(1, Cons(9, Cons(1, Cons(9, Cons(8, Cons(9, Cons(1, Cons(8, Cons(8, Cons(2, Cons(6, Cons(3, Cons(3, Cons(1, Cons(8, Cons(6, Cons(3, Cons(9, Cons(7, Cons(0, Cons(8, Cons(8, Cons(3, Cons(7, Cons(8, Cons(7, Cons(0, Cons(7, Cons(0, Cons(8, Cons(7, Cons(2, Cons(9, Cons(6, Cons(4, Cons(1, Cons(1, Cons(3, Cons(5, Cons(7, Cons(3, Cons(6, Cons(7, Cons(3, Cons(5, Cons(4, Cons(7, Cons(4, Cons(7, Cons(4, Cons(4, Cons(0, Cons(2, Cons(3, Cons(2, Cons(3, Cons(2, Cons(1, Cons(1, Cons(7, Cons(2, Cons(9, Cons(8, Cons(7, Cons(1, Cons(7, Cons(5, Cons(5, Cons(1, Cons(9, Cons(3, Cons(5, Cons(0, Cons(0, Cons(6, Cons(0, Cons(3, Cons(6, Cons(1, Cons(9, Cons(7, Cons(1, Cons(4, Cons(9, Cons(4, Cons(5, Cons(6, Cons(7, Cons(2, Cons(8, Cons(9, Cons(3, Cons(3, Cons(9, Cons(0, Cons(2, Cons(1, Cons(5, Cons(5, Cons(3, Cons(0, Cons(0, Cons(3, Cons(0, Cons(8, Cons(2, Cons(6, Cons(4, Cons(2, Cons(7, Cons(9, Cons(8, Cons(3, Cons(4, Cons(3, Cons(0, Cons(8, Cons(1, Cons(3, Cons(9, Cons(6, Cons(0, Cons(7, Cons(7, Cons(3, Cons(8, Cons(6, Cons(3, Cons(7, Cons(1, Cons(0, Cons(9, Cons(8, Cons(0, Cons(1, Cons(4, Cons(7, Cons(6, Cons(2, Cons(7, Cons(6, Cons(9, Cons(8, Cons(6, Cons(0, Cons(7, Cons(3, Cons(2, Cons(5, Cons(5, Cons(9, Cons(8, Cons(8, Cons(3, Cons(7, Cons(7, Cons(7, Cons(3, Cons(5, Cons(6, Cons(4, Cons(6, Cons(9, Cons(8, Cons(1, Cons(8, Cons(2, Cons(1, Cons(0, Cons(4, Cons(3, Cons(5, Cons(5, Cons(5, Cons(6, Cons(2, Cons(1, Cons(0, Cons(8, Cons(0, Cons(8, Cons(0, Cons(0, Cons(8, Cons(1, Cons(8, Cons(8, Cons(5, Cons(0, Cons(2, Cons(3, Cons(7, Cons(5, Cons(7, Cons(1, Cons(6, Cons(5, Cons(9, Cons(9, Cons(8, Cons(0, Cons(8, Cons(1, Cons(4, Cons(7, Cons(5, Cons(2, Cons(9, Cons(6, Cons(1, Cons(6, Cons(5, Cons(3, Cons(3, Cons(5, Cons(7, Cons(2, Cons(0, Cons(6, Cons(2, Cons(0, Cons(4, Cons(8, Cons(3, Cons(2, Cons(6, Cons(4, Cons(4, Cons(9, Cons(9, Cons(3, Cons(2, Cons(8, Cons(0, Cons(6, Cons(6, Cons(4, Cons(8, Cons(7, Cons(7, Cons(1, Cons(1, Cons(6, Cons(2, Cons(3, Cons(7, Cons(4, Cons(5, Cons(5, Cons(4, Cons(6, Cons(5, Cons(3, Cons(1, Cons(7, Cons(4, Cons(2, Cons(6, Cons(2, Cons(6, Cons(3, Cons(7, Cons(2, Cons(0, Cons(9, Cons(8, Cons(6, Cons(3, Cons(0, Cons(2, Cons(0, Cons(0, Cons(0, Cons(7, Cons(8, Cons(4, Cons(8, Cons(2, Cons(7, Cons(8, Cons(2, Cons(7, Cons(0, Cons(9, Cons(5, Cons(3, Cons(4, Cons(1, Cons(7, Cons(8, Cons(8, Cons(0, Cons(6, Cons(2, Cons(1, Cons(9, Cons(5, Cons(5, Cons(2, Cons(0, Cons(5, Cons(5, Cons(4, Cons(0, Cons(0, Cons(8, Cons(4, Cons(3, Cons(6, Cons(1, Cons(8, Cons(3, Cons(3, Cons(8, Cons(9, Cons(9, Cons(5, Cons(0, Cons(4, Cons(3, Cons(5, Cons(2, Cons(8, Cons(6, Cons(4, Cons(7, Cons(3, Cons(5, Cons(5, Cons(1, Cons(7, Cons(5, Cons(4, Cons(7, Cons(0, Cons(4, Cons(8, Cons(1, Cons(1, Cons(1, Cons(7, Cons(3, Cons(5, Cons(3, Cons(5, Cons(6, Cons(4, Cons(3, Cons(2, Cons(5, Cons(0, Cons(6, Cons(3, Cons(4, Cons(8, Cons(6, Cons(9, Cons(4, Cons(2, Cons(1, Cons(4, Cons(4, Cons(7, Cons(7, Cons(7, Cons(1, Cons(2, Cons(5, Cons(9, Cons(8, Cons(2, Cons(9, Cons(1, Cons(9, Cons(7, Cons(8, Cons(0, Cons(5, Cons(0, Cons(0, Cons(9, Cons(8, Cons(5, Cons(9, Cons(0, Cons(8, Cons(2, Cons(9, Cons(3, Cons(5, Cons(6, Cons(9, Cons(0, Cons(0, Cons(1, Cons(6, Cons(5, Cons(1, Cons(1, Cons(9, Cons(7, Cons(1, Cons(1, Cons(1, Cons(2, Cons(1, Cons(9, Cons(9, Cons(0, Cons(6, Cons(3, Cons(1, Cons(5, Cons(4, Cons(0, Cons(4, Cons(7, Cons(6, Cons(8, Cons(5, Cons(3, Cons(9, Cons(1, Cons(8, Cons(6, Cons(4, Cons(2, Cons(8, Cons(6, Cons(2, Cons(3, Cons(8, Cons(4, Cons(0, Cons(2, Cons(4, Cons(5, Cons(6, Cons(0, Cons(6, Cons(9, Cons(2, Cons(7, Cons(9, Cons(3, Cons(0, Cons(8, Cons(8, Cons(9, Cons(5, Cons(6, Cons(3, Cons(3, Cons(4, Cons(1, Cons(0, Cons(2, Cons(8, Cons(7, Cons(2, Cons(5, Cons(5, Cons(2, Cons(9, Cons(8, Cons(2, Cons(9, Cons(4, Cons(2, Cons(7, Cons(0, Cons(2, Cons(7, Cons(3, Cons(3, Cons(7, Cons(6, Cons(7, Cons(0, Cons(2, Cons(7, Cons(6, Cons(0, Cons(1, Cons(6, Cons(8, Cons(9, Cons(8, Cons(0, Cons(2, Cons(1, Cons(2, Cons(9, Cons(8, Cons(5, Cons(3, Cons(9, Cons(6, Cons(9, Cons(1, Cons(8, Cons(0, Cons(2, Cons(9, Cons(5, Cons(5, Cons(2, Cons(0, Cons(7, Cons(4, Cons(3, Cons(2, Cons(5, Cons(8, Cons(4, Cons(2, Cons(5, Cons(1, Cons(1, Cons(7, Cons(4, Cons(3, Cons(3, Cons(2, Cons(4, Cons(5, Cons(6, Cons(7, Cons(5, Cons(3, Cons(8, Cons(2, Cons(2, Cons(7, Cons(4, Cons(5, Cons(6, Cons(0, Cons(7, Cons(2, Cons(4, Cons(7, Cons(5, Cons(3, Cons(5, Cons(2, Cons(0, Cons(2, Cons(7, Cons(4, Cons(6, Cons(9, Cons(5, Cons(7, Cons(1, Cons(3, Cons(3, Cons(0, Cons(1, Cons(8, Cons(7, Cons(9, Cons(5, Cons(4, Cons(3, Cons(8, Cons(6, Cons(8, Cons(2, Cons(2, Cons(8, Cons(5, Cons(6, Cons(0, Cons(9, Cons(6, Cons(1, Cons(9, Cons(4, Cons(9, Cons(7, Cons(1, Cons(7, Cons(5, Cons(1, Cons(7, Cons(6, Cons(2, Cons(2, Cons(6, Cons(2, Cons(4, Cons(2, Cons(5, Cons(2, Cons(9, Cons(1, Cons(8, Cons(7, Cons(3, Cons(8, Cons(8, Cons(9, Cons(6, Cons(9, Cons(7, Cons(9, Cons(3, Cons(5, Cons(4, Cons(4, Cons(9, Cons(5, Cons(9, Cons(8, Cons(4, Cons(6, Cons(0, Cons(1, Cons(8, Cons(3, Cons(0, Cons(6, Cons(4, Cons(0, Cons(3, Cons(1, Cons(4, Cons(2, Cons(3, Cons(4, Cons(5, Cons(3, Cons(2, Cons(4, Cons(7, Cons(4, Cons(1, Cons(5, Cons(3, Cons(3, Cons(3, Cons(3, Cons(4, Cons(3, Cons(0, Cons(8, Cons(7, Cons(2, Cons(4, Cons(1, Cons(1, Cons(9, Cons(5, Cons(9, Cons(9, Cons(4, Cons(6, Cons(8, Cons(6, Cons(4, Cons(4, Cons(6, Cons(3, Cons(3, Cons(8, Cons(1, Cons(8, Cons(3, Cons(9, Cons(0, Cons(3, Cons(8, Cons(4, Cons(8, Cons(2, Cons(4, Cons(8, Cons(4, Cons(1, Cons(6, Cons(8, Cons(5, Cons(6, Cons(5, Cons(9, Cons(4, Cons(5, Cons(6, Cons(0, Cons(6, Cons(6, Cons(9, Cons(5, Cons(9, Cons(5, Cons(7, Cons(8, Cons(5, Cons(2, Cons(0, Cons(7, Cons(3, Cons(6, Cons(7, Cons(9, Cons(9, Cons(6, Cons(6, Cons(2, Cons(0, Cons(3, Cons(6, Cons(6, Cons(1, Cons(2, Cons(6, Cons(1, Cons(0, Cons(7, Cons(8, Cons(1, Cons(1, Cons(0, Cons(4, Cons(7, Cons(5, Cons(9, Cons(6, Cons(3, Cons(5, Cons(0, Cons(1, Cons(3, Cons(0, Cons(6, Cons(1, Cons(9, Cons(4, Cons(7, Cons(8, Cons(6, Cons(0, Cons(4, Cons(9, Cons(1, Cons(9, Cons(0, Cons(6, Cons(8, Cons(9, Cons(4, Cons(8, Cons(1, Cons(8, Cons(6, Cons(3, Cons(2, Cons(9, Cons(2, Cons(0, Cons(7, Cons(0, Cons(5, Cons(4, Cons(3, Cons(2, Cons(5, Cons(5, Cons(3, Cons(4, Cons(6, Cons(7, Cons(9, Cons(0, Cons(4, Cons(9, Cons(3, Cons(1, Cons(3, Cons(9, Cons(0, Cons(7, Cons(4, Cons(8, Cons(4, Cons(0, Cons(9, Cons(6, Cons(3, Cons(2, Cons(2, Cons(4, Cons(2, Cons(8, Cons(2, Cons(3, Cons(3, Cons(6, Cons(1, Cons(2, Cons(5, Cons(2, Cons(0, Cons(5, Cons(2, Cons(7, Cons(6, Cons(1, Cons(7, Cons(9, Cons(7, Cons(2, Cons(1, Cons(1, Cons(7, Cons(4, Cons(5, Cons(0, Cons(0, Cons(6, Cons(5, Cons(0, Cons(4, Cons(4, Cons(7, Cons(8, Cons(6, Cons(1, Cons(6, Cons(5, Cons(3, Cons(5, Cons(6, Cons(5, Cons(4, Cons(5, Cons(4, Cons(4, Cons(5, Cons(6, Cons(4, Cons(2, Cons(1, Cons(2, Cons(7, Cons(6, Cons(7, Cons(4, Cons(2, Cons(1, Cons(2, Cons(3, Cons(4, Cons(4, Cons(9, Cons(6, Cons(7, Cons(6, Cons(1, Cons(5, Cons(1, Cons(5, Cons(8, Cons(2, Cons(2, Cons(6, Cons(5, Cons(5, Cons(6, Cons(5, Cons(3, Cons(6, Cons(3, Cons(0, Cons(0, Cons(0, Cons(5, Cons(6, Cons(8, Cons(7, Cons(1, Cons(0, Cons(9, Cons(7, Cons(7, Cons(7, Cons(1, Cons(6, Cons(4, Cons(6, Cons(2, Cons(9, Cons(3, Cons(3, Cons(0, Cons(7, Cons(5, Cons(2, Cons(9, Cons(5, Cons(8, Cons(7, Cons(9, Cons(1, Cons(4, Cons(1, Cons(8, Cons(3, Cons(8, Cons(8, Cons(1, Cons(8, Cons(4, Cons(5, Cons(0, Cons(7, Cons(6, Cons(8, Cons(1, Cons(9, Cons(8, Cons(1, Cons(9, Cons(2, Cons(4, Cons(2, Cons(1, Cons(2, Cons(5, Cons(6, Cons(8, Cons(7, Cons(9, Cons(4, Cons(0, Cons(8, Cons(6, Cons(1, Cons(2, Cons(7, Cons(2, Cons(4, Cons(6, Cons(6, Cons(4, Cons(0, Cons(3, Cons(8, Cons(3, Cons(3, Cons(3, Cons(7, Cons(5, Cons(8, Cons(4, Cons(7, Cons(3, Cons(7, Cons(8, Cons(2, Cons(4, Cons(5, Cons(2, Cons(1, Cons(0, Cons(7, Cons(9, Cons(1, Cons(6, Cons(8, Cons(8, Cons(3, Cons(7, Cons(4, Cons(3, Cons(7, Cons(7, Cons(7, Cons(1, Cons(7, Cons(0, Cons(3, Cons(2, Cons(7, Cons(7, Cons(1, Cons(6, Cons(6, Cons(8, Cons(9, Cons(8, Cons(7, Cons(8, Cons(2, Cons(6, Cons(5, Cons(5, Cons(6, Cons(1, Cons(9, Cons(8, Cons(6, Cons(9, Cons(5, Cons(6, Cons(4, Cons(5, Cons(6, Cons(7, Cons(2, Cons(0, Cons(2, Cons(7, Cons(3, Cons(7, Cons(0, Cons(3, Cons(0, Cons(3, Cons(3, Cons(5, Cons(6, Cons(5, Cons(3, Cons(1, Cons(5, Cons(6, Cons(5, Cons(4, Cons(2, Cons(8, Cons(1, Cons(2, Cons(2, Cons(3, Cons(4, Cons(9, Cons(3, Cons(2, Cons(1, Cons(6, Cons(0, Cons(0, Cons(0, Cons(0, Cons(9, Cons(8, Cons(9, Cons(0, Cons(7, Cons(0, Cons(3, Cons(2, Cons(2, Cons(8, Cons(1, Cons(1, Cons(6, Cons(0, Cons(3, Cons(2, Cons(5, Cons(6, Cons(5, Cons(8, Cons(3, Cons(8, Cons(1, Cons(6, Cons(3, Cons(9, Cons(8, Cons(8, Cons(6, Cons(7, Cons(8, Cons(5, Cons(9, Cons(0, Cons(7, Cons(3, Cons(9, Cons(6, Cons(8, Cons(8, Cons(5, Cons(1, Cons(6, Cons(2, Cons(6, Cons(7, Cons(4, Cons(5, Cons(0, Cons(0, Cons(2, Cons(9, Cons(1, Cons(2, Cons(1, Cons(8, Cons(3, Cons(9, Cons(0, Cons(3, Cons(2, Cons(0, Cons(0, Cons(4, Cons(8, Cons(1, Cons(3, Cons(0, Cons(6, Cons(2, Cons(5, Cons(9, Cons(7, Cons(0, Cons(2, Cons(0, Cons(2, Cons(4, Cons(5, Cons(4, Cons(1, Cons(5, Cons(1, Cons(0, Cons(4, Cons(0, Cons(7, Cons(3, Cons(1, Cons(9, Cons(5, Cons(0, Cons(0, Cons(2, Cons(0, Cons(0, Cons(3, Cons(7, Cons(9, Cons(6, Cons(9, Cons(5, Cons(2, Cons(8, Cons(8, Cons(4, Cons(2, Cons(1, Cons(9, Cons(0, Cons(9, Cons(9, Cons(5, Cons(1, Cons(8, Cons(3, Cons(9, Cons(4, Cons(4, Cons(0, Cons(7, Cons(2, Cons(6, Cons(2, Cons(7, Cons(3, Cons(5, Cons(7, Cons(2, Cons(7, Cons(7, Cons(4, Cons(7, Cons(7, Cons(4, Cons(8, Cons(1, Cons(4, Cons(3, Cons(9, Cons(8, Cons(4, Cons(2, Cons(9, Cons(1, Cons(9, Cons(0, Cons(5, Cons(0, Cons(8, Cons(4, Cons(9, Cons(0, Cons(8, Cons(9, Cons(2, Cons(9, Cons(5, Cons(8, Cons(0, Cons(1, Cons(8, Cons(5, Cons(4, Cons(4, Cons(8, Cons(7, Cons(4, Cons(2, Cons(9, Cons(0, Cons(6, Cons(9, Cons(9, Cons(6, Cons(3, Cons(3, Cons(7, Cons(2, Cons(3, Cons(1, Cons(4, Cons(2, Cons(1, Cons(2, Cons(2, Cons(7, Cons(4, Cons(9, Cons(4, Cons(3, Cons(9, Cons(2, Cons(7, Cons(0, Cons(0, Cons(5, Cons(5, Cons(3, Cons(0, Cons(3, Cons(1, Cons(2, Cons(3, Cons(0, Cons(6, Cons(1, Cons(2, Cons(8, Cons(7, Cons(2, Cons(0, Cons(2, Cons(2, Cons(0, Cons(4, Cons(4, Cons(7, Cons(0, Cons(8, Nil
println("1400 " + sorttimerec(ls1400))
val ls1500: List = Cons(2, Cons(9, Cons(8, Cons(6, Cons(2, Cons(7, Cons(2, Cons(1, Cons(7, Cons(5, Cons(3, Cons(3, Cons(4, Cons(9, Cons(5, Cons(7, Cons(7, Cons(6, Cons(9, Cons(4, Cons(6, Cons(8, Cons(9, Cons(8, Cons(2, Cons(1, Cons(5, Cons(6, Cons(5, Cons(7, Cons(2, Cons(5, Cons(0, Cons(6, Cons(7, Cons(2, Cons(2, Cons(5, Cons(8, Cons(1, Cons(7, Cons(2, Cons(0, Cons(6, Cons(8, Cons(2, Cons(6, Cons(0, Cons(2, Cons(5, Cons(4, Cons(4, Cons(8, Cons(0, Cons(1, Cons(7, Cons(4, Cons(5, Cons(4, Cons(2, Cons(8, Cons(6, Cons(4, Cons(2, Cons(5, Cons(6, Cons(7, Cons(9, Cons(4, Cons(4, Cons(4, Cons(3, Cons(8, Cons(8, Cons(7, Cons(5, Cons(2, Cons(7, Cons(9, Cons(4, Cons(1, Cons(5, Cons(9, Cons(0, Cons(5, Cons(1, Cons(3, Cons(9, Cons(2, Cons(5, Cons(8, Cons(3, Cons(7, Cons(4, Cons(1, Cons(5, Cons(9, Cons(0, Cons(2, Cons(5, Cons(9, Cons(6, Cons(5, Cons(7, Cons(2, Cons(6, Cons(1, Cons(3, Cons(2, Cons(4, Cons(9, Cons(8, Cons(3, Cons(7, Cons(1, Cons(2, Cons(3, Cons(9, Cons(5, Cons(0, Cons(0, Cons(0, Cons(8, Cons(2, Cons(7, Cons(7, Cons(1, Cons(0, Cons(1, Cons(3, Cons(9, Cons(0, Cons(2, Cons(0, Cons(3, Cons(7, Cons(5, Cons(4, Cons(4, Cons(8, Cons(4, Cons(8, Cons(4, Cons(3, Cons(9, Cons(7, Cons(4, Cons(9, Cons(5, Cons(9, Cons(1, Cons(0, Cons(1, Cons(4, Cons(7, Cons(1, Cons(3, Cons(7, Cons(6, Cons(1, Cons(0, Cons(4, Cons(5, Cons(6, Cons(1, Cons(3, Cons(2, Cons(7, Cons(2, Cons(3, Cons(2, Cons(5, Cons(4, Cons(3, Cons(8, Cons(6, Cons(9, Cons(5, Cons(8, Cons(5, Cons(6, Cons(1, Cons(8, Cons(0, Cons(8, Cons(8, Cons(3, Cons(8, Cons(9, Cons(7, Cons(9, Cons(8, Cons(6, Cons(5, Cons(0, Cons(7, Cons(7, Cons(4, Cons(3, Cons(6, Cons(5, Cons(1, Cons(2, Cons(7, Cons(5, Cons(9, Cons(2, Cons(0, Cons(2, Cons(7, Cons(9, Cons(8, Cons(2, Cons(3, Cons(4, Cons(2, Cons(2, Cons(3, Cons(7, Cons(4, Cons(9, Cons(2, Cons(4, Cons(2, Cons(4, Cons(5, Cons(1, Cons(0, Cons(7, Cons(3, Cons(3, Cons(7, Cons(2, Cons(1, Cons(5, Cons(7, Cons(1, Cons(3, Cons(4, Cons(6, Cons(5, Cons(0, Cons(6, Cons(4, Cons(1, Cons(7, Cons(8, Cons(1, Cons(5, Cons(8, Cons(6, Cons(5, Cons(5, Cons(9, Cons(5, Cons(4, Cons(0, Cons(8, Cons(2, Cons(3, Cons(4, Cons(0, Cons(9, Cons(8, Cons(3, Cons(4, Cons(6, Cons(3, Cons(5, Cons(5, Cons(9, Cons(6, Cons(6, Cons(8, Cons(9, Cons(3, Cons(3, Cons(6, Cons(5, Cons(1, Cons(8, Cons(8, Cons(2, Cons(4, Cons(4, Cons(8, Cons(1, Cons(6, Cons(0, Cons(7, Cons(3, Cons(2, Cons(7, Cons(3, Cons(3, Cons(4, Cons(0, Cons(2, Cons(9, Cons(6, Cons(7, Cons(5, Cons(9, Cons(6, Cons(5, Cons(7, Cons(8, Cons(3, Cons(3, Cons(3, Cons(5, Cons(3, Cons(6, Cons(6, Cons(8, Cons(0, Cons(5, Cons(2, Cons(0, Cons(4, Cons(8, Cons(8, Cons(0, Cons(2, Cons(9, Cons(1, Cons(9, Cons(9, Cons(5, Cons(4, Cons(3, Cons(3, Cons(9, Cons(3, Cons(1, Cons(2, Cons(8, Cons(4, Cons(7, Cons(4, Cons(8, Cons(4, Cons(8, Cons(3, Cons(1, Cons(6, Cons(4, Cons(7, Cons(4, Cons(9, Cons(0, Cons(6, Cons(5, Cons(5, Cons(5, Cons(3, Cons(2, Cons(8, Cons(6, Cons(7, Cons(3, Cons(1, Cons(6, Cons(3, Cons(8, Cons(9, Cons(4, Cons(9, Cons(9, Cons(0, Cons(5, Cons(5, Cons(5, Cons(6, Cons(0, Cons(7, Cons(6, Cons(3, Cons(6, Cons(2, Cons(6, Cons(5, Cons(4, Cons(6, Cons(9, Cons(1, Cons(8, Cons(8, Cons(1, Cons(6, Cons(5, Cons(2, Cons(8, Cons(9, Cons(3, Cons(7, Cons(8, Cons(3, Cons(2, Cons(4, Cons(8, Cons(8, Cons(9, Cons(9, Cons(1, Cons(9, Cons(6, Cons(3, Cons(4, Cons(9, Cons(8, Cons(9, Cons(3, Cons(6, Cons(6, Cons(2, Cons(5, Cons(1, Cons(3, Cons(3, Cons(3, Cons(3, Cons(3, Cons(3, Cons(5, Cons(3, Cons(5, Cons(4, Cons(3, Cons(9, Cons(2, Cons(1, Cons(9, Cons(5, Cons(0, Cons(9, Cons(0, Cons(4, Cons(8, Cons(5, Cons(5, Cons(5, Cons(6, Cons(9, Cons(4, Cons(2, Cons(3, Cons(5, Cons(7, Cons(3, Cons(1, Cons(4, Cons(5, Cons(6, Cons(6, Cons(5, Cons(9, Cons(9, Cons(2, Cons(6, Cons(2, Cons(1, Cons(7, Cons(0, Cons(8, Cons(8, Cons(5, Cons(5, Cons(4, Cons(7, Cons(9, Cons(4, Cons(0, Cons(7, Cons(3, Cons(4, Cons(8, Cons(3, Cons(3, Cons(2, Cons(7, Cons(2, Cons(1, Cons(8, Cons(0, Cons(8, Cons(9, Cons(0, Cons(5, Cons(2, Cons(6, Cons(9, Cons(0, Cons(5, Cons(5, Cons(4, Cons(0, Cons(1, Cons(8, Cons(8, Cons(1, Cons(6, Cons(5, Cons(9, Cons(9, Cons(8, Cons(3, Cons(3, Cons(9, Cons(0, Cons(8, Cons(5, Cons(8, Cons(9, Cons(0, Cons(5, Cons(9, Cons(6, Cons(3, Cons(8, Cons(4, Cons(4, Cons(5, Cons(2, Cons(3, Cons(3, Cons(9, Cons(7, Cons(0, Cons(8, Cons(9, Cons(6, Cons(1, Cons(1, Cons(8, Cons(9, Cons(1, Cons(3, Cons(1, Cons(6, Cons(6, Cons(8, Cons(2, Cons(4, Cons(7, Cons(7, Cons(2, Cons(8, Cons(9, Cons(2, Cons(6, Cons(5, Cons(9, Cons(4, Cons(9, Cons(5, Cons(8, Cons(3, Cons(2, Cons(0, Cons(9, Cons(4, Cons(0, Cons(3, Cons(1, Cons(8, Cons(8, Cons(7, Cons(2, Cons(2, Cons(3, Cons(4, Cons(4, Cons(0, Cons(2, Cons(6, Cons(8, Cons(6, Cons(5, Cons(2, Cons(1, Cons(2, Cons(7, Cons(4, Cons(7, Cons(4, Cons(7, Cons(6, Cons(9, Cons(6, Cons(8, Cons(3, Cons(0, Cons(4, Cons(7, Cons(5, Cons(8, Cons(7, Cons(8, Cons(4, Cons(5, Cons(8, Cons(2, Cons(8, Cons(9, Cons(8, Cons(3, Cons(2, Cons(5, Cons(0, Cons(5, Cons(5, Cons(1, Cons(3, Cons(5, Cons(8, Cons(9, Cons(3, Cons(5, Cons(3, Cons(3, Cons(9, Cons(1, Cons(4, Cons(3, Cons(2, Cons(9, Cons(8, Cons(6, Cons(5, Cons(7, Cons(8, Cons(4, Cons(4, Cons(1, Cons(2, Cons(9, Cons(0, Cons(0, Cons(3, Cons(5, Cons(9, Cons(0, Cons(2, Cons(7, Cons(5, Cons(7, Cons(3, Cons(4, Cons(0, Cons(8, Cons(9, Cons(0, Cons(0, Cons(8, Cons(1, Cons(5, Cons(7, Cons(4, Cons(0, Cons(1, Cons(3, Cons(5, Cons(1, Cons(7, Cons(7, Cons(8, Cons(6, Cons(9, Cons(0, Cons(8, Cons(2, Cons(8, Cons(4, Cons(7, Cons(7, Cons(2, Cons(4, Cons(9, Cons(0, Cons(4, Cons(4, Cons(4, Cons(2, Cons(1, Cons(3, Cons(4, Cons(6, Cons(7, Cons(3, Cons(9, Cons(5, Cons(0, Cons(4, Cons(6, Cons(9, Cons(0, Cons(5, Cons(1, Cons(9, Cons(1, Cons(0, Cons(6, Cons(9, Cons(5, Cons(9, Cons(7, Cons(1, Cons(3, Cons(5, Cons(9, Cons(6, Cons(6, Cons(1, Cons(4, Cons(8, Cons(9, Cons(6, Cons(0, Cons(4, Cons(3, Cons(5, Cons(1, Cons(7, Cons(1, Cons(2, Cons(4, Cons(3, Cons(9, Cons(5, Cons(6, Cons(2, Cons(3, Cons(2, Cons(4, Cons(8, Cons(6, Cons(6, Cons(1, Cons(8, Cons(4, Cons(1, Cons(5, Cons(8, Cons(7, Cons(3, Cons(8, Cons(8, Cons(1, Cons(2, Cons(6, Cons(1, Cons(0, Cons(1, Cons(6, Cons(1, Cons(5, Cons(7, Cons(7, Cons(3, Cons(3, Cons(5, Cons(6, Cons(9, Cons(0, Cons(6, Cons(0, Cons(0, Cons(6, Cons(7, Cons(7, Cons(7, Cons(9, Cons(6, Cons(1, Cons(5, Cons(2, Cons(0, Cons(2, Cons(4, Cons(9, Cons(3, Cons(6, Cons(1, Cons(0, Cons(1, Cons(0, Cons(2, Cons(5, Cons(9, Cons(9, Cons(9, Cons(4, Cons(4, Cons(8, Cons(8, Cons(7, Cons(3, Cons(4, Cons(5, Cons(3, Cons(3, Cons(9, Cons(9, Cons(5, Cons(6, Cons(3, Cons(4, Cons(3, Cons(1, Cons(5, Cons(9, Cons(8, Cons(1, Cons(8, Cons(5, Cons(3, Cons(1, Cons(2, Cons(9, Cons(0, Cons(9, Cons(3, Cons(7, Cons(8, Cons(3, Cons(4, Cons(9, Cons(2, Cons(7, Cons(7, Cons(0, Cons(8, Cons(7, Cons(3, Cons(5, Cons(1, Cons(2, Cons(9, Cons(8, Cons(2, Cons(3, Cons(9, Cons(1, Cons(6, Cons(0, Cons(7, Cons(3, Cons(5, Cons(6, Cons(6, Cons(9, Cons(3, Cons(5, Cons(1, Cons(6, Cons(3, Cons(5, Cons(6, Cons(1, Cons(3, Cons(1, Cons(7, Cons(6, Cons(3, Cons(1, Cons(7, Cons(4, Cons(8, Cons(3, Cons(2, Cons(1, Cons(6, Cons(3, Cons(2, Cons(4, Cons(6, Cons(6, Cons(3, Cons(5, Cons(2, Cons(1, Cons(2, Cons(1, Cons(4, Cons(2, Cons(5, Cons(1, Cons(5, Cons(3, Cons(3, Cons(1, Cons(9, Cons(8, Cons(1, Cons(3, Cons(5, Cons(2, Cons(8, Cons(9, Cons(7, Cons(2, Cons(1, Cons(6, Cons(5, Cons(7, Cons(2, Cons(4, Cons(6, Cons(8, Cons(4, Cons(4, Cons(3, Cons(0, Cons(3, Cons(7, Cons(7, Cons(6, Cons(6, Cons(0, Cons(8, Cons(5, Cons(9, Cons(6, Cons(0, Cons(6, Cons(6, Cons(1, Cons(8, Cons(3, Cons(6, Cons(7, Cons(5, Cons(8, Cons(1, Cons(1, Cons(5, Cons(0, Cons(5, Cons(8, Cons(3, Cons(9, Cons(2, Cons(6, Cons(8, Cons(1, Cons(4, Cons(8, Cons(0, Cons(0, Cons(5, Cons(1, Cons(1, Cons(6, Cons(7, Cons(3, Cons(6, Cons(3, Cons(6, Cons(3, Cons(3, Cons(4, Cons(4, Cons(5, Cons(3, Cons(0, Cons(7, Cons(8, Cons(5, Cons(7, Cons(5, Cons(3, Cons(7, Cons(8, Cons(2, Cons(3, Cons(1, Cons(2, Cons(7, Cons(1, Cons(2, Cons(6, Cons(1, Cons(9, Cons(5, Cons(7, Cons(6, Cons(5, Cons(5, Cons(0, Cons(2, Cons(5, Cons(9, Cons(5, Cons(2, Cons(7, Cons(3, Cons(0, Cons(5, Cons(3, Cons(6, Cons(9, Cons(5, Cons(0, Cons(7, Cons(8, Cons(2, Cons(2, Cons(6, Cons(5, Cons(1, Cons(4, Cons(2, Cons(6, Cons(3, Cons(3, Cons(5, Cons(5, Cons(1, Cons(2, Cons(6, Cons(3, Cons(9, Cons(2, Cons(6, Cons(1, Cons(2, Cons(9, Cons(9, Cons(0, Cons(2, Cons(2, Cons(0, Cons(5, Cons(5, Cons(8, Cons(4, Cons(0, Cons(3, Cons(8, Cons(7, Cons(2, Cons(8, Cons(2, Cons(8, Cons(8, Cons(6, Cons(8, Cons(4, Cons(6, Cons(5, Cons(2, Cons(8, Cons(6, Cons(2, Cons(0, Cons(4, Cons(1, Cons(9, Cons(7, Cons(3, Cons(8, Cons(1, Cons(4, Cons(8, Cons(3, Cons(7, Cons(5, Cons(1, Cons(8, Cons(9, Cons(5, Cons(3, Cons(1, Cons(0, Cons(6, Cons(4, Cons(3, Cons(5, Cons(2, Cons(8, Cons(1, Cons(2, Cons(6, Cons(2, Cons(9, Cons(1, Cons(5, Cons(7, Cons(8, Cons(4, Cons(4, Cons(1, Cons(9, Cons(8, Cons(8, Cons(5, Cons(5, Cons(1, Cons(5, Cons(0, Cons(3, Cons(1, Cons(9, Cons(0, Cons(3, Cons(5, Cons(5, Cons(4, Cons(2, Cons(0, Cons(0, Cons(5, Cons(9, Cons(0, Cons(6, Cons(2, Cons(9, Cons(1, Cons(3, Cons(4, Cons(8, Cons(8, Cons(3, Cons(9, Cons(2, Cons(2, Cons(1, Cons(1, Cons(6, Cons(4, Cons(0, Cons(1, Cons(1, Cons(2, Cons(6, Cons(5, Cons(9, Cons(7, Cons(2, Cons(8, Cons(8, Cons(2, Cons(7, Cons(4, Cons(4, Cons(1, Cons(2, Cons(8, Cons(5, Cons(3, Cons(4, Cons(8, Cons(2, Cons(4, Cons(4, Cons(3, Cons(9, Cons(0, Cons(0, Cons(8, Cons(2, Cons(0, Cons(8, Cons(7, Cons(1, Cons(3, Cons(6, Cons(1, Cons(2, Cons(2, Cons(0, Cons(7, Cons(7, Cons(8, Cons(9, Cons(2, Cons(2, Cons(9, Cons(6, Cons(9, Cons(6, Cons(4, Cons(4, Cons(1, Cons(4, Cons(1, Cons(9, Cons(0, Cons(1, Cons(8, Cons(6, Cons(1, Cons(1, Cons(7, Cons(9, Cons(3, Cons(5, Cons(2, Cons(3, Cons(4, Cons(2, Cons(9, Cons(9, Cons(2, Cons(5, Cons(7, Cons(8, Cons(2, Cons(2, Cons(2, Cons(6, Cons(8, Cons(3, Cons(0, Cons(1, Cons(6, Cons(1, Cons(2, Cons(7, Cons(6, Cons(3, Cons(5, Cons(6, Cons(1, Cons(7, Cons(5, Cons(2, Cons(4, Cons(2, Cons(5, Cons(4, Cons(7, Cons(8, Cons(5, Cons(9, Cons(6, Cons(8, Cons(8, Cons(1, Cons(0, Cons(5, Cons(8, Cons(8, Cons(6, Cons(2, Cons(9, Cons(9, Cons(7, Cons(5, Cons(1, Cons(4, Cons(9, Cons(1, Cons(3, Cons(6, Cons(3, Cons(3, Cons(8, Cons(1, Cons(8, Cons(6, Cons(2, Cons(6, Cons(9, Cons(1, Cons(9, Cons(0, Cons(7, Cons(2, Cons(4, Cons(4, Cons(6, Cons(1, Cons(9, Cons(3, Cons(9, Cons(4, Cons(7, Cons(1, Cons(9, Cons(1, Cons(7, Cons(0, Cons(2, Cons(2, Cons(4, Cons(0, Cons(3, Cons(2, Cons(8, Cons(9, Cons(2, Cons(3, Cons(3, Cons(5, Cons(0, Cons(8, Cons(8, Cons(0, Cons(3, Cons(4, Cons(3, Cons(0, Cons(5, Cons(3, Cons(4, Cons(4, Cons(0, Cons(2, Cons(4, Cons(5, Cons(1, Cons(5, Cons(8, Cons(0, Cons(0, Cons(3, Cons(1, Cons(6, Cons(3, Cons(3, Cons(6, Cons(5, Cons(4, Cons(3, Cons(4, Cons(6, Cons(1, Cons(9, Cons(0, Cons(1, Cons(5, Cons(9, Cons(0, Cons(6, Cons(7, Cons(2, Cons(2, Cons(7, Cons(9, Cons(3, Cons(5, Cons(3, Cons(9, Cons(7, Cons(4, Cons(5, Cons(9, Cons(9, Cons(3, Cons(8, Cons(1, Cons(5, Cons(8, Cons(5, Cons(3, Cons(6, Cons(6, Cons(5, Cons(1, Cons(9, Cons(3, Cons(9, Cons(2, Cons(5, Cons(6, Cons(3, Cons(1, Cons(5, Cons(7, Cons(5, Cons(0, Cons(5, Cons(0, Cons(8, Cons(5, Cons(1, Cons(6, Cons(1, Cons(3, Cons(6, Cons(3, Cons(9, Cons(5, Cons(0, Cons(4, Cons(5, Cons(0, Cons(5, Cons(8, Cons(7, Cons(3, Cons(1, Cons(9, Cons(4, Cons(9, Cons(3, Cons(6, Cons(2, Cons(2, Cons(9, Cons(5, Cons(3, Cons(8, Cons(4, Cons(3, Cons(6, Cons(4, Cons(1, Cons(9, Cons(0, Cons(5, Cons(1, Cons(0, Cons(5, Cons(3, Cons(4, Cons(2, Cons(4, Cons(2, Cons(2, Cons(5, Cons(8, Cons(3, Cons(8, Cons(6, Cons(8, Cons(6, Cons(5, Cons(5, Cons(0, Cons(5, Cons(7, Cons(7, Cons(4, Cons(9, Cons(0, Cons(2, Cons(5, Cons(2, Cons(9, Cons(5, Cons(1, Cons(4, Cons(4, Cons(7, Cons(9, Cons(6, Cons(9, Cons(7, Cons(7, Cons(9, Cons(5, Cons(5, Cons(8, Cons(3, Cons(9, Cons(4, Cons(0, Cons(9, Cons(4, Cons(5, Cons(6, Cons(7, Cons(1, Cons(6, Cons(6, Cons(3, Cons(9, Cons(0, Cons(4, Cons(4, Cons(4, Cons(0, Cons(3, Cons(3, Cons(1, Cons(3, Cons(7, Cons(0, Cons(3, Cons(0, Cons(7, Cons(2, Cons(5, Cons(0, Cons(5, Cons(5, Cons(7, Cons(4, Cons(0, Cons(8, Cons(8, Cons(7, Cons(6, Cons(7, Cons(4, Cons(6, Cons(7, Nil
println("1500 " + sorttimerec(ls1500))
val ls1600: List = Cons(1, Cons(4, Cons(1, Cons(4, Cons(6, Cons(7, Cons(5, Cons(7, Cons(0, Cons(3, Cons(6, Cons(3, Cons(1, Cons(2, Cons(2, Cons(0, Cons(2, Cons(4, Cons(6, Cons(2, Cons(2, Cons(9, Cons(5, Cons(9, Cons(6, Cons(0, Cons(5, Cons(3, Cons(1, Cons(5, Cons(4, Cons(5, Cons(9, Cons(1, Cons(0, Cons(5, Cons(4, Cons(2, Cons(2, Cons(3, Cons(3, Cons(4, Cons(5, Cons(2, Cons(3, Cons(4, Cons(2, Cons(9, Cons(5, Cons(0, Cons(8, Cons(7, Cons(7, Cons(6, Cons(7, Cons(3, Cons(8, Cons(6, Cons(7, Cons(2, Cons(8, Cons(5, Cons(6, Cons(6, Cons(3, Cons(2, Cons(2, Cons(9, Cons(2, Cons(3, Cons(3, Cons(2, Cons(5, Cons(3, Cons(1, Cons(3, Cons(0, Cons(2, Cons(8, Cons(8, Cons(2, Cons(1, Cons(4, Cons(7, Cons(1, Cons(0, Cons(9, Cons(6, Cons(7, Cons(9, Cons(9, Cons(9, Cons(8, Cons(1, Cons(9, Cons(8, Cons(2, Cons(2, Cons(4, Cons(1, Cons(4, Cons(9, Cons(7, Cons(6, Cons(2, Cons(7, Cons(1, Cons(8, Cons(6, Cons(2, Cons(1, Cons(2, Cons(4, Cons(0, Cons(1, Cons(3, Cons(0, Cons(6, Cons(9, Cons(4, Cons(3, Cons(3, Cons(5, Cons(0, Cons(4, Cons(2, Cons(9, Cons(3, Cons(5, Cons(9, Cons(2, Cons(1, Cons(4, Cons(2, Cons(6, Cons(9, Cons(5, Cons(1, Cons(7, Cons(3, Cons(7, Cons(0, Cons(7, Cons(0, Cons(4, Cons(1, Cons(7, Cons(8, Cons(8, Cons(4, Cons(2, Cons(8, Cons(8, Cons(7, Cons(0, Cons(1, Cons(8, Cons(3, Cons(6, Cons(3, Cons(3, Cons(1, Cons(3, Cons(6, Cons(9, Cons(9, Cons(7, Cons(9, Cons(3, Cons(2, Cons(0, Cons(8, Cons(3, Cons(7, Cons(1, Cons(9, Cons(3, Cons(8, Cons(9, Cons(0, Cons(7, Cons(1, Cons(1, Cons(8, Cons(1, Cons(2, Cons(8, Cons(4, Cons(0, Cons(6, Cons(4, Cons(2, Cons(4, Cons(1, Cons(4, Cons(0, Cons(7, Cons(8, Cons(3, Cons(9, Cons(6, Cons(9, Cons(7, Cons(4, Cons(3, Cons(8, Cons(2, Cons(8, Cons(7, Cons(2, Cons(0, Cons(1, Cons(5, Cons(3, Cons(9, Cons(7, Cons(4, Cons(6, Cons(0, Cons(1, Cons(9, Cons(1, Cons(4, Cons(1, Cons(0, Cons(9, Cons(7, Cons(3, Cons(4, Cons(8, Cons(5, Cons(6, Cons(1, Cons(1, Cons(1, Cons(8, Cons(3, Cons(4, Cons(7, Cons(7, Cons(6, Cons(4, Cons(3, Cons(1, Cons(7, Cons(5, Cons(2, Cons(4, Cons(6, Cons(7, Cons(9, Cons(0, Cons(9, Cons(0, Cons(6, Cons(0, Cons(4, Cons(6, Cons(4, Cons(3, Cons(1, Cons(9, Cons(3, Cons(7, Cons(4, Cons(8, Cons(3, Cons(1, Cons(1, Cons(5, Cons(4, Cons(4, Cons(0, Cons(5, Cons(7, Cons(6, Cons(7, Cons(4, Cons(5, Cons(0, Cons(7, Cons(2, Cons(9, Cons(8, Cons(4, Cons(7, Cons(7, Cons(8, Cons(6, Cons(1, Cons(2, Cons(1, Cons(9, Cons(9, Cons(4, Cons(7, Cons(8, Cons(7, Cons(5, Cons(4, Cons(6, Cons(3, Cons(0, Cons(6, Cons(7, Cons(9, Cons(0, Cons(4, Cons(3, Cons(4, Cons(1, Cons(7, Cons(7, Cons(3, Cons(7, Cons(1, Cons(7, Cons(7, Cons(5, Cons(1, Cons(6, Cons(2, Cons(9, Cons(7, Cons(0, Cons(2, Cons(9, Cons(4, Cons(4, Cons(0, Cons(1, Cons(9, Cons(1, Cons(7, Cons(0, Cons(5, Cons(3, Cons(9, Cons(7, Cons(2, Cons(8, Cons(5, Cons(8, Cons(6, Cons(2, Cons(5, Cons(0, Cons(2, Cons(6, Cons(2, Cons(1, Cons(5, Cons(5, Cons(6, Cons(2, Cons(5, Cons(3, Cons(8, Cons(2, Cons(1, Cons(8, Cons(5, Cons(0, Cons(3, Cons(9, Cons(4, Cons(0, Cons(0, Cons(6, Cons(9, Cons(1, Cons(8, Cons(3, Cons(3, Cons(9, Cons(5, Cons(7, Cons(2, Cons(0, Cons(4, Cons(3, Cons(8, Cons(1, Cons(5, Cons(4, Cons(4, Cons(0, Cons(8, Cons(9, Cons(8, Cons(8, Cons(1, Cons(7, Cons(6, Cons(1, Cons(4, Cons(4, Cons(3, Cons(1, Cons(8, Cons(2, Cons(1, Cons(0, Cons(8, Cons(0, Cons(1, Cons(0, Cons(7, Cons(9, Cons(4, Cons(9, Cons(7, Cons(5, Cons(6, Cons(6, Cons(7, Cons(0, Cons(0, Cons(5, Cons(9, Cons(0, Cons(2, Cons(5, Cons(9, Cons(4, Cons(3, Cons(3, Cons(7, Cons(6, Cons(5, Cons(3, Cons(7, Cons(4, Cons(3, Cons(0, Cons(9, Cons(1, Cons(9, Cons(3, Cons(3, Cons(9, Cons(6, Cons(8, Cons(3, Cons(9, Cons(8, Cons(5, Cons(4, Cons(0, Cons(6, Cons(1, Cons(2, Cons(5, Cons(4, Cons(0, Cons(7, Cons(7, Cons(5, Cons(2, Cons(6, Cons(4, Cons(7, Cons(7, Cons(0, Cons(2, Cons(3, Cons(9, Cons(6, Cons(0, Cons(7, Cons(9, Cons(7, Cons(3, Cons(4, Cons(7, Cons(3, Cons(3, Cons(1, Cons(2, Cons(2, Cons(8, Cons(7, Cons(3, Cons(2, Cons(6, Cons(2, Cons(5, Cons(7, Cons(4, Cons(1, Cons(3, Cons(8, Cons(4, Cons(1, Cons(2, Cons(5, Cons(3, Cons(3, Cons(4, Cons(7, Cons(8, Cons(7, Cons(5, Cons(4, Cons(9, Cons(3, Cons(1, Cons(1, Cons(2, Cons(7, Cons(2, Cons(4, Cons(0, Cons(5, Cons(5, Cons(9, Cons(9, Cons(1, Cons(2, Cons(1, Cons(5, Cons(2, Cons(3, Cons(1, Cons(3, Cons(9, Cons(8, Cons(0, Cons(0, Cons(5, Cons(6, Cons(5, Cons(4, Cons(7, Cons(8, Cons(0, Cons(8, Cons(1, Cons(4, Cons(1, Cons(2, Cons(7, Cons(4, Cons(8, Cons(1, Cons(8, Cons(8, Cons(7, Cons(7, Cons(2, Cons(1, Cons(7, Cons(6, Cons(7, Cons(3, Cons(6, Cons(6, Cons(3, Cons(4, Cons(7, Cons(0, Cons(8, Cons(5, Cons(8, Cons(6, Cons(8, Cons(6, Cons(9, Cons(0, Cons(8, Cons(9, Cons(7, Cons(2, Cons(9, Cons(9, Cons(4, Cons(4, Cons(4, Cons(0, Cons(1, Cons(7, Cons(4, Cons(2, Cons(0, Cons(4, Cons(5, Cons(9, Cons(6, Cons(3, Cons(8, Cons(3, Cons(7, Cons(1, Cons(4, Cons(0, Cons(2, Cons(4, Cons(9, Cons(9, Cons(1, Cons(3, Cons(6, Cons(0, Cons(5, Cons(4, Cons(7, Cons(4, Cons(5, Cons(4, Cons(8, Cons(8, Cons(4, Cons(6, Cons(8, Cons(5, Cons(1, Cons(9, Cons(2, Cons(2, Cons(0, Cons(2, Cons(3, Cons(9, Cons(9, Cons(7, Cons(9, Cons(4, Cons(2, Cons(7, Cons(8, Cons(9, Cons(7, Cons(2, Cons(3, Cons(5, Cons(7, Cons(9, Cons(3, Cons(0, Cons(6, Cons(1, Cons(6, Cons(2, Cons(0, Cons(8, Cons(1, Cons(5, Cons(8, Cons(8, Cons(2, Cons(2, Cons(2, Cons(9, Cons(4, Cons(7, Cons(8, Cons(0, Cons(5, Cons(6, Cons(5, Cons(9, Cons(7, Cons(5, Cons(8, Cons(5, Cons(7, Cons(5, Cons(3, Cons(5, Cons(5, Cons(5, Cons(6, Cons(5, Cons(1, Cons(3, Cons(2, Cons(5, Cons(3, Cons(5, Cons(3, Cons(0, Cons(3, Cons(2, Cons(4, Cons(9, Cons(8, Cons(1, Cons(1, Cons(0, Cons(1, Cons(1, Cons(8, Cons(4, Cons(2, Cons(2, Cons(5, Cons(9, Cons(7, Cons(7, Cons(2, Cons(3, Cons(4, Cons(0, Cons(2, Cons(2, Cons(3, Cons(6, Cons(5, Cons(3, Cons(3, Cons(9, Cons(2, Cons(6, Cons(0, Cons(7, Cons(9, Cons(9, Cons(6, Cons(2, Cons(5, Cons(2, Cons(9, Cons(0, Cons(7, Cons(7, Cons(6, Cons(5, Cons(6, Cons(0, Cons(6, Cons(6, Cons(4, Cons(4, Cons(8, Cons(9, Cons(3, Cons(1, Cons(5, Cons(3, Cons(9, Cons(5, Cons(3, Cons(4, Cons(4, Cons(3, Cons(7, Cons(0, Cons(9, Cons(0, Cons(4, Cons(5, Cons(6, Cons(0, Cons(9, Cons(2, Cons(5, Cons(8, Cons(0, Cons(1, Cons(8, Cons(4, Cons(8, Cons(1, Cons(0, Cons(9, Cons(7, Cons(0, Cons(9, Cons(8, Cons(9, Cons(7, Cons(6, Cons(3, Cons(4, Cons(5, Cons(7, Cons(4, Cons(2, Cons(5, Cons(0, Cons(5, Cons(4, Cons(5, Cons(7, Cons(4, Cons(4, Cons(0, Cons(4, Cons(0, Cons(6, Cons(9, Cons(0, Cons(5, Cons(6, Cons(8, Cons(4, Cons(8, Cons(0, Cons(1, Cons(1, Cons(9, Cons(3, Cons(6, Cons(6, Cons(9, Cons(3, Cons(7, Cons(4, Cons(4, Cons(9, Cons(6, Cons(8, Cons(8, Cons(4, Cons(9, Cons(0, Cons(5, Cons(6, Cons(7, Cons(5, Cons(0, Cons(8, Cons(2, Cons(5, Cons(0, Cons(9, Cons(9, Cons(0, Cons(1, Cons(4, Cons(0, Cons(6, Cons(7, Cons(5, Cons(5, Cons(4, Cons(5, Cons(8, Cons(9, Cons(9, Cons(4, Cons(7, Cons(6, Cons(1, Cons(9, Cons(6, Cons(9, Cons(4, Cons(0, Cons(4, Cons(3, Cons(4, Cons(8, Cons(2, Cons(0, Cons(9, Cons(3, Cons(1, Cons(8, Cons(0, Cons(8, Cons(8, Cons(2, Cons(2, Cons(5, Cons(1, Cons(1, Cons(3, Cons(1, Cons(5, Cons(2, Cons(7, Cons(4, Cons(9, Cons(5, Cons(1, Cons(4, Cons(1, Cons(8, Cons(6, Cons(2, Cons(2, Cons(1, Cons(7, Cons(8, Cons(3, Cons(7, Cons(1, Cons(3, Cons(5, Cons(5, Cons(5, Cons(1, Cons(2, Cons(7, Cons(5, Cons(7, Cons(4, Cons(7, Cons(0, Cons(7, Cons(7, Cons(3, Cons(6, Cons(9, Cons(7, Cons(7, Cons(8, Cons(0, Cons(3, Cons(1, Cons(2, Cons(2, Cons(2, Cons(1, Cons(8, Cons(2, Cons(5, Cons(2, Cons(0, Cons(3, Cons(2, Cons(5, Cons(7, Cons(4, Cons(3, Cons(9, Cons(7, Cons(6, Cons(3, Cons(3, Cons(7, Cons(7, Cons(2, Cons(3, Cons(7, Cons(3, Cons(1, Cons(9, Cons(2, Cons(1, Cons(1, Cons(2, Cons(4, Cons(9, Cons(2, Cons(8, Cons(4, Cons(0, Cons(2, Cons(8, Cons(8, Cons(9, Cons(5, Cons(2, Cons(6, Cons(0, Cons(8, Cons(6, Cons(8, Cons(1, Cons(4, Cons(7, Cons(9, Cons(2, Cons(7, Cons(1, Cons(2, Cons(6, Cons(9, Cons(1, Cons(2, Cons(9, Cons(2, Cons(0, Cons(4, Cons(4, Cons(5, Cons(9, Cons(2, Cons(6, Cons(0, Cons(1, Cons(3, Cons(1, Cons(4, Cons(4, Cons(0, Cons(5, Cons(7, Cons(5, Cons(2, Cons(2, Cons(3, Cons(7, Cons(0, Cons(5, Cons(8, Cons(7, Cons(3, Cons(6, Cons(3, Cons(7, Cons(6, Cons(4, Cons(7, Cons(2, Cons(7, Cons(4, Cons(4, Cons(4, Cons(3, Cons(2, Cons(3, Cons(6, Cons(5, Cons(0, Cons(7, Cons(5, Cons(4, Cons(4, Cons(0, Cons(3, Cons(0, Cons(6, Cons(5, Cons(8, Cons(8, Cons(7, Cons(0, Cons(6, Cons(9, Cons(0, Cons(1, Cons(0, Cons(3, Cons(1, Cons(3, Cons(1, Cons(5, Cons(4, Cons(3, Cons(5, Cons(7, Cons(5, Cons(3, Cons(1, Cons(5, Cons(3, Cons(8, Cons(4, Cons(0, Cons(1, Cons(7, Cons(8, Cons(0, Cons(2, Cons(9, Cons(2, Cons(4, Cons(0, Cons(0, Cons(3, Cons(2, Cons(0, Cons(4, Cons(6, Cons(7, Cons(8, Cons(2, Cons(5, Cons(0, Cons(5, Cons(4, Cons(6, Cons(0, Cons(6, Cons(8, Cons(9, Cons(4, Cons(6, Cons(6, Cons(2, Cons(8, Cons(7, Cons(0, Cons(0, Cons(5, Cons(7, Cons(1, Cons(4, Cons(6, Cons(1, Cons(2, Cons(3, Cons(1, Cons(6, Cons(5, Cons(1, Cons(8, Cons(2, Cons(1, Cons(2, Cons(1, Cons(8, Cons(5, Cons(4, Cons(5, Cons(6, Cons(9, Cons(4, Cons(7, Cons(5, Cons(0, Cons(5, Cons(4, Cons(1, Cons(4, Cons(2, Cons(1, Cons(7, Cons(9, Cons(4, Cons(2, Cons(3, Cons(8, Cons(7, Cons(4, Cons(5, Cons(5, Cons(2, Cons(2, Cons(4, Cons(2, Cons(1, Cons(1, Cons(0, Cons(8, Cons(7, Cons(4, Cons(8, Cons(8, Cons(7, Cons(8, Cons(8, Cons(6, Cons(7, Cons(5, Cons(1, Cons(9, Cons(5, Cons(8, Cons(9, Cons(3, Cons(3, Cons(8, Cons(1, Cons(6, Cons(0, Cons(6, Cons(2, Cons(4, Cons(2, Cons(5, Cons(0, Cons(1, Cons(0, Cons(1, Cons(1, Cons(5, Cons(5, Cons(8, Cons(0, Cons(4, Cons(0, Cons(8, Cons(8, Cons(5, Cons(6, Cons(7, Cons(9, Cons(7, Cons(1, Cons(7, Cons(1, Cons(2, Cons(2, Cons(8, Cons(3, Cons(0, Cons(5, Cons(7, Cons(2, Cons(9, Cons(0, Cons(4, Cons(0, Cons(1, Cons(5, Cons(5, Cons(7, Cons(3, Cons(9, Cons(7, Cons(7, Cons(7, Cons(2, Cons(2, Cons(0, Cons(0, Cons(5, Cons(1, Cons(5, Cons(1, Cons(1, Cons(0, Cons(0, Cons(9, Cons(2, Cons(8, Cons(0, Cons(2, Cons(3, Cons(2, Cons(0, Cons(6, Cons(0, Cons(6, Cons(0, Cons(6, Cons(0, Cons(1, Cons(4, Cons(1, Cons(7, Cons(6, Cons(4, Cons(0, Cons(5, Cons(0, Cons(7, Cons(8, Cons(5, Cons(8, Cons(5, Cons(6, Cons(8, Cons(4, Cons(5, Cons(4, Cons(9, Cons(6, Cons(7, Cons(1, Cons(9, Cons(0, Cons(1, Cons(8, Cons(8, Cons(9, Cons(9, Cons(0, Cons(2, Cons(0, Cons(9, Cons(7, Cons(1, Cons(8, Cons(5, Cons(7, Cons(8, Cons(9, Cons(9, Cons(2, Cons(6, Cons(4, Cons(2, Cons(6, Cons(3, Cons(0, Cons(6, Cons(2, Cons(8, Cons(8, Cons(9, Cons(6, Cons(9, Cons(7, Cons(0, Cons(8, Cons(9, Cons(5, Cons(5, Cons(7, Cons(7, Cons(9, Cons(6, Cons(9, Cons(5, Cons(9, Cons(0, Cons(4, Cons(5, Cons(7, Cons(8, Cons(1, Cons(9, Cons(6, Cons(7, Cons(0, Cons(4, Cons(7, Cons(4, Cons(7, Cons(1, Cons(4, Cons(9, Cons(6, Cons(0, Cons(0, Cons(7, Cons(3, Cons(8, Cons(9, Cons(2, Cons(5, Cons(9, Cons(8, Cons(9, Cons(2, Cons(2, Cons(9, Cons(4, Cons(0, Cons(2, Cons(8, Cons(2, Cons(4, Cons(2, Cons(8, Cons(2, Cons(9, Cons(5, Cons(2, Cons(6, Cons(2, Cons(9, Cons(0, Cons(6, Cons(9, Cons(6, Cons(7, Cons(8, Cons(4, Cons(1, Cons(1, Cons(1, Cons(7, Cons(9, Cons(0, Cons(7, Cons(1, Cons(9, Cons(4, Cons(7, Cons(9, Cons(8, Cons(5, Cons(2, Cons(8, Cons(1, Cons(9, Cons(1, Cons(2, Cons(0, Cons(9, Cons(5, Cons(7, Cons(1, Cons(4, Cons(3, Cons(6, Cons(3, Cons(3, Cons(8, Cons(9, Cons(9, Cons(7, Cons(4, Cons(1, Cons(7, Cons(8, Cons(6, Cons(8, Cons(4, Cons(2, Cons(6, Cons(2, Cons(9, Cons(1, Cons(6, Cons(8, Cons(9, Cons(8, Cons(8, Cons(8, Cons(8, Cons(7, Cons(8, Cons(8, Cons(6, Cons(4, Cons(5, Cons(2, Cons(0, Cons(9, Cons(4, Cons(5, Cons(5, Cons(4, Cons(9, Cons(5, Cons(0, Cons(7, Cons(0, Cons(1, Cons(9, Cons(6, Cons(5, Cons(6, Cons(0, Cons(8, Cons(0, Cons(0, Cons(2, Cons(1, Cons(1, Cons(0, Cons(6, Cons(4, Cons(2, Cons(3, Cons(2, Cons(9, Cons(5, Cons(5, Cons(6, Cons(7, Cons(1, Cons(1, Cons(4, Cons(5, Cons(3, Cons(8, Cons(0, Cons(0, Cons(5, Cons(0, Cons(6, Cons(7, Cons(6, Cons(2, Cons(9, Cons(4, Cons(3, Cons(4, Cons(4, Cons(2, Cons(6, Cons(5, Cons(1, Cons(4, Cons(7, Cons(8, Cons(0, Cons(8, Cons(4, Cons(4, Cons(4, Cons(9, Cons(9, Cons(7, Cons(9, Cons(7, Cons(3, Cons(9, Cons(8, Cons(4, Cons(7, Cons(0, Cons(2, Cons(6, Cons(1, Cons(0, Cons(7, Cons(6, Cons(0, Cons(2, Cons(0, Cons(2, Cons(1, Cons(9, Cons(0, Cons(9, Cons(1, Cons(6, Cons(5, Cons(1, Cons(7, Cons(4, Cons(7, Cons(5, Cons(6, Cons(9, Cons(8, Cons(1, Cons(7, Cons(6, Cons(7, Cons(9, Cons(3, Cons(0, Cons(8, Cons(6, Cons(6, Cons(8, Cons(5, Cons(1, Cons(9, Cons(6, Cons(9, Cons(8, Cons(3, Cons(6, Cons(5, Cons(7, Cons(0, Cons(4, Cons(7, Cons(6, Cons(2, Cons(6, Cons(7, Cons(7, Cons(2, Cons(1, Cons(1, Cons(3, Cons(5, Cons(3, Cons(6, Cons(3, Cons(8, Cons(0, Cons(2, Cons(3, Cons(9, Cons(2, Cons(4, Cons(9, Cons(6, Cons(8, Cons(1, Cons(7, Cons(4, Cons(1, Cons(7, Cons(5, Cons(5, Cons(5, Cons(7, Cons(4, Cons(8, Cons(2, Cons(6, Cons(0, Cons(6, Cons(2, Cons(8, Cons(4, Cons(4, Cons(7, Cons(6, Cons(8, Cons(9, Cons(0, Cons(3, Cons(5, Cons(1, Cons(8, Cons(8, Cons(0, Cons(8, Cons(9, Cons(4, Cons(4, Cons(0, Cons(1, Cons(0, Cons(8, Nil
println("1600 " + sorttimerec(ls1600))
val ls1700: List = Cons(1, Cons(0, Cons(8, Cons(2, Cons(5, Cons(8, Cons(9, Cons(0, Cons(8, Cons(0, Cons(6, Cons(8, Cons(3, Cons(7, Cons(0, Cons(6, Cons(1, Cons(1, Cons(1, Cons(2, Cons(0, Cons(4, Cons(3, Cons(8, Cons(6, Cons(3, Cons(7, Cons(2, Cons(3, Cons(7, Cons(1, Cons(7, Cons(0, Cons(5, Cons(7, Cons(5, Cons(7, Cons(2, Cons(3, Cons(0, Cons(4, Cons(6, Cons(7, Cons(4, Cons(9, Cons(6, Cons(8, Cons(3, Cons(8, Cons(9, Cons(5, Cons(9, Cons(8, Cons(0, Cons(2, Cons(6, Cons(0, Cons(3, Cons(3, Cons(6, Cons(8, Cons(0, Cons(0, Cons(5, Cons(4, Cons(5, Cons(3, Cons(1, Cons(5, Cons(0, Cons(2, Cons(0, Cons(6, Cons(8, Cons(5, Cons(6, Cons(0, Cons(9, Cons(0, Cons(5, Cons(0, Cons(3, Cons(5, Cons(5, Cons(4, Cons(7, Cons(2, Cons(2, Cons(1, Cons(8, Cons(8, Cons(8, Cons(0, Cons(1, Cons(7, Cons(5, Cons(4, Cons(2, Cons(4, Cons(6, Cons(3, Cons(9, Cons(5, Cons(7, Cons(6, Cons(7, Cons(1, Cons(5, Cons(0, Cons(8, Cons(2, Cons(0, Cons(6, Cons(6, Cons(2, Cons(6, Cons(9, Cons(3, Cons(2, Cons(8, Cons(9, Cons(1, Cons(4, Cons(1, Cons(0, Cons(4, Cons(0, Cons(9, Cons(7, Cons(2, Cons(4, Cons(4, Cons(5, Cons(9, Cons(2, Cons(5, Cons(0, Cons(1, Cons(5, Cons(6, Cons(7, Cons(0, Cons(2, Cons(3, Cons(3, Cons(8, Cons(3, Cons(3, Cons(6, Cons(5, Cons(3, Cons(3, Cons(6, Cons(2, Cons(1, Cons(6, Cons(6, Cons(3, Cons(8, Cons(9, Cons(2, Cons(2, Cons(7, Cons(2, Cons(4, Cons(7, Cons(4, Cons(6, Cons(9, Cons(0, Cons(6, Cons(3, Cons(1, Cons(4, Cons(9, Cons(4, Cons(5, Cons(9, Cons(3, Cons(8, Cons(1, Cons(4, Cons(8, Cons(7, Cons(5, Cons(0, Cons(9, Cons(2, Cons(2, Cons(5, Cons(0, Cons(4, Cons(6, Cons(1, Cons(0, Cons(8, Cons(4, Cons(8, Cons(4, Cons(6, Cons(2, Cons(2, Cons(0, Cons(4, Cons(2, Cons(0, Cons(2, Cons(8, Cons(4, Cons(7, Cons(9, Cons(4, Cons(0, Cons(5, Cons(2, Cons(6, Cons(8, Cons(5, Cons(6, Cons(0, Cons(7, Cons(8, Cons(8, Cons(2, Cons(2, Cons(1, Cons(9, Cons(3, Cons(4, Cons(7, Cons(5, Cons(5, Cons(5, Cons(9, Cons(3, Cons(0, Cons(2, Cons(0, Cons(8, Cons(6, Cons(2, Cons(5, Cons(6, Cons(4, Cons(7, Cons(5, Cons(4, Cons(5, Cons(4, Cons(3, Cons(4, Cons(0, Cons(1, Cons(9, Cons(5, Cons(6, Cons(7, Cons(0, Cons(7, Cons(7, Cons(9, Cons(1, Cons(9, Cons(6, Cons(3, Cons(1, Cons(2, Cons(7, Cons(2, Cons(2, Cons(9, Cons(7, Cons(8, Cons(3, Cons(7, Cons(1, Cons(8, Cons(2, Cons(1, Cons(4, Cons(1, Cons(6, Cons(4, Cons(5, Cons(4, Cons(3, Cons(3, Cons(8, Cons(7, Cons(6, Cons(3, Cons(7, Cons(5, Cons(5, Cons(2, Cons(5, Cons(0, Cons(0, Cons(5, Cons(1, Cons(4, Cons(2, Cons(0, Cons(0, Cons(8, Cons(1, Cons(0, Cons(5, Cons(8, Cons(3, Cons(9, Cons(9, Cons(3, Cons(9, Cons(6, Cons(9, Cons(3, Cons(8, Cons(3, Cons(7, Cons(6, Cons(2, Cons(8, Cons(3, Cons(9, Cons(9, Cons(4, Cons(6, Cons(5, Cons(8, Cons(6, Cons(4, Cons(5, Cons(8, Cons(0, Cons(9, Cons(5, Cons(6, Cons(4, Cons(9, Cons(0, Cons(0, Cons(8, Cons(5, Cons(8, Cons(1, Cons(8, Cons(9, Cons(5, Cons(3, Cons(9, Cons(4, Cons(0, Cons(0, Cons(9, Cons(1, Cons(4, Cons(0, Cons(7, Cons(9, Cons(6, Cons(3, Cons(9, Cons(4, Cons(0, Cons(7, Cons(0, Cons(7, Cons(2, Cons(8, Cons(0, Cons(9, Cons(0, Cons(6, Cons(1, Cons(8, Cons(5, Cons(4, Cons(1, Cons(0, Cons(0, Cons(6, Cons(0, Cons(0, Cons(0, Cons(3, Cons(7, Cons(4, Cons(5, Cons(8, Cons(8, Cons(9, Cons(2, Cons(5, Cons(4, Cons(9, Cons(6, Cons(2, Cons(5, Cons(5, Cons(6, Cons(1, Cons(2, Cons(8, Cons(6, Cons(0, Cons(2, Cons(8, Cons(5, Cons(5, Cons(2, Cons(9, Cons(6, Cons(9, Cons(5, Cons(3, Cons(5, Cons(0, Cons(1, Cons(1, Cons(5, Cons(6, Cons(8, Cons(2, Cons(6, Cons(1, Cons(8, Cons(0, Cons(2, Cons(3, Cons(8, Cons(7, Cons(0, Cons(6, Cons(3, Cons(9, Cons(0, Cons(9, Cons(6, Cons(8, Cons(9, Cons(6, Cons(2, Cons(5, Cons(3, Cons(3, Cons(8, Cons(2, Cons(1, Cons(4, Cons(8, Cons(2, Cons(7, Cons(5, Cons(6, Cons(1, Cons(2, Cons(0, Cons(6, Cons(0, Cons(5, Cons(2, Cons(0, Cons(7, Cons(9, Cons(3, Cons(7, Cons(8, Cons(9, Cons(3, Cons(1, Cons(3, Cons(4, Cons(6, Cons(3, Cons(8, Cons(4, Cons(5, Cons(2, Cons(4, Cons(7, Cons(3, Cons(3, Cons(7, Cons(2, Cons(5, Cons(8, Cons(6, Cons(3, Cons(3, Cons(6, Cons(0, Cons(9, Cons(7, Cons(4, Cons(0, Cons(3, Cons(0, Cons(2, Cons(0, Cons(2, Cons(6, Cons(1, Cons(5, Cons(2, Cons(6, Cons(8, Cons(0, Cons(3, Cons(0, Cons(2, Cons(7, Cons(5, Cons(1, Cons(6, Cons(7, Cons(1, Cons(2, Cons(3, Cons(7, Cons(4, Cons(4, Cons(6, Cons(9, Cons(6, Cons(4, Cons(6, Cons(4, Cons(4, Cons(0, Cons(5, Cons(2, Cons(6, Cons(9, Cons(0, Cons(8, Cons(6, Cons(9, Cons(0, Cons(5, Cons(3, Cons(4, Cons(0, Cons(6, Cons(0, Cons(6, Cons(3, Cons(3, Cons(1, Cons(3, Cons(4, Cons(9, Cons(8, Cons(9, Cons(3, Cons(2, Cons(9, Cons(4, Cons(4, Cons(7, Cons(8, Cons(5, Cons(4, Cons(2, Cons(1, Cons(8, Cons(5, Cons(7, Cons(7, Cons(9, Cons(6, Cons(4, Cons(5, Cons(8, Cons(6, Cons(8, Cons(6, Cons(9, Cons(4, Cons(6, Cons(4, Cons(8, Cons(1, Cons(1, Cons(9, Cons(8, Cons(3, Cons(8, Cons(7, Cons(0, Cons(4, Cons(0, Cons(3, Cons(8, Cons(2, Cons(5, Cons(9, Cons(8, Cons(4, Cons(8, Cons(7, Cons(6, Cons(7, Cons(8, Cons(2, Cons(3, Cons(5, Cons(5, Cons(1, Cons(3, Cons(3, Cons(4, Cons(6, Cons(1, Cons(9, Cons(3, Cons(8, Cons(3, Cons(1, Cons(7, Cons(3, Cons(3, Cons(8, Cons(8, Cons(0, Cons(2, Cons(5, Cons(9, Cons(9, Cons(4, Cons(0, Cons(9, Cons(1, Cons(4, Cons(4, Cons(3, Cons(4, Cons(3, Cons(9, Cons(6, Cons(2, Cons(4, Cons(4, Cons(5, Cons(0, Cons(1, Cons(4, Cons(2, Cons(0, Cons(8, Cons(2, Cons(4, Cons(6, Cons(8, Cons(4, Cons(8, Cons(9, Cons(6, Cons(7, Cons(3, Cons(8, Cons(2, Cons(8, Cons(8, Cons(3, Cons(6, Cons(0, Cons(1, Cons(1, Cons(3, Cons(4, Cons(4, Cons(1, Cons(1, Cons(0, Cons(4, Cons(6, Cons(1, Cons(6, Cons(3, Cons(1, Cons(9, Cons(0, Cons(5, Cons(8, Cons(0, Cons(4, Cons(9, Cons(9, Cons(3, Cons(5, Cons(0, Cons(5, Cons(9, Cons(9, Cons(4, Cons(5, Cons(8, Cons(5, Cons(0, Cons(7, Cons(6, Cons(3, Cons(4, Cons(2, Cons(2, Cons(1, Cons(8, Cons(7, Cons(9, Cons(6, Cons(5, Cons(0, Cons(0, Cons(1, Cons(2, Cons(6, Cons(9, Cons(0, Cons(4, Cons(1, Cons(8, Cons(8, Cons(1, Cons(5, Cons(3, Cons(9, Cons(0, Cons(8, Cons(3, Cons(7, Cons(7, Cons(9, Cons(0, Cons(4, Cons(2, Cons(6, Cons(2, Cons(3, Cons(5, Cons(4, Cons(2, Cons(3, Cons(1, Cons(6, Cons(7, Cons(3, Cons(0, Cons(3, Cons(6, Cons(4, Cons(0, Cons(4, Cons(1, Cons(7, Cons(0, Cons(7, Cons(2, Cons(3, Cons(7, Cons(7, Cons(0, Cons(1, Cons(9, Cons(4, Cons(9, Cons(8, Cons(9, Cons(2, Cons(3, Cons(7, Cons(3, Cons(9, Cons(2, Cons(3, Cons(2, Cons(3, Cons(8, Cons(3, Cons(5, Cons(7, Cons(9, Cons(7, Cons(6, Cons(0, Cons(3, Cons(2, Cons(5, Cons(1, Cons(7, Cons(8, Cons(9, Cons(4, Cons(2, Cons(9, Cons(5, Cons(8, Cons(8, Cons(6, Cons(6, Cons(0, Cons(8, Cons(8, Cons(9, Cons(4, Cons(4, Cons(5, Cons(4, Cons(1, Cons(1, Cons(2, Cons(3, Cons(6, Cons(2, Cons(5, Cons(1, Cons(8, Cons(4, Cons(0, Cons(5, Cons(5, Cons(4, Cons(5, Cons(3, Cons(0, Cons(3, Cons(5, Cons(6, Cons(1, Cons(9, Cons(6, Cons(4, Cons(8, Cons(5, Cons(6, Cons(9, Cons(5, Cons(2, Cons(5, Cons(1, Cons(8, Cons(1, Cons(2, Cons(6, Cons(2, Cons(6, Cons(9, Cons(2, Cons(0, Cons(3, Cons(6, Cons(1, Cons(6, Cons(5, Cons(9, Cons(2, Cons(0, Cons(7, Cons(5, Cons(1, Cons(9, Cons(4, Cons(4, Cons(3, Cons(9, Cons(1, Cons(6, Cons(8, Cons(2, Cons(5, Cons(6, Cons(8, Cons(4, Cons(4, Cons(1, Cons(9, Cons(3, Cons(4, Cons(5, Cons(8, Cons(9, Cons(0, Cons(4, Cons(9, Cons(0, Cons(1, Cons(3, Cons(0, Cons(9, Cons(4, Cons(2, Cons(1, Cons(1, Cons(0, Cons(7, Cons(5, Cons(5, Cons(2, Cons(1, Cons(4, Cons(3, Cons(0, Cons(7, Cons(6, Cons(7, Cons(5, Cons(1, Cons(4, Cons(1, Cons(3, Cons(4, Cons(1, Cons(0, Cons(8, Cons(8, Cons(4, Cons(3, Cons(5, Cons(6, Cons(1, Cons(9, Cons(4, Cons(2, Cons(6, Cons(8, Cons(1, Cons(2, Cons(1, Cons(5, Cons(8, Cons(5, Cons(9, Cons(0, Cons(4, Cons(4, Cons(0, Cons(4, Cons(8, Cons(2, Cons(0, Cons(2, Cons(9, Cons(7, Cons(9, Cons(2, Cons(8, Cons(1, Cons(2, Cons(2, Cons(9, Cons(3, Cons(7, Cons(1, Cons(8, Cons(2, Cons(6, Cons(0, Cons(5, Cons(4, Cons(3, Cons(6, Cons(5, Cons(3, Cons(3, Cons(2, Cons(8, Cons(3, Cons(8, Cons(3, Cons(3, Cons(2, Cons(5, Cons(2, Cons(6, Cons(3, Cons(6, Cons(5, Cons(9, Cons(7, Cons(8, Cons(2, Cons(8, Cons(1, Cons(1, Cons(4, Cons(4, Cons(0, Cons(9, Cons(5, Cons(6, Cons(3, Cons(0, Cons(3, Cons(8, Cons(0, Cons(7, Cons(4, Cons(4, Cons(3, Cons(2, Cons(2, Cons(5, Cons(6, Cons(7, Cons(5, Cons(8, Cons(5, Cons(2, Cons(8, Cons(8, Cons(1, Cons(0, Cons(5, Cons(0, Cons(5, Cons(0, Cons(2, Cons(9, Cons(4, Cons(1, Cons(9, Cons(6, Cons(4, Cons(3, Cons(0, Cons(9, Cons(3, Cons(7, Cons(3, Cons(4, Cons(2, Cons(1, Cons(4, Cons(2, Cons(8, Cons(9, Cons(2, Cons(6, Cons(5, Cons(9, Cons(6, Cons(0, Cons(2, Cons(9, Cons(3, Cons(7, Cons(8, Cons(2, Cons(1, Cons(0, Cons(5, Cons(9, Cons(3, Cons(4, Cons(7, Cons(5, Cons(4, Cons(1, Cons(9, Cons(3, Cons(3, Cons(7, Cons(9, Cons(2, Cons(1, Cons(3, Cons(9, Cons(0, Cons(8, Cons(0, Cons(0, Cons(9, Cons(3, Cons(6, Cons(7, Cons(3, Cons(3, Cons(8, Cons(8, Cons(0, Cons(9, Cons(9, Cons(5, Cons(8, Cons(9, Cons(6, Cons(8, Cons(6, Cons(2, Cons(3, Cons(5, Cons(8, Cons(5, Cons(4, Cons(2, Cons(4, Cons(4, Cons(9, Cons(5, Cons(7, Cons(0, Cons(3, Cons(3, Cons(2, Cons(1, Cons(5, Cons(0, Cons(2, Cons(2, Cons(0, Cons(6, Cons(2, Cons(6, Cons(9, Cons(1, Cons(7, Cons(5, Cons(6, Cons(5, Cons(6, Cons(9, Cons(2, Cons(3, Cons(0, Cons(9, Cons(1, Cons(3, Cons(0, Cons(9, Cons(3, Cons(6, Cons(1, Cons(1, Cons(7, Cons(9, Cons(1, Cons(4, Cons(4, Cons(6, Cons(4, Cons(1, Cons(3, Cons(4, Cons(6, Cons(0, Cons(5, Cons(4, Cons(3, Cons(2, Cons(8, Cons(9, Cons(0, Cons(5, Cons(4, Cons(4, Cons(8, Cons(1, Cons(3, Cons(7, Cons(4, Cons(6, Cons(9, Cons(8, Cons(9, Cons(5, Cons(9, Cons(2, Cons(0, Cons(4, Cons(5, Cons(7, Cons(1, Cons(3, Cons(4, Cons(4, Cons(8, Cons(4, Cons(0, Cons(5, Cons(9, Cons(7, Cons(5, Cons(1, Cons(7, Cons(2, Cons(6, Cons(6, Cons(7, Cons(0, Cons(1, Cons(6, Cons(8, Cons(7, Cons(5, Cons(6, Cons(0, Cons(7, Cons(0, Cons(3, Cons(8, Cons(1, Cons(1, Cons(2, Cons(8, Cons(3, Cons(5, Cons(0, Cons(2, Cons(2, Cons(2, Cons(0, Cons(8, Cons(5, Cons(0, Cons(9, Cons(4, Cons(6, Cons(5, Cons(1, Cons(3, Cons(7, Cons(7, Cons(0, Cons(6, Cons(2, Cons(0, Cons(0, Cons(0, Cons(6, Cons(2, Cons(3, Cons(6, Cons(5, Cons(2, Cons(0, Cons(5, Cons(0, Cons(5, Cons(1, Cons(6, Cons(2, Cons(1, Cons(4, Cons(3, Cons(3, Cons(8, Cons(1, Cons(7, Cons(7, Cons(5, Cons(8, Cons(9, Cons(4, Cons(9, Cons(3, Cons(5, Cons(1, Cons(5, Cons(3, Cons(7, Cons(1, Cons(3, Cons(8, Cons(2, Cons(6, Cons(4, Cons(5, Cons(7, Cons(4, Cons(4, Cons(4, Cons(8, Cons(1, Cons(7, Cons(5, Cons(4, Cons(9, Cons(1, Cons(4, Cons(8, Cons(7, Cons(3, Cons(0, Cons(6, Cons(8, Cons(6, Cons(8, Cons(0, Cons(5, Cons(4, Cons(0, Cons(3, Cons(1, Cons(1, Cons(9, Cons(4, Cons(7, Cons(9, Cons(2, Cons(0, Cons(0, Cons(4, Cons(7, Cons(1, Cons(8, Cons(0, Cons(2, Cons(7, Cons(2, Cons(7, Cons(0, Cons(2, Cons(6, Cons(2, Cons(8, Cons(7, Cons(7, Cons(3, Cons(1, Cons(4, Cons(3, Cons(1, Cons(4, Cons(7, Cons(7, Cons(0, Cons(4, Cons(7, Cons(3, Cons(3, Cons(5, Cons(9, Cons(6, Cons(1, Cons(6, Cons(3, Cons(4, Cons(3, Cons(9, Cons(6, Cons(3, Cons(4, Cons(6, Cons(4, Cons(6, Cons(3, Cons(3, Cons(3, Cons(5, Cons(3, Cons(2, Cons(2, Cons(7, Cons(5, Cons(2, Cons(2, Cons(3, Cons(5, Cons(1, Cons(3, Cons(4, Cons(6, Cons(3, Cons(4, Cons(1, Cons(4, Cons(2, Cons(6, Cons(4, Cons(2, Cons(6, Cons(4, Cons(1, Cons(2, Cons(5, Cons(5, Cons(1, Cons(8, Cons(4, Cons(6, Cons(9, Cons(1, Cons(1, Cons(6, Cons(9, Cons(9, Cons(6, Cons(7, Cons(9, Cons(4, Cons(3, Cons(7, Cons(0, Cons(2, Cons(8, Cons(2, Cons(6, Cons(3, Cons(7, Cons(2, Cons(7, Cons(6, Cons(7, Cons(2, Cons(2, Cons(7, Cons(1, Cons(4, Cons(2, Cons(0, Cons(7, Cons(6, Cons(8, Cons(1, Cons(1, Cons(5, Cons(0, Cons(8, Cons(5, Cons(6, Cons(7, Cons(1, Cons(7, Cons(5, Cons(4, Cons(4, Cons(8, Cons(7, Cons(9, Cons(9, Cons(2, Cons(7, Cons(8, Cons(0, Cons(7, Cons(8, Cons(6, Cons(5, Cons(7, Cons(9, Cons(8, Cons(8, Cons(0, Cons(8, Cons(4, Cons(0, Cons(3, Cons(8, Cons(6, Cons(9, Cons(2, Cons(7, Cons(0, Cons(3, Cons(6, Cons(5, Cons(9, Cons(6, Cons(2, Cons(3, Cons(7, Cons(0, Cons(8, Cons(4, Cons(4, Cons(1, Cons(6, Cons(3, Cons(4, Cons(4, Cons(6, Cons(0, Cons(1, Cons(8, Cons(7, Cons(7, Cons(5, Cons(0, Cons(2, Cons(0, Cons(7, Cons(4, Cons(6, Cons(7, Cons(8, Cons(1, Cons(7, Cons(3, Cons(2, Cons(8, Cons(8, Cons(5, Cons(2, Cons(4, Cons(5, Cons(2, Cons(5, Cons(5, Cons(5, Cons(2, Cons(9, Cons(0, Cons(8, Cons(8, Cons(1, Cons(1, Cons(9, Cons(4, Cons(7, Cons(3, Cons(6, Cons(1, Cons(4, Cons(1, Cons(1, Cons(7, Cons(0, Cons(0, Cons(7, Cons(1, Cons(5, Cons(4, Cons(4, Cons(3, Cons(7, Cons(2, Cons(3, Cons(2, Cons(0, Cons(5, Cons(7, Cons(2, Cons(1, Cons(9, Cons(8, Cons(5, Cons(1, Cons(6, Cons(1, Cons(0, Cons(9, Cons(6, Cons(0, Cons(5, Cons(7, Cons(7, Cons(1, Cons(2, Cons(1, Cons(4, Cons(2, Cons(0, Cons(0, Cons(0, Cons(6, Cons(3, Cons(5, Cons(4, Cons(3, Cons(9, Cons(0, Cons(6, Cons(1, Cons(3, Cons(9, Cons(8, Cons(9, Cons(8, Cons(2, Cons(1, Cons(0, Cons(3, Cons(7, Cons(9, Cons(7, Cons(7, Cons(0, Cons(6, Cons(0, Cons(1, Cons(2, Cons(4, Cons(2, Cons(4, Cons(2, Cons(3, Cons(7, Cons(3, Cons(2, Cons(7, Cons(9, Cons(1, Cons(9, Cons(8, Cons(5, Cons(4, Cons(8, Cons(1, Cons(7, Cons(9, Cons(9, Cons(9, Cons(5, Cons(7, Cons(0, Cons(4, Cons(0, Cons(0, Cons(5, Cons(0, Cons(3, Cons(8, Cons(4, Cons(4, Cons(0, Cons(3, Cons(3, Cons(5, Cons(1, Cons(8, Cons(2, Cons(2, Cons(5, Cons(3, Cons(0, Cons(1, Cons(9, Cons(3, Cons(6, Cons(7, Cons(3, Cons(3, Cons(4, Cons(9, Cons(7, Cons(7, Cons(1, Cons(0, Cons(3, Cons(4, Cons(1, Cons(6, Cons(9, Cons(5, Cons(6, Cons(4, Cons(5, Cons(8, Cons(1, Cons(8, Cons(0, Cons(6, Cons(5, Cons(3, Cons(8, Cons(5, Cons(8, Cons(3, Cons(1, Cons(2, Cons(7, Cons(8, Cons(2, Cons(6, Cons(7, Cons(7, Cons(3, Cons(8, Cons(1, Cons(6, Cons(7, Cons(3, Cons(8, Cons(9, Cons(7, Cons(2, Cons(5, Cons(4, Cons(9, Cons(8, Cons(8, Cons(9, Cons(7, Cons(9, Cons(7, Cons(3, Cons(8, Cons(1, Cons(3, Cons(8, Cons(1, Cons(1, Cons(0, Cons(8, Cons(2, Cons(2, Cons(0, Cons(6, Cons(6, Cons(6, Nil
println("1700 " + sorttimerec(ls1700))
val ls1800: List = Cons(7, Cons(0, Cons(2, Cons(6, Cons(5, Cons(7, Cons(3, Cons(3, Cons(7, Cons(9, Cons(2, Cons(0, Cons(5, Cons(6, Cons(7, Cons(0, Cons(3, Cons(3, Cons(6, Cons(4, Cons(7, Cons(9, Cons(4, Cons(1, Cons(9, Cons(3, Cons(4, Cons(7, Cons(1, Cons(5, Cons(8, Cons(9, Cons(9, Cons(2, Cons(5, Cons(7, Cons(3, Cons(5, Cons(3, Cons(6, Cons(9, Cons(9, Cons(3, Cons(2, Cons(4, Cons(9, Cons(3, Cons(7, Cons(7, Cons(7, Cons(9, Cons(9, Cons(2, Cons(6, Cons(5, Cons(6, Cons(6, Cons(1, Cons(7, Cons(5, Cons(0, Cons(9, Cons(1, Cons(4, Cons(5, Cons(5, Cons(2, Cons(0, Cons(3, Cons(4, Cons(5, Cons(8, Cons(1, Cons(5, Cons(2, Cons(3, Cons(0, Cons(8, Cons(7, Cons(2, Cons(6, Cons(9, Cons(5, Cons(6, Cons(2, Cons(4, Cons(1, Cons(0, Cons(9, Cons(6, Cons(3, Cons(1, Cons(6, Cons(2, Cons(4, Cons(5, Cons(6, Cons(6, Cons(5, Cons(9, Cons(7, Cons(7, Cons(1, Cons(7, Cons(7, Cons(9, Cons(3, Cons(0, Cons(5, Cons(8, Cons(2, Cons(9, Cons(9, Cons(0, Cons(0, Cons(0, Cons(6, Cons(1, Cons(3, Cons(1, Cons(8, Cons(2, Cons(5, Cons(5, Cons(2, Cons(2, Cons(6, Cons(0, Cons(5, Cons(5, Cons(8, Cons(3, Cons(6, Cons(5, Cons(4, Cons(5, Cons(1, Cons(9, Cons(4, Cons(9, Cons(6, Cons(5, Cons(3, Cons(6, Cons(1, Cons(9, Cons(2, Cons(8, Cons(5, Cons(3, Cons(3, Cons(5, Cons(6, Cons(3, Cons(8, Cons(5, Cons(9, Cons(6, Cons(1, Cons(1, Cons(0, Cons(7, Cons(5, Cons(8, Cons(0, Cons(6, Cons(9, Cons(6, Cons(9, Cons(1, Cons(7, Cons(2, Cons(8, Cons(0, Cons(5, Cons(7, Cons(9, Cons(7, Cons(1, Cons(6, Cons(4, Cons(0, Cons(5, Cons(7, Cons(6, Cons(6, Cons(6, Cons(6, Cons(9, Cons(5, Cons(5, Cons(7, Cons(2, Cons(5, Cons(3, Cons(3, Cons(8, Cons(2, Cons(4, Cons(3, Cons(9, Cons(2, Cons(2, Cons(8, Cons(0, Cons(9, Cons(9, Cons(1, Cons(7, Cons(4, Cons(1, Cons(6, Cons(0, Cons(3, Cons(6, Cons(1, Cons(3, Cons(8, Cons(0, Cons(6, Cons(9, Cons(5, Cons(2, Cons(1, Cons(0, Cons(7, Cons(2, Cons(0, Cons(8, Cons(2, Cons(2, Cons(3, Cons(4, Cons(2, Cons(9, Cons(7, Cons(4, Cons(4, Cons(6, Cons(4, Cons(6, Cons(4, Cons(7, Cons(8, Cons(4, Cons(9, Cons(7, Cons(2, Cons(3, Cons(3, Cons(5, Cons(6, Cons(1, Cons(7, Cons(3, Cons(5, Cons(6, Cons(3, Cons(2, Cons(9, Cons(4, Cons(2, Cons(0, Cons(1, Cons(0, Cons(0, Cons(5, Cons(6, Cons(5, Cons(5, Cons(8, Cons(5, Cons(7, Cons(9, Cons(6, Cons(4, Cons(6, Cons(4, Cons(6, Cons(8, Cons(8, Cons(4, Cons(3, Cons(9, Cons(4, Cons(4, Cons(6, Cons(7, Cons(8, Cons(0, Cons(8, Cons(3, Cons(8, Cons(6, Cons(2, Cons(7, Cons(7, Cons(8, Cons(0, Cons(2, Cons(6, Cons(6, Cons(5, Cons(4, Cons(3, Cons(4, Cons(5, Cons(8, Cons(5, Cons(4, Cons(3, Cons(2, Cons(5, Cons(5, Cons(1, Cons(8, Cons(0, Cons(4, Cons(0, Cons(6, Cons(5, Cons(4, Cons(4, Cons(8, Cons(9, Cons(5, Cons(9, Cons(3, Cons(0, Cons(4, Cons(7, Cons(0, Cons(5, Cons(6, Cons(5, Cons(6, Cons(5, Cons(6, Cons(4, Cons(9, Cons(5, Cons(8, Cons(6, Cons(2, Cons(3, Cons(0, Cons(6, Cons(8, Cons(6, Cons(5, Cons(2, Cons(3, Cons(9, Cons(7, Cons(7, Cons(8, Cons(3, Cons(9, Cons(5, Cons(4, Cons(6, Cons(5, Cons(1, Cons(6, Cons(9, Cons(9, Cons(3, Cons(6, Cons(9, Cons(7, Cons(5, Cons(0, Cons(4, Cons(7, Cons(5, Cons(2, Cons(9, Cons(9, Cons(8, Cons(3, Cons(2, Cons(2, Cons(2, Cons(9, Cons(7, Cons(2, Cons(5, Cons(4, Cons(5, Cons(9, Cons(8, Cons(3, Cons(7, Cons(5, Cons(4, Cons(3, Cons(5, Cons(1, Cons(4, Cons(9, Cons(2, Cons(0, Cons(4, Cons(9, Cons(6, Cons(9, Cons(2, Cons(3, Cons(6, Cons(2, Cons(2, Cons(7, Cons(3, Cons(0, Cons(7, Cons(7, Cons(8, Cons(1, Cons(1, Cons(6, Cons(5, Cons(3, Cons(8, Cons(8, Cons(9, Cons(8, Cons(2, Cons(1, Cons(9, Cons(3, Cons(3, Cons(3, Cons(5, Cons(1, Cons(1, Cons(1, Cons(2, Cons(9, Cons(5, Cons(4, Cons(3, Cons(0, Cons(5, Cons(4, Cons(1, Cons(2, Cons(0, Cons(6, Cons(9, Cons(3, Cons(3, Cons(1, Cons(3, Cons(7, Cons(3, Cons(1, Cons(4, Cons(4, Cons(1, Cons(7, Cons(5, Cons(7, Cons(7, Cons(0, Cons(2, Cons(1, Cons(7, Cons(8, Cons(5, Cons(7, Cons(1, Cons(1, Cons(7, Cons(8, Cons(6, Cons(3, Cons(3, Cons(5, Cons(4, Cons(2, Cons(5, Cons(0, Cons(8, Cons(3, Cons(9, Cons(7, Cons(2, Cons(5, Cons(6, Cons(9, Cons(9, Cons(4, Cons(4, Cons(0, Cons(8, Cons(7, Cons(6, Cons(4, Cons(0, Cons(3, Cons(9, Cons(2, Cons(6, Cons(5, Cons(8, Cons(3, Cons(5, Cons(3, Cons(5, Cons(8, Cons(8, Cons(6, Cons(1, Cons(0, Cons(9, Cons(3, Cons(5, Cons(5, Cons(3, Cons(3, Cons(5, Cons(7, Cons(2, Cons(0, Cons(7, Cons(2, Cons(7, Cons(7, Cons(8, Cons(2, Cons(3, Cons(7, Cons(1, Cons(8, Cons(8, Cons(0, Cons(7, Cons(0, Cons(0, Cons(4, Cons(0, Cons(0, Cons(8, Cons(4, Cons(3, Cons(6, Cons(1, Cons(3, Cons(2, Cons(5, Cons(6, Cons(4, Cons(6, Cons(5, Cons(0, Cons(6, Cons(2, Cons(4, Cons(6, Cons(5, Cons(8, Cons(8, Cons(0, Cons(2, Cons(4, Cons(0, Cons(4, Cons(6, Cons(4, Cons(7, Cons(6, Cons(1, Cons(1, Cons(8, Cons(6, Cons(7, Cons(2, Cons(0, Cons(8, Cons(6, Cons(3, Cons(9, Cons(6, Cons(0, Cons(9, Cons(2, Cons(3, Cons(1, Cons(6, Cons(3, Cons(2, Cons(1, Cons(3, Cons(9, Cons(2, Cons(2, Cons(9, Cons(3, Cons(0, Cons(1, Cons(7, Cons(9, Cons(0, Cons(3, Cons(7, Cons(8, Cons(7, Cons(9, Cons(1, Cons(6, Cons(8, Cons(7, Cons(5, Cons(1, Cons(5, Cons(2, Cons(7, Cons(6, Cons(4, Cons(2, Cons(1, Cons(8, Cons(5, Cons(8, Cons(8, Cons(8, Cons(7, Cons(2, Cons(6, Cons(2, Cons(7, Cons(9, Cons(9, Cons(7, Cons(9, Cons(3, Cons(7, Cons(5, Cons(7, Cons(3, Cons(5, Cons(2, Cons(3, Cons(6, Cons(5, Cons(6, Cons(2, Cons(5, Cons(3, Cons(1, Cons(8, Cons(8, Cons(2, Cons(0, Cons(5, Cons(0, Cons(8, Cons(6, Cons(8, Cons(3, Cons(9, Cons(9, Cons(7, Cons(3, Cons(3, Cons(7, Cons(3, Cons(4, Cons(0, Cons(7, Cons(1, Cons(6, Cons(6, Cons(4, Cons(2, Cons(2, Cons(3, Cons(3, Cons(0, Cons(3, Cons(4, Cons(2, Cons(4, Cons(1, Cons(7, Cons(9, Cons(3, Cons(3, Cons(6, Cons(7, Cons(5, Cons(6, Cons(2, Cons(0, Cons(5, Cons(7, Cons(6, Cons(2, Cons(1, Cons(9, Cons(0, Cons(1, Cons(4, Cons(2, Cons(2, Cons(0, Cons(2, Cons(9, Cons(4, Cons(9, Cons(6, Cons(4, Cons(0, Cons(7, Cons(7, Cons(4, Cons(0, Cons(2, Cons(5, Cons(8, Cons(7, Cons(5, Cons(9, Cons(4, Cons(0, Cons(7, Cons(6, Cons(8, Cons(8, Cons(8, Cons(2, Cons(3, Cons(3, Cons(5, Cons(0, Cons(9, Cons(7, Cons(0, Cons(7, Cons(0, Cons(8, Cons(2, Cons(0, Cons(5, Cons(3, Cons(3, Cons(4, Cons(2, Cons(7, Cons(9, Cons(6, Cons(5, Cons(9, Cons(3, Cons(9, Cons(1, Cons(4, Cons(0, Cons(2, Cons(3, Cons(2, Cons(8, Cons(4, Cons(6, Cons(8, Cons(0, Cons(0, Cons(5, Cons(3, Cons(8, Cons(3, Cons(7, Cons(8, Cons(3, Cons(1, Cons(7, Cons(1, Cons(9, Cons(8, Cons(9, Cons(7, Cons(3, Cons(5, Cons(2, Cons(6, Cons(7, Cons(6, Cons(1, Cons(0, Cons(3, Cons(4, Cons(4, Cons(7, Cons(5, Cons(2, Cons(9, Cons(2, Cons(4, Cons(6, Cons(4, Cons(6, Cons(6, Cons(5, Cons(8, Cons(0, Cons(0, Cons(8, Cons(8, Cons(1, Cons(5, Cons(6, Cons(4, Cons(8, Cons(6, Cons(6, Cons(3, Cons(5, Cons(9, Cons(8, Cons(4, Cons(7, Cons(3, Cons(6, Cons(2, Cons(3, Cons(1, Cons(7, Cons(5, Cons(9, Cons(3, Cons(6, Cons(6, Cons(3, Cons(9, Cons(5, Cons(0, Cons(0, Cons(8, Cons(7, Cons(1, Cons(8, Cons(2, Cons(4, Cons(3, Cons(4, Cons(4, Cons(7, Cons(9, Cons(9, Cons(4, Cons(6, Cons(0, Cons(6, Cons(5, Cons(2, Cons(0, Cons(1, Cons(0, Cons(0, Cons(3, Cons(9, Cons(5, Cons(1, Cons(6, Cons(3, Cons(7, Cons(5, Cons(5, Cons(8, Cons(8, Cons(9, Cons(3, Cons(7, Cons(0, Cons(2, Cons(6, Cons(4, Cons(2, Cons(8, Cons(0, Cons(6, Cons(9, Cons(3, Cons(9, Cons(2, Cons(5, Cons(1, Cons(6, Cons(6, Cons(3, Cons(2, Cons(1, Cons(2, Cons(7, Cons(9, Cons(2, Cons(6, Cons(0, Cons(1, Cons(2, Cons(9, Cons(4, Cons(6, Cons(4, Cons(3, Cons(5, Cons(2, Cons(9, Cons(9, Cons(9, Cons(5, Cons(1, Cons(3, Cons(7, Cons(6, Cons(4, Cons(7, Cons(6, Cons(6, Cons(2, Cons(3, Cons(6, Cons(2, Cons(3, Cons(6, Cons(9, Cons(9, Cons(4, Cons(5, Cons(7, Cons(7, Cons(7, Cons(4, Cons(9, Cons(6, Cons(6, Cons(9, Cons(3, Cons(1, Cons(2, Cons(5, Cons(9, Cons(6, Cons(9, Cons(6, Cons(3, Cons(2, Cons(2, Cons(5, Cons(4, Cons(9, Cons(3, Cons(4, Cons(6, Cons(1, Cons(6, Cons(5, Cons(7, Cons(1, Cons(9, Cons(9, Cons(4, Cons(2, Cons(1, Cons(7, Cons(3, Cons(8, Cons(9, Cons(8, Cons(3, Cons(6, Cons(0, Cons(8, Cons(5, Cons(5, Cons(7, Cons(2, Cons(1, Cons(4, Cons(7, Cons(7, Cons(0, Cons(6, Cons(5, Cons(1, Cons(0, Cons(8, Cons(6, Cons(4, Cons(0, Cons(8, Cons(2, Cons(3, Cons(6, Cons(5, Cons(4, Cons(4, Cons(6, Cons(3, Cons(5, Cons(4, Cons(6, Cons(4, Cons(6, Cons(5, Cons(9, Cons(2, Cons(8, Cons(3, Cons(0, Cons(0, Cons(1, Cons(2, Cons(4, Cons(6, Cons(3, Cons(8, Cons(8, Cons(1, Cons(2, Cons(8, Cons(9, Cons(9, Cons(0, Cons(9, Cons(9, Cons(2, Cons(2, Cons(4, Cons(7, Cons(0, Cons(8, Cons(4, Cons(4, Cons(9, Cons(3, Cons(6, Cons(8, Cons(0, Cons(3, Cons(7, Cons(8, Cons(9, Cons(9, Cons(1, Cons(8, Cons(8, Cons(4, Cons(4, Cons(9, Cons(3, Cons(7, Cons(4, Cons(9, Cons(0, Cons(1, Cons(6, Cons(5, Cons(6, Cons(0, Cons(0, Cons(2, Cons(7, Cons(0, Cons(3, Cons(2, Cons(9, Cons(4, Cons(1, Cons(2, Cons(5, Cons(6, Cons(8, Cons(7, Cons(8, Cons(4, Cons(0, Cons(0, Cons(6, Cons(6, Cons(1, Cons(6, Cons(6, Cons(1, Cons(8, Cons(2, Cons(3, Cons(1, Cons(2, Cons(3, Cons(7, Cons(0, Cons(4, Cons(8, Cons(8, Cons(5, Cons(6, Cons(5, Cons(8, Cons(5, Cons(5, Cons(4, Cons(0, Cons(0, Cons(0, Cons(3, Cons(2, Cons(0, Cons(3, Cons(8, Cons(7, Cons(1, Cons(3, Cons(0, Cons(3, Cons(2, Cons(6, Cons(3, Cons(4, Cons(3, Cons(8, Cons(5, Cons(1, Cons(7, Cons(5, Cons(3, Cons(8, Cons(7, Cons(6, Cons(0, Cons(4, Cons(7, Cons(6, Cons(8, Cons(0, Cons(0, Cons(9, Cons(9, Cons(3, Cons(2, Cons(3, Cons(7, Cons(5, Cons(6, Cons(4, Cons(2, Cons(9, Cons(8, Cons(2, Cons(2, Cons(6, Cons(4, Cons(9, Cons(9, Cons(8, Cons(1, Cons(5, Cons(5, Cons(7, Cons(1, Cons(8, Cons(1, Cons(1, Cons(8, Cons(8, Cons(1, Cons(0, Cons(8, Cons(8, Cons(9, Cons(4, Cons(6, Cons(1, Cons(8, Cons(4, Cons(0, Cons(8, Cons(9, Cons(3, Cons(5, Cons(2, Cons(5, Cons(0, Cons(6, Cons(2, Cons(9, Cons(3, Cons(4, Cons(0, Cons(9, Cons(3, Cons(3, Cons(4, Cons(9, Cons(1, Cons(5, Cons(5, Cons(7, Cons(0, Cons(2, Cons(7, Cons(4, Cons(6, Cons(7, Cons(0, Cons(9, Cons(4, Cons(2, Cons(2, Cons(2, Cons(4, Cons(3, Cons(6, Cons(9, Cons(7, Cons(4, Cons(7, Cons(4, Cons(4, Cons(0, Cons(6, Cons(2, Cons(5, Cons(1, Cons(0, Cons(2, Cons(0, Cons(0, Cons(9, Cons(0, Cons(4, Cons(8, Cons(7, Cons(1, Cons(2, Cons(5, Cons(8, Cons(5, Cons(0, Cons(1, Cons(2, Cons(5, Cons(9, Cons(7, Cons(5, Cons(6, Cons(0, Cons(4, Cons(8, Cons(9, Cons(9, Cons(2, Cons(6, Cons(6, Cons(9, Cons(1, Cons(6, Cons(8, Cons(7, Cons(9, Cons(3, Cons(9, Cons(6, Cons(2, Cons(7, Cons(3, Cons(3, Cons(8, Cons(3, Cons(4, Cons(4, Cons(8, Cons(8, Cons(9, Cons(5, Cons(2, Cons(0, Cons(1, Cons(3, Cons(0, Cons(1, Cons(5, Cons(7, Cons(9, Cons(1, Cons(2, Cons(5, Cons(0, Cons(0, Cons(3, Cons(7, Cons(6, Cons(7, Cons(7, Cons(1, Cons(4, Cons(0, Cons(4, Cons(8, Cons(5, Cons(8, Cons(6, Cons(2, Cons(3, Cons(5, Cons(0, Cons(9, Cons(2, Cons(6, Cons(9, Cons(5, Cons(4, Cons(5, Cons(0, Cons(4, Cons(6, Cons(0, Cons(4, Cons(5, Cons(7, Cons(6, Cons(8, Cons(0, Cons(5, Cons(4, Cons(1, Cons(0, Cons(2, Cons(3, Cons(7, Cons(9, Cons(5, Cons(1, Cons(8, Cons(3, Cons(7, Cons(3, Cons(8, Cons(6, Cons(6, Cons(4, Cons(7, Cons(1, Cons(0, Cons(1, Cons(2, Cons(6, Cons(0, Cons(5, Cons(2, Cons(6, Cons(3, Cons(8, Cons(5, Cons(8, Cons(0, Cons(7, Cons(9, Cons(7, Cons(5, Cons(4, Cons(5, Cons(1, Cons(4, Cons(0, Cons(6, Cons(8, Cons(3, Cons(9, Cons(0, Cons(8, Cons(8, Cons(3, Cons(7, Cons(8, Cons(0, Cons(7, Cons(9, Cons(9, Cons(3, Cons(6, Cons(3, Cons(0, Cons(9, Cons(5, Cons(3, Cons(7, Cons(1, Cons(8, Cons(6, Cons(1, Cons(2, Cons(9, Cons(6, Cons(2, Cons(9, Cons(6, Cons(5, Cons(6, Cons(7, Cons(5, Cons(8, Cons(3, Cons(4, Cons(5, Cons(3, Cons(4, Cons(3, Cons(7, Cons(6, Cons(4, Cons(4, Cons(1, Cons(5, Cons(5, Cons(9, Cons(3, Cons(2, Cons(0, Cons(5, Cons(9, Cons(0, Cons(6, Cons(2, Cons(1, Cons(1, Cons(6, Cons(7, Cons(4, Cons(6, Cons(9, Cons(1, Cons(3, Cons(1, Cons(1, Cons(3, Cons(2, Cons(8, Cons(0, Cons(3, Cons(9, Cons(8, Cons(8, Cons(9, Cons(7, Cons(3, Cons(3, Cons(4, Cons(3, Cons(2, Cons(0, Cons(7, Cons(9, Cons(8, Cons(5, Cons(4, Cons(4, Cons(5, Cons(9, Cons(1, Cons(0, Cons(0, Cons(0, Cons(2, Cons(0, Cons(3, Cons(7, Cons(1, Cons(8, Cons(7, Cons(2, Cons(1, Cons(5, Cons(1, Cons(5, Cons(3, Cons(2, Cons(1, Cons(6, Cons(3, Cons(1, Cons(3, Cons(1, Cons(1, Cons(5, Cons(6, Cons(7, Cons(8, Cons(9, Cons(8, Cons(4, Cons(0, Cons(7, Cons(9, Cons(5, Cons(4, Cons(0, Cons(2, Cons(6, Cons(1, Cons(0, Cons(0, Cons(1, Cons(4, Cons(7, Cons(1, Cons(9, Cons(7, Cons(0, Cons(6, Cons(1, Cons(0, Cons(8, Cons(0, Cons(3, Cons(5, Cons(7, Cons(0, Cons(6, Cons(4, Cons(6, Cons(2, Cons(4, Cons(6, Cons(6, Cons(9, Cons(4, Cons(2, Cons(9, Cons(7, Cons(8, Cons(9, Cons(0, Cons(9, Cons(3, Cons(4, Cons(6, Cons(4, Cons(2, Cons(6, Cons(1, Cons(8, Cons(2, Cons(6, Cons(1, Cons(5, Cons(6, Cons(9, Cons(0, Cons(7, Cons(7, Cons(5, Cons(5, Cons(2, Cons(3, Cons(1, Cons(8, Cons(1, Cons(7, Cons(5, Cons(4, Cons(6, Cons(1, Cons(9, Cons(1, Cons(6, Cons(7, Cons(8, Cons(1, Cons(9, Cons(0, Cons(4, Cons(2, Cons(1, Cons(9, Cons(5, Cons(8, Cons(8, Cons(7, Cons(1, Cons(6, Cons(4, Cons(6, Cons(0, Cons(4, Cons(6, Cons(5, Cons(5, Cons(5, Cons(0, Cons(1, Cons(1, Cons(3, Cons(2, Cons(8, Cons(2, Cons(2, Cons(1, Cons(8, Cons(7, Cons(1, Cons(5, Cons(2, Cons(1, Cons(4, Cons(6, Cons(5, Cons(7, Cons(2, Cons(5, Cons(5, Cons(4, Cons(7, Cons(9, Cons(7, Cons(4, Cons(1, Cons(7, Cons(6, Cons(5, Cons(5, Cons(1, Cons(9, Cons(5, Cons(0, Cons(7, Cons(0, Cons(0, Cons(2, Cons(1, Cons(5, Cons(3, Cons(0, Cons(8, Cons(1, Cons(0, Cons(0, Cons(3, Cons(8, Cons(4, Cons(0, Cons(5, Cons(9, Cons(0, Cons(8, Cons(8, Cons(7, Cons(5, Cons(0, Cons(4, Cons(8, Cons(4, Cons(3, Cons(5, Cons(4, Cons(2, Cons(9, Cons(6, Cons(3, Cons(9, Cons(1, Cons(5, Cons(5, Cons(6, Cons(6, Cons(2, Cons(3, Cons(5, Cons(9, Cons(2, Cons(6, Cons(0, Cons(8, Cons(3, Cons(3, Cons(4, Cons(4, Cons(3, Cons(2, Cons(8, Cons(1, Cons(2, Cons(0, Cons(3, Cons(9, Cons(3, Cons(2, Cons(3, Cons(3, Cons(9, Cons(8, Cons(6, Cons(2, Cons(6, Cons(7, Cons(1, Cons(6, Cons(7, Cons(4, Cons(1, Cons(0, Cons(2, Cons(2, Cons(9, Cons(1, Cons(7, Cons(3, Cons(4, Cons(7, Cons(4, Cons(6, Cons(5, Cons(0, Cons(6, Cons(9, Cons(9, Cons(3, Cons(1, Cons(1, Cons(5, Cons(3, Cons(0, Cons(4, Cons(9, Cons(4, Cons(0, Cons(2, Cons(9, Cons(9, Cons(7, Cons(0, Cons(7, Cons(0, Cons(2, Cons(0, Cons(7, Cons(3, Cons(3, Cons(0, Cons(5, Cons(9, Cons(4, Cons(1, Cons(5, Cons(7, Cons(9, Cons(6, Cons(5, Cons(2, Cons(8, Cons(9, Cons(2, Cons(0, Cons(4, Cons(4, Cons(1, Cons(9, Cons(7, Cons(3, Cons(0, Cons(7, Cons(2, Cons(9, Cons(5, Cons(4, Cons(4, Cons(3, Cons(3, Cons(2, Cons(5, Cons(6, Cons(6, Cons(0, Cons(9, Cons(4, Cons(1, Cons(9, Cons(0, Cons(4, Cons(0, Cons(1, Cons(6, Cons(0, Cons(9, Cons(1, Cons(6, Cons(7, Cons(0, Cons(1, Cons(7, Cons(7, Cons(3, Cons(6, Cons(3, Cons(8, Cons(1, Cons(1, Cons(2, Cons(7, Cons(3, Nil
println("1800 " + sorttimerec(ls1800))
val ls1900: List = Cons(2, Cons(0, Cons(3, Cons(0, Cons(5, Cons(0, Cons(3, Cons(1, Cons(4, Cons(1, Cons(6, Cons(8, Cons(9, Cons(5, Cons(0, Cons(8, Cons(8, Cons(8, Cons(8, Cons(8, Cons(9, Cons(4, Cons(8, Cons(2, Cons(3, Cons(5, Cons(1, Cons(1, Cons(8, Cons(4, Cons(2, Cons(5, Cons(8, Cons(2, Cons(2, Cons(1, Cons(9, Cons(6, Cons(8, Cons(4, Cons(6, Cons(5, Cons(5, Cons(2, Cons(3, Cons(5, Cons(7, Cons(7, Cons(3, Cons(0, Cons(1, Cons(4, Cons(4, Cons(4, Cons(9, Cons(9, Cons(4, Cons(9, Cons(4, Cons(9, Cons(1, Cons(8, Cons(5, Cons(4, Cons(9, Cons(8, Cons(9, Cons(9, Cons(6, Cons(3, Cons(6, Cons(9, Cons(9, Cons(5, Cons(4, Cons(3, Cons(4, Cons(1, Cons(2, Cons(8, Cons(6, Cons(9, Cons(0, Cons(9, Cons(2, Cons(8, Cons(5, Cons(1, Cons(3, Cons(1, Cons(4, Cons(8, Cons(3, Cons(3, Cons(6, Cons(9, Cons(4, Cons(6, Cons(4, Cons(2, Cons(9, Cons(9, Cons(9, Cons(7, Cons(7, Cons(7, Cons(5, Cons(0, Cons(7, Cons(9, Cons(0, Cons(8, Cons(4, Cons(9, Cons(5, Cons(4, Cons(1, Cons(0, Cons(6, Cons(8, Cons(8, Cons(1, Cons(6, Cons(6, Cons(1, Cons(9, Cons(4, Cons(2, Cons(9, Cons(8, Cons(0, Cons(4, Cons(1, Cons(3, Cons(2, Cons(8, Cons(5, Cons(2, Cons(1, Cons(5, Cons(7, Cons(4, Cons(0, Cons(3, Cons(6, Cons(2, Cons(1, Cons(0, Cons(7, Cons(4, Cons(2, Cons(3, Cons(5, Cons(8, Cons(5, Cons(4, Cons(7, Cons(2, Cons(1, Cons(1, Cons(6, Cons(8, Cons(2, Cons(3, Cons(0, Cons(3, Cons(1, Cons(7, Cons(7, Cons(0, Cons(5, Cons(5, Cons(3, Cons(1, Cons(8, Cons(2, Cons(6, Cons(9, Cons(4, Cons(5, Cons(3, Cons(0, Cons(5, Cons(9, Cons(2, Cons(2, Cons(8, Cons(0, Cons(1, Cons(7, Cons(9, Cons(5, Cons(9, Cons(2, Cons(3, Cons(2, Cons(1, Cons(5, Cons(7, Cons(6, Cons(9, Cons(7, Cons(4, Cons(4, Cons(0, Cons(4, Cons(8, Cons(3, Cons(7, Cons(9, Cons(8, Cons(1, Cons(3, Cons(0, Cons(4, Cons(7, Cons(8, Cons(2, Cons(1, Cons(5, Cons(9, Cons(0, Cons(2, Cons(0, Cons(6, Cons(4, Cons(1, Cons(9, Cons(2, Cons(4, Cons(0, Cons(9, Cons(2, Cons(8, Cons(4, Cons(8, Cons(7, Cons(9, Cons(7, Cons(6, Cons(2, Cons(3, Cons(0, Cons(6, Cons(8, Cons(8, Cons(1, Cons(1, Cons(8, Cons(0, Cons(9, Cons(9, Cons(4, Cons(1, Cons(5, Cons(2, Cons(9, Cons(9, Cons(5, Cons(0, Cons(2, Cons(1, Cons(7, Cons(0, Cons(3, Cons(0, Cons(2, Cons(4, Cons(6, Cons(2, Cons(0, Cons(6, Cons(6, Cons(1, Cons(1, Cons(9, Cons(9, Cons(8, Cons(9, Cons(3, Cons(5, Cons(0, Cons(0, Cons(1, Cons(1, Cons(9, Cons(9, Cons(9, Cons(1, Cons(6, Cons(3, Cons(3, Cons(6, Cons(2, Cons(2, Cons(3, Cons(9, Cons(2, Cons(8, Cons(3, Cons(8, Cons(4, Cons(6, Cons(5, Cons(1, Cons(4, Cons(2, Cons(8, Cons(2, Cons(7, Cons(4, Cons(0, Cons(3, Cons(7, Cons(6, Cons(4, Cons(3, Cons(0, Cons(5, Cons(3, Cons(8, Cons(0, Cons(8, Cons(6, Cons(8, Cons(1, Cons(7, Cons(5, Cons(3, Cons(2, Cons(3, Cons(4, Cons(7, Cons(3, Cons(8, Cons(6, Cons(7, Cons(4, Cons(6, Cons(9, Cons(1, Cons(3, Cons(9, Cons(0, Cons(0, Cons(4, Cons(6, Cons(7, Cons(3, Cons(2, Cons(9, Cons(7, Cons(4, Cons(7, Cons(9, Cons(7, Cons(6, Cons(8, Cons(5, Cons(1, Cons(2, Cons(4, Cons(2, Cons(6, Cons(1, Cons(8, Cons(7, Cons(4, Cons(6, Cons(4, Cons(1, Cons(8, Cons(1, Cons(4, Cons(9, Cons(6, Cons(8, Cons(3, Cons(8, Cons(1, Cons(8, Cons(0, Cons(2, Cons(1, Cons(7, Cons(8, Cons(7, Cons(2, Cons(4, Cons(0, Cons(9, Cons(0, Cons(2, Cons(0, Cons(0, Cons(4, Cons(3, Cons(2, Cons(3, Cons(3, Cons(2, Cons(0, Cons(4, Cons(6, Cons(0, Cons(8, Cons(0, Cons(5, Cons(8, Cons(7, Cons(3, Cons(1, Cons(9, Cons(7, Cons(8, Cons(5, Cons(9, Cons(9, Cons(0, Cons(4, Cons(6, Cons(0, Cons(0, Cons(8, Cons(6, Cons(0, Cons(2, Cons(8, Cons(5, Cons(8, Cons(5, Cons(7, Cons(8, Cons(8, Cons(1, Cons(6, Cons(2, Cons(7, Cons(3, Cons(5, Cons(7, Cons(2, Cons(3, Cons(4, Cons(0, Cons(7, Cons(6, Cons(1, Cons(8, Cons(4, Cons(3, Cons(6, Cons(7, Cons(1, Cons(6, Cons(2, Cons(1, Cons(9, Cons(6, Cons(9, Cons(3, Cons(9, Cons(6, Cons(7, Cons(4, Cons(4, Cons(2, Cons(5, Cons(6, Cons(1, Cons(7, Cons(8, Cons(5, Cons(6, Cons(4, Cons(5, Cons(0, Cons(4, Cons(1, Cons(4, Cons(1, Cons(2, Cons(1, Cons(2, Cons(6, Cons(7, Cons(6, Cons(5, Cons(3, Cons(6, Cons(1, Cons(5, Cons(4, Cons(7, Cons(5, Cons(3, Cons(8, Cons(7, Cons(3, Cons(9, Cons(0, Cons(3, Cons(5, Cons(2, Cons(0, Cons(9, Cons(5, Cons(6, Cons(3, Cons(5, Cons(7, Cons(0, Cons(1, Cons(9, Cons(2, Cons(9, Cons(3, Cons(7, Cons(6, Cons(6, Cons(8, Cons(7, Cons(6, Cons(6, Cons(7, Cons(5, Cons(6, Cons(7, Cons(7, Cons(3, Cons(6, Cons(1, Cons(7, Cons(0, Cons(2, Cons(9, Cons(0, Cons(3, Cons(1, Cons(7, Cons(7, Cons(2, Cons(7, Cons(1, Cons(3, Cons(7, Cons(6, Cons(4, Cons(0, Cons(7, Cons(7, Cons(9, Cons(3, Cons(0, Cons(6, Cons(3, Cons(1, Cons(7, Cons(8, Cons(0, Cons(6, Cons(1, Cons(5, Cons(6, Cons(6, Cons(5, Cons(9, Cons(3, Cons(2, Cons(0, Cons(7, Cons(9, Cons(7, Cons(3, Cons(0, Cons(1, Cons(1, Cons(2, Cons(1, Cons(2, Cons(6, Cons(0, Cons(1, Cons(2, Cons(5, Cons(6, Cons(2, Cons(5, Cons(5, Cons(6, Cons(8, Cons(8, Cons(4, Cons(4, Cons(6, Cons(6, Cons(5, Cons(5, Cons(5, Cons(4, Cons(7, Cons(7, Cons(8, Cons(5, Cons(8, Cons(0, Cons(7, Cons(0, Cons(6, Cons(5, Cons(5, Cons(6, Cons(3, Cons(5, Cons(2, Cons(5, Cons(4, Cons(0, Cons(5, Cons(2, Cons(4, Cons(4, Cons(3, Cons(8, Cons(9, Cons(1, Cons(4, Cons(8, Cons(6, Cons(1, Cons(5, Cons(7, Cons(8, Cons(1, Cons(7, Cons(7, Cons(1, Cons(4, Cons(4, Cons(3, Cons(3, Cons(7, Cons(5, Cons(1, Cons(2, Cons(4, Cons(8, Cons(7, Cons(0, Cons(4, Cons(2, Cons(2, Cons(3, Cons(4, Cons(3, Cons(1, Cons(6, Cons(9, Cons(2, Cons(1, Cons(8, Cons(0, Cons(5, Cons(6, Cons(4, Cons(1, Cons(4, Cons(6, Cons(3, Cons(9, Cons(4, Cons(0, Cons(6, Cons(8, Cons(6, Cons(6, Cons(3, Cons(2, Cons(3, Cons(7, Cons(5, Cons(8, Cons(1, Cons(1, Cons(1, Cons(7, Cons(9, Cons(4, Cons(1, Cons(7, Cons(6, Cons(9, Cons(9, Cons(0, Cons(6, Cons(0, Cons(3, Cons(5, Cons(0, Cons(0, Cons(8, Cons(9, Cons(8, Cons(3, Cons(0, Cons(0, Cons(2, Cons(2, Cons(1, Cons(2, Cons(0, Cons(0, Cons(9, Cons(6, Cons(9, Cons(7, Cons(0, Cons(9, Cons(8, Cons(1, Cons(4, Cons(2, Cons(2, Cons(5, Cons(9, Cons(9, Cons(3, Cons(0, Cons(2, Cons(2, Cons(8, Cons(3, Cons(1, Cons(7, Cons(3, Cons(8, Cons(9, Cons(4, Cons(4, Cons(3, Cons(2, Cons(4, Cons(2, Cons(3, Cons(4, Cons(3, Cons(2, Cons(8, Cons(3, Cons(6, Cons(3, Cons(5, Cons(9, Cons(6, Cons(5, Cons(4, Cons(3, Cons(0, Cons(6, Cons(3, Cons(6, Cons(1, Cons(0, Cons(3, Cons(6, Cons(6, Cons(2, Cons(7, Cons(0, Cons(1, Cons(0, Cons(2, Cons(1, Cons(2, Cons(8, Cons(4, Cons(1, Cons(1, Cons(3, Cons(6, Cons(7, Cons(5, Cons(1, Cons(5, Cons(9, Cons(1, Cons(4, Cons(9, Cons(8, Cons(4, Cons(2, Cons(7, Cons(7, Cons(4, Cons(8, Cons(7, Cons(8, Cons(2, Cons(1, Cons(1, Cons(5, Cons(4, Cons(7, Cons(7, Cons(0, Cons(9, Cons(5, Cons(2, Cons(7, Cons(2, Cons(7, Cons(5, Cons(7, Cons(0, Cons(8, Cons(4, Cons(4, Cons(0, Cons(5, Cons(5, Cons(0, Cons(6, Cons(7, Cons(3, Cons(5, Cons(1, Cons(1, Cons(5, Cons(3, Cons(8, Cons(1, Cons(6, Cons(6, Cons(0, Cons(1, Cons(6, Cons(8, Cons(3, Cons(5, Cons(6, Cons(2, Cons(8, Cons(9, Cons(6, Cons(5, Cons(8, Cons(1, Cons(3, Cons(2, Cons(9, Cons(1, Cons(8, Cons(0, Cons(4, Cons(5, Cons(0, Cons(9, Cons(9, Cons(8, Cons(7, Cons(5, Cons(4, Cons(5, Cons(0, Cons(1, Cons(2, Cons(9, Cons(9, Cons(5, Cons(2, Cons(8, Cons(4, Cons(6, Cons(1, Cons(9, Cons(6, Cons(5, Cons(5, Cons(3, Cons(7, Cons(4, Cons(2, Cons(3, Cons(7, Cons(7, Cons(2, Cons(9, Cons(6, Cons(4, Cons(3, Cons(3, Cons(0, Cons(8, Cons(3, Cons(4, Cons(4, Cons(3, Cons(5, Cons(4, Cons(6, Cons(8, Cons(4, Cons(5, Cons(2, Cons(2, Cons(6, Cons(3, Cons(6, Cons(6, Cons(9, Cons(1, Cons(6, Cons(6, Cons(6, Cons(2, Cons(5, Cons(6, Cons(0, Cons(3, Cons(5, Cons(4, Cons(8, Cons(8, Cons(0, Cons(7, Cons(7, Cons(9, Cons(4, Cons(8, Cons(1, Cons(3, Cons(9, Cons(5, Cons(1, Cons(6, Cons(1, Cons(9, Cons(5, Cons(7, Cons(2, Cons(1, Cons(1, Cons(7, Cons(7, Cons(4, Cons(8, Cons(4, Cons(6, Cons(4, Cons(4, Cons(5, Cons(5, Cons(5, Cons(2, Cons(8, Cons(1, Cons(6, Cons(3, Cons(5, Cons(4, Cons(0, Cons(2, Cons(3, Cons(1, Cons(4, Cons(7, Cons(3, Cons(1, Cons(8, Cons(4, Cons(3, Cons(3, Cons(2, Cons(3, Cons(5, Cons(5, Cons(8, Cons(1, Cons(9, Cons(4, Cons(8, Cons(2, Cons(3, Cons(0, Cons(7, Cons(1, Cons(2, Cons(9, Cons(9, Cons(2, Cons(7, Cons(2, Cons(6, Cons(9, Cons(9, Cons(6, Cons(5, Cons(4, Cons(2, Cons(8, Cons(1, Cons(4, Cons(7, Cons(7, Cons(9, Cons(7, Cons(7, Cons(3, Cons(7, Cons(2, Cons(8, Cons(0, Cons(2, Cons(6, Cons(7, Cons(5, Cons(7, Cons(4, Cons(5, Cons(9, Cons(8, Cons(4, Cons(1, Cons(5, Cons(4, Cons(5, Cons(2, Cons(5, Cons(0, Cons(6, Cons(7, Cons(7, Cons(0, Cons(0, Cons(0, Cons(0, Cons(6, Cons(4, Cons(3, Cons(6, Cons(3, Cons(2, Cons(7, Cons(6, Cons(6, Cons(0, Cons(3, Cons(2, Cons(0, Cons(0, Cons(1, Cons(1, Cons(2, Cons(2, Cons(6, Cons(6, Cons(3, Cons(6, Cons(5, Cons(9, Cons(5, Cons(9, Cons(6, Cons(4, Cons(5, Cons(0, Cons(8, Cons(5, Cons(3, Cons(3, Cons(1, Cons(4, Cons(4, Cons(9, Cons(3, Cons(2, Cons(2, Cons(7, Cons(7, Cons(0, Cons(2, Cons(6, Cons(7, Cons(2, Cons(9, Cons(9, Cons(9, Cons(1, Cons(6, Cons(1, Cons(9, Cons(7, Cons(7, Cons(6, Cons(8, Cons(1, Cons(3, Cons(7, Cons(3, Cons(6, Cons(1, Cons(9, Cons(3, Cons(5, Cons(9, Cons(7, Cons(1, Cons(1, Cons(2, Cons(5, Cons(8, Cons(3, Cons(6, Cons(6, Cons(1, Cons(4, Cons(0, Cons(1, Cons(0, Cons(8, Cons(3, Cons(7, Cons(3, Cons(5, Cons(2, Cons(1, Cons(6, Cons(2, Cons(3, Cons(4, Cons(0, Cons(1, Cons(8, Cons(3, Cons(8, Cons(8, Cons(5, Cons(6, Cons(9, Cons(5, Cons(6, Cons(8, Cons(5, Cons(1, Cons(8, Cons(7, Cons(2, Cons(2, Cons(7, Cons(8, Cons(7, Cons(0, Cons(7, Cons(3, Cons(7, Cons(2, Cons(0, Cons(5, Cons(5, Cons(3, Cons(0, Cons(6, Cons(7, Cons(1, Cons(0, Cons(3, Cons(6, Cons(2, Cons(6, Cons(8, Cons(2, Cons(1, Cons(5, Cons(7, Cons(8, Cons(7, Cons(1, Cons(8, Cons(5, Cons(6, Cons(5, Cons(6, Cons(8, Cons(5, Cons(2, Cons(4, Cons(2, Cons(5, Cons(5, Cons(9, Cons(7, Cons(7, Cons(3, Cons(8, Cons(9, Cons(2, Cons(0, Cons(2, Cons(5, Cons(9, Cons(8, Cons(6, Cons(5, Cons(2, Cons(8, Cons(9, Cons(1, Cons(9, Cons(5, Cons(4, Cons(5, Cons(2, Cons(2, Cons(8, Cons(9, Cons(0, Cons(2, Cons(7, Cons(1, Cons(0, Cons(6, Cons(0, Cons(1, Cons(5, Cons(7, Cons(4, Cons(7, Cons(8, Cons(0, Cons(2, Cons(8, Cons(7, Cons(0, Cons(0, Cons(8, Cons(6, Cons(5, Cons(5, Cons(3, Cons(0, Cons(3, Cons(9, Cons(6, Cons(2, Cons(3, Cons(9, Cons(0, Cons(4, Cons(8, Cons(3, Cons(2, Cons(6, Cons(1, Cons(9, Cons(8, Cons(1, Cons(4, Cons(2, Cons(2, Cons(9, Cons(6, Cons(4, Cons(3, Cons(3, Cons(7, Cons(3, Cons(1, Cons(3, Cons(9, Cons(6, Cons(1, Cons(7, Cons(0, Cons(3, Cons(9, Cons(9, Cons(9, Cons(5, Cons(3, Cons(1, Cons(6, Cons(6, Cons(7, Cons(8, Cons(2, Cons(2, Cons(0, Cons(3, Cons(6, Cons(3, Cons(1, Cons(9, Cons(1, Cons(6, Cons(9, Cons(8, Cons(2, Cons(5, Cons(7, Cons(1, Cons(1, Cons(7, Cons(4, Cons(0, Cons(4, Cons(1, Cons(5, Cons(0, Cons(2, Cons(6, Cons(9, Cons(7, Cons(6, Cons(0, Cons(7, Cons(6, Cons(1, Cons(7, Cons(7, Cons(2, Cons(0, Cons(4, Cons(5, Cons(0, Cons(4, Cons(1, Cons(1, Cons(2, Cons(7, Cons(4, Cons(0, Cons(7, Cons(6, Cons(1, Cons(4, Cons(8, Cons(9, Cons(3, Cons(3, Cons(2, Cons(2, Cons(6, Cons(0, Cons(5, Cons(9, Cons(3, Cons(2, Cons(7, Cons(2, Cons(8, Cons(7, Cons(9, Cons(8, Cons(6, Cons(7, Cons(5, Cons(8, Cons(3, Cons(1, Cons(6, Cons(7, Cons(4, Cons(3, Cons(9, Cons(4, Cons(7, Cons(2, Cons(8, Cons(1, Cons(7, Cons(0, Cons(9, Cons(2, Cons(9, Cons(7, Cons(4, Cons(0, Cons(3, Cons(3, Cons(2, Cons(4, Cons(4, Cons(6, Cons(6, Cons(7, Cons(1, Cons(6, Cons(4, Cons(7, Cons(2, Cons(3, Cons(1, Cons(4, Cons(8, Cons(5, Cons(2, Cons(5, Cons(1, Cons(0, Cons(8, Cons(7, Cons(1, Cons(4, Cons(3, Cons(4, Cons(5, Cons(2, Cons(1, Cons(9, Cons(4, Cons(2, Cons(9, Cons(8, Cons(1, Cons(1, Cons(5, Cons(0, Cons(5, Cons(8, Cons(2, Cons(4, Cons(9, Cons(7, Cons(9, Cons(8, Cons(9, Cons(0, Cons(8, Cons(6, Cons(4, Cons(5, Cons(7, Cons(7, Cons(3, Cons(8, Cons(4, Cons(8, Cons(2, Cons(8, Cons(3, Cons(9, Cons(8, Cons(0, Cons(0, Cons(6, Cons(8, Cons(5, Cons(8, Cons(0, Cons(7, Cons(8, Cons(2, Cons(8, Cons(7, Cons(5, Cons(8, Cons(9, Cons(1, Cons(1, Cons(8, Cons(6, Cons(4, Cons(3, Cons(0, Cons(8, Cons(3, Cons(2, Cons(4, Cons(7, Cons(6, Cons(3, Cons(3, Cons(1, Cons(4, Cons(3, Cons(2, Cons(1, Cons(1, Cons(2, Cons(8, Cons(6, Cons(1, Cons(1, Cons(5, Cons(0, Cons(4, Cons(3, Cons(6, Cons(8, Cons(8, Cons(3, Cons(0, Cons(0, Cons(4, Cons(0, Cons(7, Cons(8, Cons(8, Cons(3, Cons(4, Cons(1, Cons(4, Cons(1, Cons(8, Cons(2, Cons(7, Cons(7, Cons(9, Cons(3, Cons(1, Cons(8, Cons(3, Cons(7, Cons(2, Cons(8, Cons(2, Cons(8, Cons(1, Cons(4, Cons(5, Cons(5, Cons(5, Cons(2, Cons(8, Cons(3, Cons(7, Cons(9, Cons(0, Cons(2, Cons(7, Cons(2, Cons(0, Cons(4, Cons(0, Cons(6, Cons(1, Cons(3, Cons(7, Cons(0, Cons(8, Cons(9, Cons(4, Cons(2, Cons(5, Cons(6, Cons(1, Cons(4, Cons(0, Cons(9, Cons(6, Cons(6, Cons(9, Cons(3, Cons(9, Cons(1, Cons(6, Cons(8, Cons(7, Cons(6, Cons(6, Cons(5, Cons(4, Cons(4, Cons(0, Cons(9, Cons(7, Cons(6, Cons(2, Cons(3, Cons(2, Cons(7, Cons(7, Cons(9, Cons(2, Cons(8, Cons(6, Cons(8, Cons(2, Cons(0, Cons(2, Cons(9, Cons(9, Cons(0, Cons(5, Cons(5, Cons(8, Cons(0, Cons(9, Cons(7, Cons(4, Cons(6, Cons(0, Cons(9, Cons(9, Cons(5, Cons(8, Cons(3, Cons(0, Cons(0, Cons(4, Cons(0, Cons(0, Cons(9, Cons(9, Cons(7, Cons(4, Cons(9, Cons(0, Cons(5, Cons(1, Cons(3, Cons(5, Cons(3, Cons(6, Cons(8, Cons(9, Cons(0, Cons(9, Cons(8, Cons(7, Cons(3, Cons(6, Cons(5, Cons(2, Cons(8, Cons(3, Cons(8, Cons(4, Cons(8, Cons(9, Cons(7, Cons(5, Cons(3, Cons(2, Cons(3, Cons(2, Cons(1, Cons(5, Cons(2, Cons(6, Cons(9, Cons(8, Cons(2, Cons(0, Cons(2, Cons(1, Cons(0, Cons(3, Cons(8, Cons(5, Cons(2, Cons(2, Cons(6, Cons(7, Cons(8, Cons(8, Cons(5, Cons(2, Cons(0, Cons(4, Cons(6, Cons(6, Cons(9, Cons(5, Cons(7, Cons(4, Cons(0, Cons(3, Cons(1, Cons(7, Cons(5, Cons(3, Cons(6, Cons(3, Cons(0, Cons(9, Cons(5, Cons(5, Cons(5, Cons(9, Cons(9, Cons(3, Cons(4, Cons(9, Cons(1, Cons(6, Cons(7, Cons(3, Cons(9, Cons(2, Cons(4, Cons(0, Cons(2, Cons(5, Cons(8, Cons(4, Cons(5, Cons(3, Cons(9, Cons(6, Cons(6, Cons(1, Cons(5, Cons(0, Cons(6, Cons(4, Cons(4, Cons(6, Cons(2, Cons(6, Cons(8, Cons(2, Cons(2, Cons(0, Cons(7, Cons(7, Cons(7, Cons(6, Cons(0, Cons(1, Cons(9, Cons(6, Cons(7, Cons(6, Cons(1, Cons(0, Cons(8, Cons(3, Cons(1, Cons(1, Cons(6, Cons(2, Cons(0, Cons(9, Cons(1, Cons(0, Cons(0, Cons(2, Cons(3, Cons(4, Cons(7, Cons(6, Cons(9, Cons(0, Cons(4, Cons(8, Cons(1, Cons(0, Cons(0, Cons(8, Cons(2, Cons(4, Cons(1, Cons(2, Cons(1, Cons(2, Cons(5, Cons(3, Cons(9, Cons(1, Cons(6, Cons(7, Cons(7, Cons(4, Cons(9, Cons(1, Cons(4, Cons(0, Cons(7, Cons(3, Cons(3, Cons(0, Cons(8, Cons(3, Cons(4, Cons(0, Cons(0, Cons(1, Cons(1, Cons(9, Cons(4, Cons(8, Cons(8, Cons(3, Cons(2, Cons(2, Cons(5, Cons(3, Cons(9, Cons(8, Cons(9, Cons(5, Cons(3, Cons(9, Cons(5, Cons(1, Cons(2, Cons(5, Cons(4, Cons(9, Cons(5, Cons(0, Cons(8, Cons(4, Cons(8, Cons(4, Cons(6, Cons(1, Cons(8, Cons(0, Cons(9, Cons(0, Cons(6, Cons(1, Cons(2, Cons(7, Cons(0, Cons(7, Cons(2, Cons(8, Cons(6, Cons(3, Cons(7, Cons(0, Cons(5, Cons(5, Cons(4, Cons(8, Cons(4, Cons(8, Cons(7, Cons(7, Cons(0, Cons(3, Cons(7, Cons(2, Cons(2, Cons(3, Cons(5, Cons(2, Cons(1, Cons(7, Cons(3, Cons(6, Cons(0, Cons(8, Cons(4, Cons(2, Cons(6, Cons(6, Cons(4, Cons(4, Cons(4, Cons(1, Cons(7, Cons(0, Cons(9, Cons(3, Cons(5, Cons(5, Cons(1, Cons(0, Cons(4, Cons(7, Cons(9, Cons(1, Cons(9, Cons(4, Cons(3, Cons(4, Cons(3, Cons(4, Cons(3, Cons(9, Cons(4, Cons(2, Cons(7, Cons(3, Cons(2, Cons(2, Cons(9, Cons(7, Cons(4, Cons(5, Cons(8, Cons(2, Cons(4, Cons(4, Cons(4, Cons(3, Cons(4, Cons(4, Cons(3, Cons(0, Cons(4, Cons(5, Cons(3, Cons(4, Cons(6, Cons(9, Nil
println("1900 " + sorttimerec(ls1900))
val ls2000: List = Cons(7, Cons(3, Cons(2, Cons(1, Cons(7, Cons(6, Cons(1, Cons(2, Cons(1, Cons(0, Cons(4, Cons(1, Cons(5, Cons(2, Cons(8, Cons(0, Cons(8, Cons(7, Cons(0, Cons(8, Cons(6, Cons(3, Cons(7, Cons(4, Cons(2, Cons(6, Cons(3, Cons(8, Cons(0, Cons(2, Cons(0, Cons(8, Cons(5, Cons(7, Cons(7, Cons(1, Cons(0, Cons(1, Cons(6, Cons(2, Cons(3, Cons(8, Cons(9, Cons(1, Cons(8, Cons(1, Cons(1, Cons(5, Cons(1, Cons(3, Cons(5, Cons(1, Cons(4, Cons(5, Cons(1, Cons(4, Cons(9, Cons(4, Cons(7, Cons(7, Cons(3, Cons(3, Cons(4, Cons(6, Cons(9, Cons(9, Cons(0, Cons(3, Cons(1, Cons(4, Cons(2, Cons(5, Cons(6, Cons(9, Cons(1, Cons(6, Cons(8, Cons(0, Cons(3, Cons(5, Cons(8, Cons(9, Cons(3, Cons(1, Cons(2, Cons(9, Cons(3, Cons(1, Cons(6, Cons(2, Cons(0, Cons(2, Cons(8, Cons(3, Cons(7, Cons(8, Cons(0, Cons(7, Cons(6, Cons(2, Cons(4, Cons(8, Cons(0, Cons(2, Cons(8, Cons(2, Cons(1, Cons(6, Cons(9, Cons(6, Cons(6, Cons(1, Cons(4, Cons(7, Cons(2, Cons(0, Cons(9, Cons(1, Cons(9, Cons(3, Cons(9, Cons(6, Cons(2, Cons(6, Cons(6, Cons(9, Cons(7, Cons(7, Cons(2, Cons(7, Cons(6, Cons(7, Cons(0, Cons(3, Cons(2, Cons(9, Cons(7, Cons(3, Cons(8, Cons(2, Cons(7, Cons(6, Cons(2, Cons(5, Cons(7, Cons(0, Cons(7, Cons(0, Cons(3, Cons(6, Cons(6, Cons(1, Cons(5, Cons(3, Cons(1, Cons(6, Cons(8, Cons(6, Cons(6, Cons(3, Cons(7, Cons(7, Cons(8, Cons(7, Cons(9, Cons(1, Cons(1, Cons(4, Cons(4, Cons(9, Cons(2, Cons(6, Cons(2, Cons(3, Cons(5, Cons(9, Cons(8, Cons(4, Cons(5, Cons(0, Cons(7, Cons(9, Cons(2, Cons(9, Cons(8, Cons(0, Cons(4, Cons(2, Cons(7, Cons(2, Cons(6, Cons(2, Cons(9, Cons(7, Cons(6, Cons(4, Cons(4, Cons(2, Cons(9, Cons(0, Cons(5, Cons(3, Cons(0, Cons(5, Cons(0, Cons(2, Cons(1, Cons(9, Cons(5, Cons(1, Cons(3, Cons(9, Cons(8, Cons(5, Cons(9, Cons(0, Cons(0, Cons(5, Cons(6, Cons(8, Cons(9, Cons(6, Cons(5, Cons(4, Cons(8, Cons(2, Cons(8, Cons(5, Cons(4, Cons(7, Cons(4, Cons(8, Cons(8, Cons(7, Cons(7, Cons(6, Cons(0, Cons(6, Cons(0, Cons(0, Cons(1, Cons(9, Cons(7, Cons(4, Cons(7, Cons(0, Cons(9, Cons(8, Cons(7, Cons(7, Cons(0, Cons(9, Cons(7, Cons(8, Cons(1, Cons(6, Cons(9, Cons(2, Cons(4, Cons(1, Cons(0, Cons(1, Cons(5, Cons(7, Cons(5, Cons(4, Cons(7, Cons(3, Cons(1, Cons(8, Cons(2, Cons(3, Cons(9, Cons(2, Cons(0, Cons(9, Cons(7, Cons(1, Cons(2, Cons(2, Cons(3, Cons(6, Cons(5, Cons(2, Cons(1, Cons(6, Cons(6, Cons(8, Cons(3, Cons(0, Cons(0, Cons(3, Cons(4, Cons(2, Cons(2, Cons(9, Cons(4, Cons(4, Cons(9, Cons(2, Cons(0, Cons(0, Cons(4, Cons(5, Cons(7, Cons(5, Cons(3, Cons(0, Cons(7, Cons(1, Cons(0, Cons(6, Cons(8, Cons(5, Cons(9, Cons(7, Cons(6, Cons(8, Cons(5, Cons(9, Cons(7, Cons(2, Cons(7, Cons(6, Cons(6, Cons(0, Cons(9, Cons(8, Cons(6, Cons(8, Cons(1, Cons(8, Cons(6, Cons(4, Cons(9, Cons(3, Cons(3, Cons(4, Cons(3, Cons(9, Cons(6, Cons(4, Cons(0, Cons(6, Cons(4, Cons(3, Cons(2, Cons(6, Cons(6, Cons(7, Cons(1, Cons(4, Cons(2, Cons(9, Cons(8, Cons(5, Cons(3, Cons(0, Cons(3, Cons(0, Cons(4, Cons(4, Cons(0, Cons(8, Cons(4, Cons(0, Cons(6, Cons(7, Cons(2, Cons(7, Cons(8, Cons(5, Cons(9, Cons(2, Cons(5, Cons(6, Cons(5, Cons(3, Cons(8, Cons(3, Cons(0, Cons(9, Cons(5, Cons(9, Cons(9, Cons(2, Cons(6, Cons(7, Cons(0, Cons(8, Cons(5, Cons(0, Cons(3, Cons(5, Cons(4, Cons(3, Cons(0, Cons(8, Cons(0, Cons(5, Cons(7, Cons(9, Cons(4, Cons(1, Cons(8, Cons(6, Cons(0, Cons(9, Cons(8, Cons(1, Cons(9, Cons(8, Cons(8, Cons(5, Cons(2, Cons(6, Cons(1, Cons(5, Cons(2, Cons(4, Cons(4, Cons(9, Cons(2, Cons(7, Cons(1, Cons(1, Cons(3, Cons(9, Cons(7, Cons(4, Cons(6, Cons(2, Cons(3, Cons(7, Cons(1, Cons(0, Cons(2, Cons(0, Cons(7, Cons(1, Cons(0, Cons(0, Cons(8, Cons(0, Cons(6, Cons(6, Cons(7, Cons(5, Cons(3, Cons(6, Cons(3, Cons(7, Cons(3, Cons(0, Cons(0, Cons(9, Cons(4, Cons(6, Cons(4, Cons(2, Cons(6, Cons(4, Cons(9, Cons(4, Cons(2, Cons(3, Cons(0, Cons(3, Cons(9, Cons(4, Cons(9, Cons(0, Cons(7, Cons(4, Cons(3, Cons(3, Cons(6, Cons(7, Cons(3, Cons(1, Cons(5, Cons(1, Cons(3, Cons(8, Cons(7, Cons(4, Cons(0, Cons(5, Cons(7, Cons(3, Cons(3, Cons(2, Cons(5, Cons(9, Cons(9, Cons(9, Cons(5, Cons(9, Cons(4, Cons(7, Cons(8, Cons(6, Cons(1, Cons(8, Cons(5, Cons(5, Cons(9, Cons(2, Cons(6, Cons(5, Cons(0, Cons(2, Cons(0, Cons(6, Cons(4, Cons(5, Cons(8, Cons(2, Cons(7, Cons(7, Cons(7, Cons(0, Cons(6, Cons(9, Cons(0, Cons(7, Cons(3, Cons(6, Cons(4, Cons(0, Cons(6, Cons(3, Cons(9, Cons(4, Cons(3, Cons(3, Cons(7, Cons(9, Cons(2, Cons(6, Cons(5, Cons(0, Cons(4, Cons(8, Cons(9, Cons(3, Cons(7, Cons(1, Cons(5, Cons(1, Cons(8, Cons(2, Cons(7, Cons(6, Cons(3, Cons(9, Cons(9, Cons(3, Cons(8, Cons(0, Cons(4, Cons(7, Cons(2, Cons(7, Cons(9, Cons(6, Cons(4, Cons(3, Cons(3, Cons(0, Cons(6, Cons(5, Cons(5, Cons(9, Cons(7, Cons(4, Cons(0, Cons(3, Cons(5, Cons(5, Cons(9, Cons(8, Cons(2, Cons(3, Cons(9, Cons(1, Cons(9, Cons(2, Cons(5, Cons(0, Cons(2, Cons(8, Cons(5, Cons(4, Cons(6, Cons(7, Cons(5, Cons(0, Cons(8, Cons(9, Cons(3, Cons(1, Cons(0, Cons(3, Cons(3, Cons(3, Cons(3, Cons(4, Cons(3, Cons(7, Cons(9, Cons(1, Cons(6, Cons(6, Cons(9, Cons(8, Cons(6, Cons(7, Cons(7, Cons(0, Cons(4, Cons(8, Cons(4, Cons(8, Cons(4, Cons(6, Cons(9, Cons(4, Cons(0, Cons(5, Cons(0, Cons(7, Cons(7, Cons(6, Cons(6, Cons(8, Cons(4, Cons(3, Cons(5, Cons(5, Cons(0, Cons(0, Cons(2, Cons(8, Cons(4, Cons(3, Cons(4, Cons(9, Cons(8, Cons(7, Cons(6, Cons(4, Cons(6, Cons(7, Cons(0, Cons(7, Cons(9, Cons(1, Cons(2, Cons(3, Cons(8, Cons(9, Cons(7, Cons(7, Cons(1, Cons(6, Cons(1, Cons(3, Cons(9, Cons(1, Cons(9, Cons(1, Cons(1, Cons(8, Cons(4, Cons(6, Cons(6, Cons(3, Cons(8, Cons(2, Cons(0, Cons(9, Cons(9, Cons(1, Cons(2, Cons(1, Cons(5, Cons(1, Cons(9, Cons(7, Cons(4, Cons(0, Cons(0, Cons(9, Cons(7, Cons(0, Cons(7, Cons(1, Cons(2, Cons(9, Cons(1, Cons(0, Cons(6, Cons(7, Cons(1, Cons(1, Cons(5, Cons(3, Cons(1, Cons(6, Cons(4, Cons(3, Cons(2, Cons(3, Cons(3, Cons(3, Cons(2, Cons(9, Cons(3, Cons(6, Cons(2, Cons(9, Cons(9, Cons(3, Cons(8, Cons(0, Cons(0, Cons(9, Cons(3, Cons(9, Cons(1, Cons(2, Cons(9, Cons(5, Cons(4, Cons(6, Cons(7, Cons(3, Cons(9, Cons(8, Cons(1, Cons(0, Cons(0, Cons(9, Cons(8, Cons(0, Cons(4, Cons(5, Cons(3, Cons(3, Cons(0, Cons(7, Cons(1, Cons(9, Cons(6, Cons(2, Cons(7, Cons(5, Cons(8, Cons(7, Cons(1, Cons(5, Cons(5, Cons(3, Cons(2, Cons(5, Cons(1, Cons(6, Cons(2, Cons(9, Cons(3, Cons(2, Cons(7, Cons(4, Cons(9, Cons(7, Cons(9, Cons(5, Cons(2, Cons(6, Cons(4, Cons(0, Cons(0, Cons(1, Cons(3, Cons(8, Cons(8, Cons(5, Cons(3, Cons(2, Cons(7, Cons(4, Cons(0, Cons(5, Cons(0, Cons(6, Cons(6, Cons(4, Cons(9, Cons(0, Cons(6, Cons(3, Cons(9, Cons(7, Cons(9, Cons(0, Cons(5, Cons(3, Cons(8, Cons(9, Cons(4, Cons(6, Cons(3, Cons(2, Cons(8, Cons(8, Cons(7, Cons(8, Cons(8, Cons(6, Cons(1, Cons(9, Cons(0, Cons(2, Cons(5, Cons(9, Cons(5, Cons(1, Cons(8, Cons(0, Cons(5, Cons(4, Cons(0, Cons(5, Cons(8, Cons(5, Cons(2, Cons(4, Cons(7, Cons(2, Cons(4, Cons(9, Cons(8, Cons(4, Cons(1, Cons(5, Cons(7, Cons(2, Cons(8, Cons(4, Cons(6, Cons(5, Cons(1, Cons(1, Cons(0, Cons(8, Cons(8, Cons(6, Cons(9, Cons(5, Cons(4, Cons(0, Cons(5, Cons(7, Cons(9, Cons(7, Cons(8, Cons(7, Cons(9, Cons(6, Cons(5, Cons(9, Cons(2, Cons(0, Cons(5, Cons(9, Cons(6, Cons(1, Cons(9, Cons(0, Cons(2, Cons(3, Cons(2, Cons(5, Cons(7, Cons(4, Cons(6, Cons(9, Cons(3, Cons(1, Cons(1, Cons(0, Cons(7, Cons(6, Cons(9, Cons(2, Cons(3, Cons(8, Cons(1, Cons(6, Cons(7, Cons(5, Cons(2, Cons(0, Cons(3, Cons(6, Cons(0, Cons(0, Cons(9, Cons(2, Cons(7, Cons(6, Cons(7, Cons(1, Cons(7, Cons(9, Cons(8, Cons(4, Cons(0, Cons(1, Cons(5, Cons(4, Cons(9, Cons(3, Cons(2, Cons(2, Cons(0, Cons(6, Cons(8, Cons(1, Cons(9, Cons(3, Cons(2, Cons(8, Cons(6, Cons(5, Cons(5, Cons(8, Cons(0, Cons(7, Cons(2, Cons(8, Cons(8, Cons(0, Cons(2, Cons(8, Cons(8, Cons(9, Cons(5, Cons(3, Cons(7, Cons(3, Cons(5, Cons(9, Cons(7, Cons(6, Cons(4, Cons(7, Cons(7, Cons(1, Cons(8, Cons(5, Cons(8, Cons(6, Cons(4, Cons(3, Cons(4, Cons(4, Cons(1, Cons(4, Cons(2, Cons(0, Cons(7, Cons(5, Cons(7, Cons(0, Cons(0, Cons(3, Cons(6, Cons(8, Cons(3, Cons(8, Cons(2, Cons(4, Cons(9, Cons(2, Cons(7, Cons(2, Cons(3, Cons(1, Cons(3, Cons(4, Cons(4, Cons(7, Cons(4, Cons(6, Cons(1, Cons(8, Cons(5, Cons(1, Cons(0, Cons(1, Cons(4, Cons(6, Cons(4, Cons(8, Cons(7, Cons(0, Cons(5, Cons(0, Cons(1, Cons(9, Cons(1, Cons(4, Cons(7, Cons(8, Cons(1, Cons(2, Cons(4, Cons(3, Cons(2, Cons(2, Cons(1, Cons(9, Cons(1, Cons(6, Cons(8, Cons(7, Cons(5, Cons(9, Cons(0, Cons(4, Cons(4, Cons(5, Cons(2, Cons(4, Cons(6, Cons(5, Cons(7, Cons(3, Cons(0, Cons(1, Cons(2, Cons(3, Cons(4, Cons(2, Cons(0, Cons(9, Cons(0, Cons(5, Cons(7, Cons(1, Cons(9, Cons(2, Cons(0, Cons(6, Cons(9, Cons(7, Cons(4, Cons(3, Cons(1, Cons(4, Cons(5, Cons(4, Cons(6, Cons(0, Cons(4, Cons(7, Cons(0, Cons(5, Cons(1, Cons(5, Cons(6, Cons(8, Cons(4, Cons(4, Cons(2, Cons(3, Cons(2, Cons(6, Cons(9, Cons(5, Cons(1, Cons(4, Cons(1, Cons(8, Cons(0, Cons(6, Cons(8, Cons(6, Cons(8, Cons(6, Cons(5, Cons(7, Cons(2, Cons(9, Cons(4, Cons(2, Cons(3, Cons(0, Cons(0, Cons(0, Cons(8, Cons(7, Cons(7, Cons(3, Cons(4, Cons(5, Cons(9, Cons(9, Cons(7, Cons(9, Cons(9, Cons(4, Cons(6, Cons(3, Cons(1, Cons(4, Cons(8, Cons(3, Cons(2, Cons(6, Cons(8, Cons(1, Cons(2, Cons(4, Cons(4, Cons(5, Cons(4, Cons(0, Cons(2, Cons(9, Cons(5, Cons(5, Cons(6, Cons(6, Cons(7, Cons(1, Cons(9, Cons(9, Cons(5, Cons(0, Cons(9, Cons(5, Cons(5, Cons(2, Cons(5, Cons(8, Cons(3, Cons(5, Cons(7, Cons(0, Cons(6, Cons(8, Cons(6, Cons(7, Cons(1, Cons(2, Cons(9, Cons(1, Cons(4, Cons(8, Cons(9, Cons(2, Cons(7, Cons(7, Cons(2, Cons(8, Cons(9, Cons(7, Cons(6, Cons(8, Cons(6, Cons(7, Cons(9, Cons(1, Cons(4, Cons(9, Cons(5, Cons(4, Cons(3, Cons(0, Cons(3, Cons(4, Cons(1, Cons(6, Cons(8, Cons(7, Cons(2, Cons(7, Cons(7, Cons(9, Cons(6, Cons(2, Cons(4, Cons(0, Cons(4, Cons(8, Cons(6, Cons(3, Cons(8, Cons(6, Cons(4, Cons(6, Cons(1, Cons(8, Cons(7, Cons(9, Cons(1, Cons(3, Cons(0, Cons(7, Cons(1, Cons(0, Cons(3, Cons(9, Cons(2, Cons(9, Cons(4, Cons(1, Cons(5, Cons(3, Cons(8, Cons(8, Cons(1, Cons(3, Cons(0, Cons(3, Cons(6, Cons(5, Cons(5, Cons(4, Cons(8, Cons(8, Cons(0, Cons(9, Cons(8, Cons(4, Cons(4, Cons(3, Cons(4, Cons(4, Cons(7, Cons(7, Cons(5, Cons(6, Cons(5, Cons(1, Cons(4, Cons(3, Cons(0, Cons(0, Cons(3, Cons(4, Cons(4, Cons(7, Cons(2, Cons(8, Cons(8, Cons(2, Cons(0, Cons(7, Cons(8, Cons(1, Cons(4, Cons(4, Cons(8, Cons(3, Cons(4, Cons(3, Cons(7, Cons(9, Cons(0, Cons(7, Cons(6, Cons(8, Cons(8, Cons(4, Cons(6, Cons(1, Cons(6, Cons(0, Cons(9, Cons(8, Cons(5, Cons(2, Cons(0, Cons(8, Cons(4, Cons(4, Cons(3, Cons(6, Cons(1, Cons(5, Cons(7, Cons(1, Cons(9, Cons(8, Cons(7, Cons(1, Cons(2, Cons(4, Cons(3, Cons(2, Cons(3, Cons(7, Cons(7, Cons(6, Cons(6, Cons(9, Cons(1, Cons(8, Cons(4, Cons(9, Cons(4, Cons(9, Cons(7, Cons(4, Cons(0, Cons(9, Cons(3, Cons(6, Cons(7, Cons(0, Cons(9, Cons(0, Cons(8, Cons(7, Cons(5, Cons(0, Cons(4, Cons(0, Cons(9, Cons(8, Cons(7, Cons(7, Cons(3, Cons(8, Cons(4, Cons(0, Cons(4, Cons(8, Cons(5, Cons(1, Cons(2, Cons(7, Cons(6, Cons(8, Cons(5, Cons(6, Cons(1, Cons(5, Cons(5, Cons(4, Cons(8, Cons(5, Cons(7, Cons(7, Cons(4, Cons(8, Cons(0, Cons(4, Cons(1, Cons(4, Cons(1, Cons(9, Cons(6, Cons(8, Cons(4, Cons(4, Cons(3, Cons(9, Cons(3, Cons(2, Cons(9, Cons(5, Cons(8, Cons(2, Cons(6, Cons(8, Cons(3, Cons(4, Cons(1, Cons(6, Cons(5, Cons(4, Cons(1, Cons(8, Cons(1, Cons(5, Cons(3, Cons(1, Cons(6, Cons(3, Cons(0, Cons(8, Cons(6, Cons(0, Cons(4, Cons(1, Cons(3, Cons(2, Cons(8, Cons(9, Cons(1, Cons(9, Cons(0, Cons(1, Cons(2, Cons(1, Cons(9, Cons(3, Cons(4, Cons(6, Cons(3, Cons(6, Cons(8, Cons(0, Cons(0, Cons(5, Cons(5, Cons(2, Cons(0, Cons(4, Cons(6, Cons(4, Cons(9, Cons(6, Cons(4, Cons(8, Cons(6, Cons(4, Cons(1, Cons(7, Cons(6, Cons(1, Cons(5, Cons(9, Cons(1, Cons(5, Cons(4, Cons(5, Cons(4, Cons(5, Cons(8, Cons(4, Cons(2, Cons(0, Cons(6, Cons(0, Cons(6, Cons(9, Cons(8, Cons(2, Cons(4, Cons(2, Cons(1, Cons(9, Cons(6, Cons(1, Cons(7, Cons(5, Cons(6, Cons(3, Cons(3, Cons(2, Cons(9, Cons(1, Cons(5, Cons(2, Cons(0, Cons(2, Cons(8, Cons(5, Cons(9, Cons(6, Cons(0, Cons(5, Cons(8, Cons(4, Cons(8, Cons(0, Cons(2, Cons(9, Cons(8, Cons(0, Cons(4, Cons(7, Cons(5, Cons(4, Cons(5, Cons(0, Cons(2, Cons(0, Cons(8, Cons(1, Cons(2, Cons(3, Cons(8, Cons(2, Cons(4, Cons(5, Cons(0, Cons(3, Cons(9, Cons(1, Cons(8, Cons(0, Cons(6, Cons(8, Cons(2, Cons(8, Cons(2, Cons(7, Cons(6, Cons(2, Cons(4, Cons(9, Cons(6, Cons(1, Cons(4, Cons(5, Cons(7, Cons(0, Cons(2, Cons(8, Cons(3, Cons(1, Cons(0, Cons(5, Cons(0, Cons(7, Cons(0, Cons(8, Cons(0, Cons(9, Cons(3, Cons(5, Cons(9, Cons(9, Cons(6, Cons(8, Cons(2, Cons(3, Cons(8, Cons(6, Cons(4, Cons(7, Cons(5, Cons(6, Cons(4, Cons(7, Cons(2, Cons(4, Cons(4, Cons(5, Cons(1, Cons(0, Cons(9, Cons(1, Cons(2, Cons(1, Cons(1, Cons(7, Cons(4, Cons(8, Cons(8, Cons(4, Cons(5, Cons(3, Cons(7, Cons(0, Cons(6, Cons(4, Cons(3, Cons(3, Cons(2, Cons(0, Cons(5, Cons(0, Cons(6, Cons(1, Cons(2, Cons(2, Cons(8, Cons(1, Cons(5, Cons(8, Cons(7, Cons(0, Cons(2, Cons(4, Cons(6, Cons(3, Cons(0, Cons(4, Cons(9, Cons(4, Cons(2, Cons(1, Cons(8, Cons(7, Cons(5, Cons(9, Cons(2, Cons(9, Cons(5, Cons(7, Cons(1, Cons(8, Cons(5, Cons(2, Cons(6, Cons(9, Cons(1, Cons(5, Cons(4, Cons(2, Cons(5, Cons(0, Cons(6, Cons(2, Cons(7, Cons(9, Cons(5, Cons(8, Cons(2, Cons(6, Cons(8, Cons(9, Cons(0, Cons(9, Cons(7, Cons(9, Cons(6, Cons(5, Cons(5, Cons(1, Cons(5, Cons(1, Cons(6, Cons(3, Cons(3, Cons(0, Cons(0, Cons(9, Cons(0, Cons(4, Cons(1, Cons(2, Cons(4, Cons(4, Cons(9, Cons(7, Cons(7, Cons(1, Cons(8, Cons(1, Cons(2, Cons(3, Cons(9, Cons(0, Cons(4, Cons(0, Cons(2, Cons(2, Cons(9, Cons(8, Cons(3, Cons(9, Cons(1, Cons(7, Cons(1, Cons(0, Cons(4, Cons(8, Cons(8, Cons(2, Cons(4, Cons(7, Cons(2, Cons(8, Cons(7, Cons(5, Cons(1, Cons(5, Cons(7, Cons(7, Cons(8, Cons(5, Cons(1, Cons(0, Cons(5, Cons(8, Cons(7, Cons(9, Cons(5, Cons(9, Cons(6, Cons(0, Cons(3, Cons(3, Cons(8, Cons(4, Cons(4, Cons(3, Cons(1, Cons(0, Cons(4, Cons(9, Cons(9, Cons(7, Cons(4, Cons(8, Cons(3, Cons(2, Cons(5, Cons(2, Cons(0, Cons(0, Cons(2, Cons(6, Cons(6, Cons(9, Cons(1, Cons(9, Cons(3, Cons(7, Cons(3, Cons(9, Cons(8, Cons(2, Cons(1, Cons(6, Cons(3, Cons(3, Cons(3, Cons(9, Cons(4, Cons(0, Cons(1, Cons(7, Cons(3, Cons(4, Cons(8, Cons(6, Cons(5, Cons(7, Cons(0, Cons(0, Cons(5, Cons(5, Cons(2, Cons(6, Cons(4, Cons(8, Cons(6, Cons(3, Cons(2, Cons(4, Cons(8, Cons(4, Cons(1, Cons(4, Cons(8, Cons(2, Cons(9, Cons(9, Cons(2, Cons(7, Cons(0, Cons(7, Cons(0, Cons(7, Cons(1, Cons(5, Cons(5, Cons(8, Cons(2, Cons(5, Cons(7, Cons(4, Cons(0, Cons(4, Cons(9, Cons(3, Cons(5, Cons(0, Cons(8, Cons(9, Cons(0, Cons(3, Cons(4, Cons(3, Cons(2, Cons(9, Cons(2, Cons(8, Cons(5, Cons(6, Cons(4, Cons(2, Cons(0, Cons(9, Cons(0, Cons(8, Cons(2, Cons(5, Cons(8, Cons(4, Cons(6, Cons(8, Cons(0, Cons(1, Cons(7, Cons(7, Cons(3, Cons(3, Cons(0, Cons(1, Cons(1, Cons(9, Cons(5, Cons(4, Cons(9, Cons(4, Cons(8, Cons(5, Cons(1, Cons(5, Cons(3, Cons(8, Cons(5, Cons(7, Cons(1, Cons(6, Cons(7, Cons(4, Cons(7, Cons(0, Cons(7, Cons(4, Cons(1, Cons(8, Cons(2, Cons(4, Cons(8, Cons(9, Cons(6, Cons(5, Cons(0, Cons(3, Cons(5, Cons(8, Cons(1, Cons(1, Cons(5, Cons(6, Cons(5, Cons(0, Cons(5, Cons(7, Cons(9, Cons(5, Cons(1, Cons(4, Cons(6, Cons(1, Cons(0, Cons(5, Cons(4, Cons(7, Cons(3, Cons(9, Cons(8, Cons(0, Cons(1, Cons(0, Cons(9, Cons(1, Cons(5, Cons(9, Cons(6, Cons(3, Cons(8, Cons(4, Cons(5, Cons(7, Cons(1, Cons(8, Cons(9, Cons(8, Cons(4, Cons(5, Cons(9, Cons(4, Cons(9, Cons(0, Cons(7, Cons(6, Cons(3, Cons(3, Cons(9, Cons(1, Cons(9, Cons(4, Cons(8, Cons(8, Cons(1, Cons(8, Cons(7, Cons(9, Cons(6, Cons(4, Cons(5, Cons(0, Cons(2, Cons(8, Cons(8, Cons(3, Cons(7, Cons(7, Cons(3, Cons(2, Cons(7, Cons(0, Cons(4, Cons(1, Cons(8, Cons(7, Cons(7, Cons(0, Cons(1, Cons(4, Cons(9, Cons(0, Cons(9, Cons(5, Cons(3, Cons(5, Cons(8, Cons(4, Cons(3, Cons(1, Cons(5, Cons(1, Cons(6, Cons(3, Cons(0, Cons(6, Cons(8, Cons(0, Cons(0, Cons(2, Cons(8, Cons(0, Cons(7, Cons(5, Cons(8, Cons(8, Cons(1, Cons(9, Cons(6, Cons(7, Cons(4, Cons(8, Cons(0, Cons(1, Cons(6, Cons(2, Cons(5, Cons(9, Cons(3, Cons(6, Cons(3, Cons(6, Cons(1, Cons(3, Cons(6, Cons(6, Cons(9, Cons(5, Cons(2, Cons(3, Cons(8, Cons(8, Cons(2, Cons(1, Cons(3, Cons(6, Cons(6, Cons(1, Cons(3, Cons(6, Cons(9, Cons(3, Cons(6, Cons(6, Cons(7, Cons(8, Nil
println("2000 " + sorttimerec(ls2000))
